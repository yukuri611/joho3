/////////////////////////////////////////////////////////////////
//////          Auto-generated by C2RTL+LLVM.11.0.0        //////
//////             C2RTL.ver.4.4.0 (10.02.2025)            //////
//////               All rights reserved                   //////
////// (C)2016-2025, New System Vision R&D Institute (NSV) //////
//////           CURRENT TIME 10:26:22 02.04.2025          //////
/////////////////////////////////////////////////////////////////


/*******************************************************
OPT_DisableStdErrOutput                           : 1
OPT_SilenceMsg                                    : 1
OPT_DisableTopCallerPointToLink                   : 0
OPT_DisableTopCallerArrayConversion               : 1
OPT_RangePrintMode                                : 0
OPT_RTLUsePipeFunction                            : 0
OPT_RTLUsePipeStackCompression                    : 0
OPT_RTLUsePipeWorkspace                           : 0
OPT_RTLMaxPipeFunctionSize                        : 0
OPT_RTLExpandUnmatchedBWLeafArray                 : 1
OPT_RTLDisableBaseClassName                       : 1
OPT_RTLShowLLVM_Inst                              : 0
OPT_RTLPipeRegAsyncReset                          : 1
OPT_RTL_FPGA_Mode                                 : 0
OPT_RTL_DualPortMemoryWrite1st                    : 0
OPT_RTL_RAM_INIT                                  : 0
OPT_RTL_DISABLE_VECTOR_DISPLAY                    : 1
OPT_RTL_DISABLE_VCD_DUMP                          : 1
OPT_DisableArrayLoadDecomposition                 : 1
OPT_RegArrayAddrPos                               : 1
OPT_DBG_ReduceArrayIndexLoad                      : 0
OPT_DBG_ComputeDist                               : 0
OPT_PrintRangeBits                                : 1
OPT_PrintExpandNodeAddr                           : 0
OPT_DBG_Range                                     : 0
OPT_DBG_RangeTruncate                             : 0
OPT_DBG_AssignPropagation                         : 1
OPT_ConstPrintMode                                : 1
OPT_InitializeWireRangeFromBitWidth               : 1
OPT_ForcePrintRangeUpdate                         : 0
OPT_PrintAllData                                  : 0
OPT_PrintAddDefNode                               : 0
OPT_DBG_Connectivity                              : 0
OPT_DBG_SplitDefUseChain                          : 0
OPT_DBG_IsReachable                               : 0
OPT_DBG_IsReachableInternal                       : 0
OPT_DBG_PipeDist                                  : 0
OPT_PrintPipeDist                                 : 0
OPT_DBG_PipeStageInitialize                       : 0
OPT_DBG_ShowLLVMTypeValue                         : 0
OPT_DBG_getContiguousData                         : 0
OPT_DBG_BWReachableNodes                          : 0
OPT_DBG_FWReachableNodes                          : 0
OPT_DBG_PipeDistUpdate                            : 0
OPT_HidePrintGateDist                             : 0
OPT_DefaultPipeStageCount                         : 8
OPT_OverridePipeStageCount                        : 0
OPT_PrintPipeStageCreate                          : 3
OPT_ShowRange                                     : 1
OPT_ShowGateCost                                  : 1
OPT_ShowBlockAddressInPathName                    : 0
OPT_ShowPathLevelsInPathName                      : 0
OPT_PrintCFGConnectivity                          : 1
OPT_ShowMiscFlag                                  : 0
OPT_SplitDefUseChainPending                       : 0
OPT_DBG_createIODistHeap                          : 0
OPT_EnableSelectionPropagation                    : 1
OPT_RelaxSelectionPropagationConstraint           : 1
OPT_DataLeafElementMaxCount                       : 100000
OPT_LoopUnrollMaxTripCount                        : 10000
OPT_EnableExternalRangeCap                        : 1
OPT_MergeMultipleArrayWrites                      : 1
OPT_MergeMultipleArrayReads                       : 1
OPT_PrintPipeGateStat                             : 0
OPT_PrintAreaProfile                              : 0
OPT_PrintCriticalPathInfo                         : 1
OPT_PrintControlPathsOnly                         : 0
OPT_PrintPhiBBCond                                : 0
OPT_EnableLLVMPatchOnShortProductSumBug           : 1
OPT_PrintInternalGlobals                          : 2
OPT_PrintCreateC2RType                            : 0
OPT_EnableCarryComputationMerge                   : 1
OPT_EnableAndOrRetiming                           : 1
OPT_RestrictAndOrRetimingOnTrees                  : 0
OPT_EnableOrRestructuring                         : 1
OPT_MultType                                      : 0
OPT_MultReduceRatio                               : 0
OPT_EnableXorTreeReduction                        : 1
OPT_MuxTreeReductionMinHeight                     : 0
OPT_PrintTreeHeightReductionDetail                : 0
OPT_EnableMuxQualifierReduction                   : 1
OPT_RestrictCreateMuxQualifier                    : 0
OPT_MuxQualifierNodeCountThreshold                : 5
OPT_EnableInternalNodeProbes                      : 0
OPT_PrintCFGConnection                            : 2
OPT_ClassMethodInstanceCount                      : 1
OPT_PIPE_OPT_UseRegCountAnnealing                 : 0
OPT_PIPE_OPT_AnnealingInitTempFactor              : 1000
OPT_PIPE_OPT_AnnealingCoolingTempFactor           : 990
OPT_PIPE_OPT_UseDistSlope                         : 0
OPT_PIPE_OPT_SelectMaxDist                        : 1
OPT_PIPE_OPT_SelectRandDistProb                   : 0
OPT_PIPE_OPT_RandSeed                             : 0
OPT_PIPE_OPT_distIterNodeCountRatio               : 0
OPT_PIPE_OPT_distIterCount                        : 500
OPT_PIPE_OPT_distRetryCount                       : 20
OPT_PIPE_OPT_regIterCount                         : 100
OPT_PIPE_OPT_regRetryCount                        : 30
OPT_PIPE_OPT_enableLateInsertion                  : 1
OPT_PIPE_OPT_assignDirectPathPipeStage            : 1
OPT_PIPE_OPT_minPipeDistCost                      : 5
OPT_PIPE_OPT_minimizePipeDistSquared              : 1
OPT_RTL_RAM_Exclusive_RW_NoChange                 : 1
OPT_PrintRangeTrucationException                  : 2
OPT_PrintSkipDependenceInputs                     : 0
OPT_SynchronizeDirectSignalPath                   : 1
OPT_DisableRelocateFeedbackPath                   : 0
OPT_DisableIncompatibleDirectPath                 : 0
OPT_SynchronizeStructMemberFeedbackWires          : 0
OPT_DefaultBitPreciseRTLC                         : 1
OPT_DisableRTLComments                            : 0
OPT_EnableVOBFS                                   : 0
OPT_DBG_NodeInst                                  : 0
OPT_Enable_printAllocaNodeMap                     : 0
OPT_Enable_printBlockInfo                         : 0
OPT_Enable_printReachablePaths                    : 0
OPT_RTL_NoTestVectorReturnValue                   : 0
OPT_RTL_ForceOutputPortOnTopArg                   : 1
OPT_DBG_GetCreateType                             : 0
OPT_DBG_INTERNAL_GLOBALS                          : 0
OPT_DBG_adjustDirectPathNodes                     : 0
OPT_EnableAndMaskReduction                        : 1
OPT_PrintCriticalPathMsg                          : 0
OPT_EnableLogFileOpenMsg                          : 0
OPT_MultDelayFactor                               : 0
OPT_CarryDelayFactor                              : 0
OPT_UseCheckSumTestVector                         : 0
OPT_TestVectorMaxSize                             : 0
OPT_EnableRTLCCollapsing                          : 0
OPT_EnableRTLCLogicalCollapsing                   : 0
OPT_EnablePrvStateCopy                            : 0
OPT_MaxFanoutRTLCCollapsing                       : 1
OPT_MaxAccFanoutRTLCCollapsing                    : 1
OPT_EnableRegArrayIndexWrite                      : 1
OPT_DBGPipeRelocate                               : 0
OPT_DisableMethodNameBinding                      : 0
OPT_EnableVarIndexAccessOnArrayStruct             : 1
OPT_DisableVarIndexAccessOnArrayStructWires       : 1
OPT_RTL_OmitPipeStageInfoInRTLLog                 : 0
OPT_TestBenchFineGrainLogThreshold                : 100000
OPT_EnableGateFanoutModel                         : 0
OPT_GateModel_EG_area                             : 1000
OPT_GateModel_EG_delay                            : 1000
OPT_GateModel_CG_area                             : 2000
OPT_GateModel_CG_delay                            : 2000
OPT_GateModel_FO_factor                           : 500
OPT_CriticalPathFOFactorSweepCount                : 10
OPT_CriticalPathSortType                          : 0
OPT_SlackHistogramSize                            : 20
OPT_EnableRedirectPipDistAlignedWireFeedbackUsers : 1
OPT_IgnoreUnassignedArrayReference                : 0
OPT_PatchRTLC_varIndexEnabled                     : 0
OPT_IgnoreUnmatchedBWLeafArray                    : 0
OPT_DisableDivDecompsition                        : 0
OPT_EnableUseSystemOutputSV                       : 1
OPT_EnablePipeRegBitWidthZLB                      : 1
OPT_EnablePipeRegBitWidthUsrTruncate              : 1
OPT_EnableInitRegWriter                           : 0
OPT_SplitRegFeedbackOnMaxStateDepth               : 0
OPT_EnableSplitRegFeedback                        : 0
OPT_DBGEnableSplitRegFeedback                     : 0
OPT_DBGStateGraphDepth                            : 0
OPT_EnableErrorOnUncleanSplitRegFeedback          : 0
OPT_DBGVarIndexGroup                              : 0
OPT_DBGMergeGroup                                 : 0
OPT_RTL_EnableMemWrapperAtSystemLevel             : 0
OPT_EnableMemoryByteAddress                       : 0
OPT_ExtractMemoryPortPaths                        : 0
OPT_ShowAllFWCombPaths                            : 0
OPT_ShowFWCombPathsWithWireFeedback               : 1
OPT_ShowPipeLockedNodes                           : 0
OPT_UseImplicitClockGating                        : 1
OPT_EnablePipeRegClockGating                      : 0
OPT_EnablePipeRegClockGatingMonitor               : 0
OPT_EnableMemoryClockGating                       : 0
OPT_DBGcomputePipeDistBW                          : 0
OPT_RTL_USE_MEMORY_INIT_FILE_MACRO                : 1
*******************************************************/
/*-------------------------------------------------------------------------------------------------------------
final pipe layout
P( 1): 505 nodes,   1362.0 gates,    0 pipeRegs (    0 pipes,   12 states, 0 FBs), IO(  0,  0),GIO( 1, 1),D(  30.0),pd( 0, 0)
-------------------------------------------------------------------------------------------------------------
Total: 505 nodes,   1362.0 gates,    0 pipeRegs (    0 pipes,   12 states, 0 FBs), I(  0),O(  0),D(  30.0),maxD(  30.0 :   30.0)
Total    1440.0 gates (combined) :   1362.0 (comb-gates) +   12 (reg-bits) * 6.50 (gates/FF) + 0 memBits
-------------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------------
[TOTAL] 505 nodes, 1,440 totalGates, 1,362 combGates, 12 regBits, 0 memBits, 0 totalMemBits
    OP(&) : U1 x 72 (72 gates)
----- OP(&) : total 72 gates, 72 ops -----
    OP(|) : U32 x 2 (64 gates), U2 x 4 (8 gates), U1 x 52 (52 gates)
----- OP(|) : total 124 gates, 58 ops -----
    OP(==) : U1 x 28 (148 gates)
----- OP(==) : total 148 gates, 28 ops -----
    OP(?) : U32 x 23 (736 gates), U4 x 18 (72 gates), U3 x 12 (36 gates), U2 x 20 (44 gates), U1 x 122 (130 gates)
----- OP(?) : total 1,018 gates, 195 ops -----
========= ALL : 1,362 gates =========
-------------------------------------------------------------------------------------------------------------*/

/*
+++++++++++++++++++++++++++++++ criticalPath info +++++++++++++++++++++++++++++++
foFactor = 0.000, maxD = 30.000, src = P1 : area(   58.0,    2.0),latency(   28.0,    1.0),carry(    0.0,    0.0),foSum(  137.000,  42.595,  33.923,    0),foAve(5.269,1.638,1.305,0.000),foStd(3.111,0.315,0.140),foNormL2(  85.223),nodeCount(    26)
====================== (src: P1) =======================
 0 : P1 : dfw(  0.000) dbw( 30.000) slack(  0.000) (NL)[(nop)] G.(*bus).m_ch[0].waddr.m.addr 
 1 : P1 : dfw(  0.000) dbw( 30.000) slack(  0.000) (NL)[&] I.decodeAddr.1.B1.0 = G.(*bus).m_ch[0].waddr.m.addr & (-16) (./rv32_io.h:L228)          
 2 : P1 : dfw(  5.000) dbw( 25.000) slack(  0.000) (L5.0+A31.0+fo1+ld[1]+S)[==] I.decodeAddr.1.B1.1 = I.decodeAddr.1.B1.0 == 268435520 (./rv32_io.h:L228)          
 3 : P1 : dfw(  6.000) dbw( 24.000) slack(  0.000) (L1.0+A2.0+fo4+ld[2:0:1])[?] I.decodeAddr.1.B1.4 = (I.decodeAddr.1.B1.3) ? 2 : I.decodeAddr.1.B1.1 (./rv32_io.h:L228)          
 4 : P1 : dfw(  6.000) dbw( 24.000) slack(  0.000) (NL)[=] L.decodeAddr.1.RET = I.decodeAddr.1.B1.4                   (./rv32_io.h:L234)          
 5 : P1 : dfw(  6.000) dbw( 24.000) slack(  0.000) (NL)[=] I.checkMWReq.B5.0  = L.decodeAddr.1.RET                    (./rv32_io.h:L345)          
 6 : P1 : dfw(  6.000) dbw( 24.000) slack(  0.000) (NL)[&] N.332              = I.checkMWReq.B5.0 & 3                 (./rv32_io.h:L345)          
 7 : P1 : dfw(  7.000) dbw( 23.000) slack(  0.000) (L1.0+A1.0+fo2+ld[1]+S)[==] N.709 = N.332 == 0                     (./rv32_io.h:L345)          
 8 : P1 : dfw(  8.000) dbw( 22.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[?] N.711 = (N.709) ? MA.855 : 0            (./rv32_io.h:L345)          
 9 : P1 : dfw(  9.000) dbw( 21.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] O.859 = N.717 | N.711                   (./rv32_io.h:L345)          
10 : P1 : dfw( 10.000) dbw( 20.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] I.checkMWReq.B5.1 = N.714 | O.859       (./rv32_io.h:L345)          
11 : P1 : dfw( 10.000) dbw( 20.000) slack(  0.000) (fo2+ld[1])[!] I.checkMWReq.B5.2 = ! I.checkMWReq.B5.1             (./rv32_io.h:L345)          
12 : P1 : dfw( 11.000) dbw( 19.000) slack(  0.000) (L1.0+A1.0+fo4+ld[1:1])[&] CP.checkMWReq.B5.F1 = CP.checkMWReq.B3.F2 & I.checkMWReq.B5.2 (./rv32_io.h:L345)          
13 : P1 : dfw( 12.000) dbw( 18.000) slack(  0.000) (L1.0+A2.0+fo1+ld[2:1])[?] MA.878 = (CP.checkMWReq.B5.F1) ? I.checkMWReq.B7.1 : 0 (./rv32_io.h:L315,L347)     
14 : P1 : dfw( 13.000) dbw( 17.000) slack(  0.000) (L1.0+A2.0+fo4+ld[2:1])[?] G._(*this).MWStat[0].reqSlaveID = (I.checkMWReq.B6.1) ? MA.878 : 0 (./rv32_io.h:L315,L347)     
15 : P1 : dfw( 14.000) dbw( 16.000) slack(  0.000) (L1.0+A1.0+fo2+ld[1]+S)[==] I.arbitrate.4.B03.1 = G._(*this).MWStat[0].reqSlaveID == 1 (./rv32_io.h:L354)          
16 : P1 : dfw( 15.000) dbw( 15.000) slack(  0.000) (L1.0+A1.0+fo3+ld[1:1])[&] CP.arbitrate.4.B03.F1 = CP.arbitrate.3.B02.F2 & I.arbitrate.4.B03.1 (./rv32_io.h:L354)          
17 : P1 : dfw( 16.000) dbw( 14.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] CM.665 = CP.arbitrate.4.B03.F1 | CP.arbitrate.3.B02.F2 (./rv32_io.h:L354,L354,L354)
18 : P1 : dfw( 17.000) dbw( 13.000) slack(  0.000) (L1.0+A1.0+fo3+ld[1:1])[?] CP.arbitrate.4.B05.F1 = (CM.665) ? DM.666 : 1 (./rv32_io.h:L359)          
19 : P1 : dfw( 18.000) dbw( 12.000) slack(  0.000) (L1.0+A1.0+fo2+ld[1:1])[&] CP.arbitrate.4.B07.F1 = A.884 & CP.arbitrate.4.B05.F1 (./rv32_io.h:L359)          
20 : P1 : dfw( 19.000) dbw( 11.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] CM.279 = CP.arbitrate.4.B07.F1 | CP.arbitrate.4.B03.F1 (./rv32_io.h:L315,L355,L360)
21 : P1 : dfw( 20.000) dbw( 10.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] CM.282 = CM.278 | CM.279                (./rv32_io.h:L315,L355,L360)
22 : P1 : dfw( 21.000) dbw(  9.000) slack(  0.000) (L1.0+A1.0+fo10+ld[1:0:1])[?] G._(*this).MWStat[0].granted = (CM.282) ? 1 : CM.280 (./rv32_io.h:L315,L355,L360)
23 : P1 : dfw( 22.000) dbw(  8.000) slack(  0.000) (L1.0+A2.0+fo2+ld[2:1])[?] DM.275 = (G._(*this).MWStat[0].granted) ? G._(*this).MWStat[0].reqSlaveID : 0 (./rv32_io.h:L312,L314)     
24 : P1 : dfw( 24.000) dbw(  6.000) slack(  0.000) (L2.0+A4.0+fo3+ld[2:1:1])[?] L.AXI4L_CTRL_1_3__connectChannel.alc3 = (G._(*this).MWStat[0].granted) ? DM.275 : G.prv._(*this).MWStat[0].slaveID (./rv32_io.h:L407,L409)     
25 : P1 : dfw( 24.000) dbw(  6.000) slack(  0.000) (NL)[=] I.updateMWStat.B06.1 = L.AXI4L_CTRL_1_3__connectChannel.alc3 (./rv32_io.h:L416)          
26 : P1 : dfw( 24.000) dbw(  6.000) slack(  0.000) (NL)[&] N.330              = I.updateMWStat.B06.1 & 3              (./rv32_io.h:L416)          
27 : P1 : dfw( 25.000) dbw(  5.000) slack(  0.000) (L1.0+A1.0+fo84+ld[1]+S)[==] N.342 = N.330 == 0                    (./rv32_io.h:L411,L416)     
28 : P1 : dfw( 26.000) dbw(  4.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[?] MA.951 = (N.342) ? G.(*bus).s_ch[0].waddr.s.ready : 0 (./rv32_io.h:L142)          
29 : P1 : dfw( 27.000) dbw(  3.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] MAO.984 = MA.951 | MA.963               (./rv32_io.h:L142)          
30 : P1 : dfw( 28.000) dbw(  2.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] MAO.993 = MA.975 | MAO.984              (./rv32_io.h:L142)          
31 : P1 : dfw( 29.000) dbw(  1.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[?] I.set_0.1.B1.0 = (L.updateMWStat.RET) ? MAO.993 : 0 (./rv32_io.h:L142)          
32 : P1 : dfw( 30.000) dbw(  0.000) slack(  0.000) (L1.0+A1.0+ld[1:1])[?] DM.376 = (L.updateMWStat.RET) ? I.set_0.1.B1.0 : 0 (./rv32_io.h:L141)          
33 : P1 : dfw( 30.000) dbw(  0.000) slack(  0.000) (NL)[=] G.(*bus).m_ch[0].waddr.s.ready = DM.376                    (./rv32_io.h:L141)          
CriticalPath : D(30.000), DC(30.000)
************** slack histogram (shsize = 20, totalDelayNodeCount = 375) ************** 
(  0) [  0.000 -   1.500] : area(  474.0,    4.0),latency(  164.0,    2.0),carry(    0.0,    0.0),foSum(  641.000, 216.652, 180.397,    0),foAve(4.162,1.407,1.171,0.000),foStd(1.149,0.119,0.054),foNormL2( 184.383),nodeCount(   154)
(  1) [  1.500 -   3.000] : area(  105.0,    2.0),latency(   49.0,    2.0),carry(    0.0,    0.0),foSum(  607.000,  94.828,  65.092,    0),foAve(11.241,1.756,1.205,0.000),foStd(5.684,0.389,0.164),foNormL2( 317.876),nodeCount(    54)
(  2) [  3.000 -   4.500] : area(  699.0,    0.0),latency(   87.0,    0.0),carry(    0.0,    0.0),foSum(   67.000,  56.384,  54.194,    0),foAve(0.744,0.626,0.602,0.000),foStd(0.105,0.063,0.057),foNormL2(  11.790),nodeCount(    90)
(  3) [  4.500 -   6.000] : area(    7.0,    0.0),latency(    7.0,    0.0),carry(    0.0,    0.0),foSum(   14.000,   9.646,   8.913,    0),foAve(1.400,0.965,0.891,0.000),foStd(0.603,0.217,0.165),foNormL2(   7.483),nodeCount(    10)
(  4) [  6.000 -   7.500] : area(    5.0,    0.0),latency(    5.0,    0.0),carry(    0.0,    0.0),foSum(   12.000,   7.646,   6.913,    0),foAve(1.200,0.765,0.691,0.000),foStd(0.629,0.248,0.197),foNormL2(   7.348),nodeCount(    10)
(  5) [  7.500 -   9.000] : area(   14.0,    4.0),latency(   13.0,    4.0),carry(    0.0,    0.0),foSum(   17.000,  17.000,  17.000,    0),foAve(0.895,0.895,0.895,0.000),foStd(0.070,0.070,0.070),foNormL2(   4.123),nodeCount(    19)
(  6) [  9.000 -  10.500] : area(   10.0,    2.0),latency(   10.0,    2.0),carry(    0.0,    0.0),foSum(   12.000,  12.000,  12.000,    0),foAve(1.000,1.000,1.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   3.464),nodeCount(    12)
(  7) [ 10.500 -  12.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  8) [ 12.000 -  13.500] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    2.000,   2.000,   2.000,    0),foAve(1.000,1.000,1.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   1.414),nodeCount(     2)
(  9) [ 13.500 -  15.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 10) [ 15.000 -  16.500] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 11) [ 16.500 -  18.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 12) [ 18.000 -  19.500] : area(   24.0,    0.0),latency(   24.0,    0.0),carry(    0.0,    0.0),foSum(   30.000,  26.000,  25.175,    0),foAve(1.250,1.083,1.049,0.000),foStd(0.169,0.056,0.033),foNormL2(   7.348),nodeCount(    24)
( 13) [ 19.500 -  21.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 14) [ 21.000 -  22.500] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 15) [ 22.500 -  24.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 16) [ 24.000 -  25.500] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 17) [ 25.500 -  27.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 18) [ 27.000 -  28.500] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 19) [ 28.500 -  30.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
*/

/**********************************************************
AXI4L_CTRL_1_3__connectChannel : _ZN5AXI4L4CTRLILi1ELi3EE14connectChannelEPNS_3BUSILi1ELi3EEE  : root function
resetAllChannelSinks           : _ZN5AXI4L3BUSILi1ELi3EE20resetAllChannelSinksEv               : called @  ./rv32_io.h:L377 
resetMA.0                      : _ZN5AXI4L2CH7resetMAEv                                        : called @  ./rv32_io.h:L301 
resetMARead                    : _ZN5AXI4L2CH11resetMAReadEv                                   : called @  ./rv32_io.h:L192 
reset_6.0                      : _ZN5AXI4L2CH4ADDR2MA5resetEv                                  : called @  ./rv32_io.h:L193 
set_11.0                       : _ZN5AXI4L2CH4ADDR2MA3setEjhhhh                                : called @  ./rv32_io.h:L137 
reset_9.0                      : _ZN5AXI4L2CH4RDAT2MA5resetEv                                  : called @  ./rv32_io.h:L193 
set_16.0                       : _ZN5AXI4L2CH4RDAT2MA3setEh                                    : called @  ./rv32_io.h:L151 
resetMAWrite                   : _ZN5AXI4L2CH12resetMAWriteEv                                  : called @  ./rv32_io.h:L192 
reset_6.1                      : _ZN5AXI4L2CH4ADDR2MA5resetEv                                  : called @  ./rv32_io.h:L194 
set_11.1                       : _ZN5AXI4L2CH4ADDR2MA3setEjhhhh                                : called @  ./rv32_io.h:L137 
reset_7.0                      : _ZN5AXI4L2CH4WDAT2MA5resetEv                                  : called @  ./rv32_io.h:L194 
set_10.0                       : _ZN5AXI4L2CH4WDAT2MA3setEjhhh                                 : called @  ./rv32_io.h:L165 
reset_8.0                      : _ZN5AXI4L2CH4WRES2MA5resetEv                                  : called @  ./rv32_io.h:L194 
set_9.0                        : _ZN5AXI4L2CH4WRES2MA3setEh                                    : called @  ./rv32_io.h:L179 
resetMA.1                      : _ZN5AXI4L2CH7resetMAEv                                        : called @  ./rv32_io.h:L301 
resetMARead.1                  : _ZN5AXI4L2CH11resetMAReadEv                                   : called @  ./rv32_io.h:L192 
reset_6.2                      : _ZN5AXI4L2CH4ADDR2MA5resetEv                                  : called @  ./rv32_io.h:L193 
set_11.2                       : _ZN5AXI4L2CH4ADDR2MA3setEjhhhh                                : called @  ./rv32_io.h:L137 
reset_9.1                      : _ZN5AXI4L2CH4RDAT2MA5resetEv                                  : called @  ./rv32_io.h:L193 
set_16.1                       : _ZN5AXI4L2CH4RDAT2MA3setEh                                    : called @  ./rv32_io.h:L151 
resetMAWrite.1                 : _ZN5AXI4L2CH12resetMAWriteEv                                  : called @  ./rv32_io.h:L192 
reset_6.3                      : _ZN5AXI4L2CH4ADDR2MA5resetEv                                  : called @  ./rv32_io.h:L194 
set_11.3                       : _ZN5AXI4L2CH4ADDR2MA3setEjhhhh                                : called @  ./rv32_io.h:L137 
reset_7.1                      : _ZN5AXI4L2CH4WDAT2MA5resetEv                                  : called @  ./rv32_io.h:L194 
set_10.1                       : _ZN5AXI4L2CH4WDAT2MA3setEjhhh                                 : called @  ./rv32_io.h:L165 
reset_8.1                      : _ZN5AXI4L2CH4WRES2MA5resetEv                                  : called @  ./rv32_io.h:L194 
set_9.1                        : _ZN5AXI4L2CH4WRES2MA3setEh                                    : called @  ./rv32_io.h:L179 
resetMA.2                      : _ZN5AXI4L2CH7resetMAEv                                        : called @  ./rv32_io.h:L301 
resetMARead.2                  : _ZN5AXI4L2CH11resetMAReadEv                                   : called @  ./rv32_io.h:L192 
reset_6.4                      : _ZN5AXI4L2CH4ADDR2MA5resetEv                                  : called @  ./rv32_io.h:L193 
set_11.4                       : _ZN5AXI4L2CH4ADDR2MA3setEjhhhh                                : called @  ./rv32_io.h:L137 
reset_9.2                      : _ZN5AXI4L2CH4RDAT2MA5resetEv                                  : called @  ./rv32_io.h:L193 
set_16.2                       : _ZN5AXI4L2CH4RDAT2MA3setEh                                    : called @  ./rv32_io.h:L151 
resetMAWrite.2                 : _ZN5AXI4L2CH12resetMAWriteEv                                  : called @  ./rv32_io.h:L192 
reset_6.5                      : _ZN5AXI4L2CH4ADDR2MA5resetEv                                  : called @  ./rv32_io.h:L194 
set_11.5                       : _ZN5AXI4L2CH4ADDR2MA3setEjhhhh                                : called @  ./rv32_io.h:L137 
reset_7.2                      : _ZN5AXI4L2CH4WDAT2MA5resetEv                                  : called @  ./rv32_io.h:L194 
set_10.2                       : _ZN5AXI4L2CH4WDAT2MA3setEjhhh                                 : called @  ./rv32_io.h:L165 
reset_8.2                      : _ZN5AXI4L2CH4WRES2MA5resetEv                                  : called @  ./rv32_io.h:L194 
set_9.2                        : _ZN5AXI4L2CH4WRES2MA3setEh                                    : called @  ./rv32_io.h:L179 
resetSL                        : _ZN5AXI4L2CH7resetSLEv                                        : called @  ./rv32_io.h:L302 
resetSLRead                    : _ZN5AXI4L2CH11resetSLReadEv                                   : called @  ./rv32_io.h:L195 
reset_2.0                      : _ZN5AXI4L2CH4ADDR2SL5resetEv                                  : called @  ./rv32_io.h:L200 
set_5.0                        : _ZN5AXI4L2CH4ADDR2SL3setEh                                    : called @  ./rv32_io.h:L143 
reset_5.0                      : _ZN5AXI4L2CH4RDAT2SL5resetEv                                  : called @  ./rv32_io.h:L200 
set_14.0                       : _ZN5AXI4L2CH4RDAT2SL3setEjhhh                                 : called @  ./rv32_io.h:L157 
resetSLWrite                   : _ZN5AXI4L2CH12resetSLWriteEv                                  : called @  ./rv32_io.h:L195 
reset_2.1                      : _ZN5AXI4L2CH4ADDR2SL5resetEv                                  : called @  ./rv32_io.h:L201 
set_5.1                        : _ZN5AXI4L2CH4ADDR2SL3setEh                                    : called @  ./rv32_io.h:L143 
reset_3.0                      : _ZN5AXI4L2CH4WDAT2SL5resetEv                                  : called @  ./rv32_io.h:L201 
set_4.0                        : _ZN5AXI4L2CH4WDAT2SL3setEh                                    : called @  ./rv32_io.h:L171 
reset_4.0                      : _ZN5AXI4L2CH4WRES2SL5resetEv                                  : called @  ./rv32_io.h:L201 
set_3.0                        : _ZN5AXI4L2CH4WRES2SL3setEhh                                   : called @  ./rv32_io.h:L185 
checkMRReq                     : _ZN5AXI4L4CTRLILi1ELi3EE10checkMRReqEPNS_3BUSILi1ELi3EEEi     : called @  ./rv32_io.h:L379 
resetFlags.0                   : _ZN5AXI4L12MasterStatus10resetFlagsEv                         : called @  ./rv32_io.h:L330 
decodeAddr.0                   : _ZN5AXI4L10decodeAddrEj                                       : called @  ./rv32_io.h:L332 
checkMWReq                     : _ZN5AXI4L4CTRLILi1ELi3EE10checkMWReqEPNS_3BUSILi1ELi3EEEi     : called @  ./rv32_io.h:L379 
resetFlags.1                   : _ZN5AXI4L12MasterStatus10resetFlagsEv                         : called @  ./rv32_io.h:L342 
decodeAddr.1                   : _ZN5AXI4L10decodeAddrEj                                       : called @  ./rv32_io.h:L344 
arbitrateMR                    : _ZN5AXI4L4CTRLILi1ELi3EE11arbitrateMREv                       : called @  ./rv32_io.h:L380 
arbitrate.0                    : _ZN5AXI4L4CTRLILi1ELi3EE9arbitrateEhPNS_12MasterStatusEh      : called @  ./rv32_io.h:L367 
arbitrate.1                    : _ZN5AXI4L4CTRLILi1ELi3EE9arbitrateEhPNS_12MasterStatusEh      : called @  ./rv32_io.h:L367 
arbitrate.2                    : _ZN5AXI4L4CTRLILi1ELi3EE9arbitrateEhPNS_12MasterStatusEh      : called @  ./rv32_io.h:L367 
arbitrateMW                    : _ZN5AXI4L4CTRLILi1ELi3EE11arbitrateMWEv                       : called @  ./rv32_io.h:L380 
arbitrate.3                    : _ZN5AXI4L4CTRLILi1ELi3EE9arbitrateEhPNS_12MasterStatusEh      : called @  ./rv32_io.h:L372 
arbitrate.4                    : _ZN5AXI4L4CTRLILi1ELi3EE9arbitrateEhPNS_12MasterStatusEh      : called @  ./rv32_io.h:L372 
arbitrate.5                    : _ZN5AXI4L4CTRLILi1ELi3EE9arbitrateEhPNS_12MasterStatusEh      : called @  ./rv32_io.h:L372 
updateMRStat                   : _ZN5AXI4L4CTRLILi1ELi3EE12updateMRStatEPNS_3BUSILi1ELi3EEEiPi : called @  ./rv32_io.h:L382 
reset_1.0                      : _ZN5AXI4L12MasterStatus5resetEv                               : called @  ./rv32_io.h:L400 
set_12.0                       : _ZN5AXI4L12MasterStatus3setEhh                                : called @  ./rv32_io.h:L394 
connectRCh                     : _ZN5AXI4L2CH10connectRChERS0_S1_                              : called @  ./rv32_io.h:L382 
setMARead_0                    : _ZN5AXI4L2CH9setMAReadERS0_                                   : called @  ./rv32_io.h:L202 
set_6.0                        : _ZN5AXI4L2CH4ADDR2MA3setERS2_                                 : called @  ./rv32_io.h:L190 
set_11.6                       : _ZN5AXI4L2CH4ADDR2MA3setEjhhhh                                : called @  ./rv32_io.h:L136 
set_15.0                       : _ZN5AXI4L2CH4RDAT2MA3setERS2_                                 : called @  ./rv32_io.h:L190 
set_16.3                       : _ZN5AXI4L2CH4RDAT2MA3setEh                                    : called @  ./rv32_io.h:L150 
setSLRead_0                    : _ZN5AXI4L2CH9setSLReadERS0_                                   : called @  ./rv32_io.h:L202 
set_0.0                        : _ZN5AXI4L2CH4ADDR2SL3setERS2_                                 : called @  ./rv32_io.h:L198 
set_5.2                        : _ZN5AXI4L2CH4ADDR2SL3setEh                                    : called @  ./rv32_io.h:L142 
set_13.0                       : _ZN5AXI4L2CH4RDAT2SL3setERS2_                                 : called @  ./rv32_io.h:L198 
set_14.1                       : _ZN5AXI4L2CH4RDAT2SL3setEjhhh                                 : called @  ./rv32_io.h:L156 
updateMWStat                   : _ZN5AXI4L4CTRLILi1ELi3EE12updateMWStatEPNS_3BUSILi1ELi3EEEiPi : called @  ./rv32_io.h:L385 
reset_1.1                      : _ZN5AXI4L12MasterStatus5resetEv                               : called @  ./rv32_io.h:L416 
set_12.1                       : _ZN5AXI4L12MasterStatus3setEhh                                : called @  ./rv32_io.h:L410 
connectWCh                     : _ZN5AXI4L2CH10connectWChERS0_S1_                              : called @  ./rv32_io.h:L385 
setMAWrite_0                   : _ZN5AXI4L2CH10setMAWriteERS0_                                 : called @  ./rv32_io.h:L203 
set_6.1                        : _ZN5AXI4L2CH4ADDR2MA3setERS2_                                 : called @  ./rv32_io.h:L191 
set_11.7                       : _ZN5AXI4L2CH4ADDR2MA3setEjhhhh                                : called @  ./rv32_io.h:L136 
set_7.0                        : _ZN5AXI4L2CH4WDAT2MA3setERS2_                                 : called @  ./rv32_io.h:L191 
set_10.3                       : _ZN5AXI4L2CH4WDAT2MA3setEjhhh                                 : called @  ./rv32_io.h:L164 
set_8.0                        : _ZN5AXI4L2CH4WRES2MA3setERS2_                                 : called @  ./rv32_io.h:L191 
set_9.3                        : _ZN5AXI4L2CH4WRES2MA3setEh                                    : called @  ./rv32_io.h:L178 
setSLWrite_0                   : _ZN5AXI4L2CH10setSLWriteERS0_                                 : called @  ./rv32_io.h:L203 
set_0.1                        : _ZN5AXI4L2CH4ADDR2SL3setERS2_                                 : called @  ./rv32_io.h:L199 
set_5.3                        : _ZN5AXI4L2CH4ADDR2SL3setEh                                    : called @  ./rv32_io.h:L142 
set_1.0                        : _ZN5AXI4L2CH4WDAT2SL3setERS2_                                 : called @  ./rv32_io.h:L199 
set_4.1                        : _ZN5AXI4L2CH4WDAT2SL3setEh                                    : called @  ./rv32_io.h:L170 
set_2.0                        : _ZN5AXI4L2CH4WRES2SL3setERS2_                                 : called @  ./rv32_io.h:L199 
set_3.1                        : _ZN5AXI4L2CH4WRES2SL3setEhh                                   : called @  ./rv32_io.h:L184 
-----------------------------------------------------------
there are 13 unowned nodes...
(0:G.prv._(*this).roundRobinRVal)(1:G.prv._(*this).roundRobinWVal)(2:G.prv._(*this).MRStat[0].slaveID)(3:G.prv._(*this).MRStat[0].active)
(4:G.prv._(*this).MWStat[0].slaveID)(5:G.prv._(*this).MWStat[0].active)(6:G.prv._(*this).SRStat[1].active)(7:G.prv._(*this).SRStat[2].active)
(8:G.prv._(*this).SWStat[1].active)(9:G.prv._(*this).SWStat[2].active)(10:G.prv._(*this).SRStat[0].active)(11:G.prv._(*this).SWStat[0].active)
(12:L.AXI4L_CTRL_1_3__connectChannel.alc3.v1)
(unownedNodeStats : 4.0 gates, 13 nodes) : 4.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
(_AXI4L_CTRL_1_3__connectChannel : 1436.0 gates, 492 nodes) : 1358.0 comb-gates + 0 pipeBits + 12 stateBits + 0 FBBits
  (excl.sub-modules : 776.0 gates, 206 nodes) : 776.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_1_resetAllChannelSinks : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_1_1_resetMA : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_1_1_1_resetMARead : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_1_1_1_reset_6 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_1_1_1_1_set_11 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_1_1_2_reset_9 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_1_1_2_1_set_16 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_1_1_2_resetMAWrite : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_1_2_1_reset_6 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_1_2_1_1_set_11 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_1_2_2_reset_7 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_1_2_2_1_set_10 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_1_2_3_reset_8 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_1_2_3_1_set_9 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_1_2_resetMA : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_1_2_1_resetMARead : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_2_1_1_reset_6 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_2_1_1_1_set_11 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_2_1_2_reset_9 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_2_1_2_1_set_16 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_1_2_2_resetMAWrite : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_2_2_1_reset_6 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_2_2_1_1_set_11 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_2_2_2_reset_7 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_2_2_2_1_set_10 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_2_2_3_reset_8 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_2_2_3_1_set_9 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_1_3_resetMA : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_1_3_1_resetMARead : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_3_1_1_reset_6 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_3_1_1_1_set_11 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_3_1_2_reset_9 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_3_1_2_1_set_16 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_1_3_2_resetMAWrite : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_3_2_1_reset_6 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_3_2_1_1_set_11 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_3_2_2_reset_7 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_3_2_2_1_set_10 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_3_2_3_reset_8 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_3_2_3_1_set_9 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_1_4_resetSL : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_1_4_1_resetSLRead : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_4_1_1_reset_2 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_4_1_1_1_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_4_1_2_reset_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_4_1_2_1_set_14 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_1_4_2_resetSLWrite : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_4_2_1_reset_2 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_4_2_1_1_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_4_2_2_reset_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_4_2_2_1_set_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_1_4_2_3_reset_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_1_4_2_3_1_set_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_2_checkMRReq : 91.0 gates, 36 nodes) : 91.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 27.0 gates, 31 nodes) : 27.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_2_1_resetFlags : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_2_2_decodeAddr : 64.0 gates, 5 nodes) : 64.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_3_checkMWReq : 91.0 gates, 36 nodes) : 91.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 27.0 gates, 31 nodes) : 27.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_3_1_resetFlags : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_3_2_decodeAddr : 64.0 gates, 5 nodes) : 64.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_4_arbitrateMR : 40.0 gates, 39 nodes) : 40.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 2.0 gates, 3 nodes) : 2.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_4_1_arbitrate : 14.0 gates, 14 nodes) : 14.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_4_2_arbitrate : 12.0 gates, 11 nodes) : 12.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_4_3_arbitrate : 12.0 gates, 11 nodes) : 12.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_5_arbitrateMW : 40.0 gates, 39 nodes) : 40.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 2.0 gates, 3 nodes) : 2.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_5_1_arbitrate : 14.0 gates, 14 nodes) : 14.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_5_2_arbitrate : 12.0 gates, 11 nodes) : 12.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_5_3_arbitrate : 12.0 gates, 11 nodes) : 12.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_6_updateMRStat : 70.0 gates, 38 nodes) : 31.0 comb-gates + 0 pipeBits + 6 stateBits + 0 FBBits
    (excl.sub-modules : 70.0 gates, 38 nodes) : 31.0 comb-gates + 0 pipeBits + 6 stateBits + 0 FBBits
    (_6_1_reset_1 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_6_2_set_12 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_7_connectRCh : 225.0 gates, 33 nodes) : 225.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_7_1_setMARead_0 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_7_1_1_set_6 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_7_1_1_1_set_11 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_7_1_2_set_15 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_7_1_2_1_set_16 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_7_2_setSLRead_0 : 225.0 gates, 33 nodes) : 225.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_7_2_1_set_0 : 6.0 gates, 6 nodes) : 6.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 6.0 gates, 6 nodes) : 6.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_7_2_1_1_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_7_2_2_set_13 : 219.0 gates, 27 nodes) : 219.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 219.0 gates, 27 nodes) : 219.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_7_2_2_1_set_14 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_8_updateMWStat : 70.0 gates, 38 nodes) : 31.0 comb-gates + 0 pipeBits + 6 stateBits + 0 FBBits
    (excl.sub-modules : 70.0 gates, 38 nodes) : 31.0 comb-gates + 0 pipeBits + 6 stateBits + 0 FBBits
    (_8_1_reset_1 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_8_2_set_12 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_9_connectWCh : 33.0 gates, 27 nodes) : 33.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_9_1_setMAWrite_0 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_9_1_1_set_6 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_9_1_1_1_set_11 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_9_1_2_set_7 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_9_1_2_1_set_10 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_9_1_3_set_8 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_9_1_3_1_set_9 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_9_2_setSLWrite_0 : 33.0 gates, 27 nodes) : 33.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_9_2_1_set_0 : 6.0 gates, 6 nodes) : 6.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 6.0 gates, 6 nodes) : 6.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_9_2_1_1_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_9_2_2_set_1 : 6.0 gates, 6 nodes) : 6.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 6.0 gates, 6 nodes) : 6.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_9_2_2_1_set_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_9_2_3_set_2 : 21.0 gates, 15 nodes) : 21.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 21.0 gates, 15 nodes) : 21.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_9_2_3_1_set_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
*********************************************************
_AXI4L_CTRL_1_3__connectChannel :     776.0 gates(acc:  54.04%),     776.0 comb-gates +    0 pipeBits +   0 stateBits +   0 FBBits
                  _7_2_2_set_13 :     219.0 gates(acc:  69.29%),     219.0 comb-gates +    0 pipeBits +   0 stateBits +   0 FBBits
                _8_updateMWStat :      70.0 gates(acc:  74.16%),      31.0 comb-gates +    0 pipeBits +   6 stateBits +   0 FBBits
                _6_updateMRStat :      70.0 gates(acc:  79.04%),      31.0 comb-gates +    0 pipeBits +   6 stateBits +   0 FBBits
                _2_2_decodeAddr :      64.0 gates(acc:  83.50%),      64.0 comb-gates +    0 pipeBits +   0 stateBits +   0 FBBits
                _3_2_decodeAddr :      64.0 gates(acc:  87.95%),      64.0 comb-gates +    0 pipeBits +   0 stateBits +   0 FBBits
                  _2_checkMRReq :      27.0 gates(acc:  89.83%),      27.0 comb-gates +    0 pipeBits +   0 stateBits +   0 FBBits
                  _3_checkMWReq :      27.0 gates(acc:  91.71%),      27.0 comb-gates +    0 pipeBits +   0 stateBits +   0 FBBits
**********************************************************/



module AXI4L_CTRL_1_3__connectChannel   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_bus_m_ch_0_raddr_m_addr, G_bus_m_ch_0_raddr_m_size, G_bus_m_ch_0_raddr_m_valid, 
    G_bus_m_ch_0_raddr_m_len, G_bus_m_ch_0_raddr_m_prot, G_bus_m_ch_0_waddr_m_addr, 
    G_bus_m_ch_0_waddr_m_size, G_bus_m_ch_0_waddr_m_valid, G_bus_m_ch_0_waddr_m_len, 
    G_bus_m_ch_0_waddr_m_prot, G_bus_m_ch_0_rdat_m_ready, G_bus_m_ch_0_wdat_m_data, 
    G_bus_m_ch_0_wdat_m_strobe, G_bus_m_ch_0_wdat_m_valid, G_bus_m_ch_0_wdat_m_last, 
    G_bus_m_ch_0_wres_m_ready, G_bus_s_ch_0_raddr_s_ready, G_bus_s_ch_0_waddr_s_ready, 
    G_bus_s_ch_0_rdat_s_data, G_bus_s_ch_0_rdat_s_resp, G_bus_s_ch_0_rdat_s_valid, 
    G_bus_s_ch_0_rdat_s_last, G_bus_s_ch_0_wdat_s_ready, G_bus_s_ch_0_wres_s_resp, 
    G_bus_s_ch_0_wres_s_valid, G_bus_s_ch_1_raddr_s_ready, G_bus_s_ch_1_waddr_s_ready, 
    G_bus_s_ch_1_rdat_s_data, G_bus_s_ch_1_rdat_s_resp, G_bus_s_ch_1_rdat_s_valid, 
    G_bus_s_ch_1_rdat_s_last, G_bus_s_ch_1_wdat_s_ready, G_bus_s_ch_1_wres_s_resp, 
    G_bus_s_ch_1_wres_s_valid, G_bus_s_ch_2_raddr_s_ready, G_bus_s_ch_2_waddr_s_ready, 
    G_bus_s_ch_2_rdat_s_data, G_bus_s_ch_2_rdat_s_resp, G_bus_s_ch_2_rdat_s_valid, 
    G_bus_s_ch_2_rdat_s_last, G_bus_s_ch_2_wdat_s_ready, G_bus_s_ch_2_wres_s_resp, 
    G_bus_s_ch_2_wres_s_valid, 

    /* outputs */
    G_bus_m_ch_0_raddr_s_ready, G_bus_m_ch_0_waddr_s_ready, G_bus_m_ch_0_rdat_s_data, 
    G_bus_m_ch_0_rdat_s_resp, G_bus_m_ch_0_rdat_s_valid, G_bus_m_ch_0_rdat_s_last, 
    G_bus_m_ch_0_wdat_s_ready, G_bus_m_ch_0_wres_s_resp, G_bus_m_ch_0_wres_s_valid, 
    G_bus_s_ch_0_raddr_m_addr, G_bus_s_ch_0_raddr_m_size, G_bus_s_ch_0_raddr_m_valid, 
    G_bus_s_ch_0_raddr_m_len, G_bus_s_ch_0_raddr_m_prot, G_bus_s_ch_0_waddr_m_addr, 
    G_bus_s_ch_0_waddr_m_size, G_bus_s_ch_0_waddr_m_valid, G_bus_s_ch_0_waddr_m_len, 
    G_bus_s_ch_0_waddr_m_prot, G_bus_s_ch_0_rdat_m_ready, G_bus_s_ch_0_wdat_m_data, 
    G_bus_s_ch_0_wdat_m_strobe, G_bus_s_ch_0_wdat_m_valid, G_bus_s_ch_0_wdat_m_last, 
    G_bus_s_ch_0_wres_m_ready, G_bus_s_ch_1_raddr_m_addr, G_bus_s_ch_1_raddr_m_size, 
    G_bus_s_ch_1_raddr_m_valid, G_bus_s_ch_1_raddr_m_len, G_bus_s_ch_1_raddr_m_prot, 
    G_bus_s_ch_1_waddr_m_addr, G_bus_s_ch_1_waddr_m_size, G_bus_s_ch_1_waddr_m_valid, 
    G_bus_s_ch_1_waddr_m_len, G_bus_s_ch_1_waddr_m_prot, G_bus_s_ch_1_rdat_m_ready, 
    G_bus_s_ch_1_wdat_m_data, G_bus_s_ch_1_wdat_m_strobe, G_bus_s_ch_1_wdat_m_valid, 
    G_bus_s_ch_1_wdat_m_last, G_bus_s_ch_1_wres_m_ready, G_bus_s_ch_2_raddr_m_addr, 
    G_bus_s_ch_2_raddr_m_size, G_bus_s_ch_2_raddr_m_valid, G_bus_s_ch_2_raddr_m_len, 
    G_bus_s_ch_2_raddr_m_prot, G_bus_s_ch_2_waddr_m_addr, G_bus_s_ch_2_waddr_m_size, 
    G_bus_s_ch_2_waddr_m_valid, G_bus_s_ch_2_waddr_m_len, G_bus_s_ch_2_waddr_m_prot, 
    G_bus_s_ch_2_rdat_m_ready, G_bus_s_ch_2_wdat_m_data, G_bus_s_ch_2_wdat_m_strobe, 
    G_bus_s_ch_2_wdat_m_valid, G_bus_s_ch_2_wdat_m_last, G_bus_s_ch_2_wres_m_ready

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input [31:0] G_bus_m_ch_0_raddr_m_addr ; /// <0,4294967295> [U32];
  input [ 2:0] G_bus_m_ch_0_raddr_m_size ; /// <0,7> [U3]          ;
  input        G_bus_m_ch_0_raddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_bus_m_ch_0_raddr_m_len  ; /// <0,15> [U4]         ;
  input [ 2:0] G_bus_m_ch_0_raddr_m_prot ; /// <0,7> [U3]          ;
  input [31:0] G_bus_m_ch_0_waddr_m_addr ; /// <0,4294967295> [U32];
  input [ 2:0] G_bus_m_ch_0_waddr_m_size ; /// <0,7> [U3]          ;
  input        G_bus_m_ch_0_waddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_bus_m_ch_0_waddr_m_len  ; /// <0,15> [U4]         ;
  input [ 2:0] G_bus_m_ch_0_waddr_m_prot ; /// <0,7> [U3]          ;
  input        G_bus_m_ch_0_rdat_m_ready ; /// <0,1> [U1]          ;
  input [31:0] G_bus_m_ch_0_wdat_m_data  ; /// <0,4294967295> [U32];
  input [ 3:0] G_bus_m_ch_0_wdat_m_strobe; /// <0,15> [U4]         ;
  input        G_bus_m_ch_0_wdat_m_valid ; /// <0,1> [U1]          ;
  input        G_bus_m_ch_0_wdat_m_last  ; /// <0,1> [U1]          ;
  input        G_bus_m_ch_0_wres_m_ready ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_raddr_s_ready; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_waddr_s_ready; /// <0,1> [U1]          ;
  input [31:0] G_bus_s_ch_0_rdat_s_data  ; /// <0,4294967295> [U32];
  input [ 1:0] G_bus_s_ch_0_rdat_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_0_rdat_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_rdat_s_last  ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_wdat_s_ready ; /// <0,1> [U1]          ;
  input [ 1:0] G_bus_s_ch_0_wres_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_0_wres_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_raddr_s_ready; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_waddr_s_ready; /// <0,1> [U1]          ;
  input [31:0] G_bus_s_ch_1_rdat_s_data  ; /// <0,4294967295> [U32];
  input [ 1:0] G_bus_s_ch_1_rdat_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_1_rdat_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_rdat_s_last  ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_wdat_s_ready ; /// <0,1> [U1]          ;
  input [ 1:0] G_bus_s_ch_1_wres_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_1_wres_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_raddr_s_ready; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_waddr_s_ready; /// <0,1> [U1]          ;
  input [31:0] G_bus_s_ch_2_rdat_s_data  ; /// <0,4294967295> [U32];
  input [ 1:0] G_bus_s_ch_2_rdat_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_2_rdat_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_rdat_s_last  ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_wdat_s_ready ; /// <0,1> [U1]          ;
  input [ 1:0] G_bus_s_ch_2_wres_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_2_wres_s_valid ; /// <0,1> [U1]          ;

  /*output ports*/
  output       G_bus_m_ch_0_raddr_s_ready; /// <0,1> [U1]          ;
  output       G_bus_m_ch_0_waddr_s_ready; /// <0,1> [U1]          ;
  output[31:0] G_bus_m_ch_0_rdat_s_data  ; /// <0,4294967295> [U32];
  output[ 1:0] G_bus_m_ch_0_rdat_s_resp  ; /// <0,3> [U2]          ;
  output       G_bus_m_ch_0_rdat_s_valid ; /// <0,1> [U1]          ;
  output       G_bus_m_ch_0_rdat_s_last  ; /// <0,1> [U1]          ;
  output       G_bus_m_ch_0_wdat_s_ready ; /// <0,1> [U1]          ;
  output[ 1:0] G_bus_m_ch_0_wres_s_resp  ; /// <0,3> [U2]          ;
  output       G_bus_m_ch_0_wres_s_valid ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_0_raddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_0_raddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_0_raddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_0_raddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_0_raddr_m_prot ; /// <0,7> [U3]          ;
  output[31:0] G_bus_s_ch_0_waddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_0_waddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_0_waddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_0_waddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_0_waddr_m_prot ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_0_rdat_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_0_wdat_m_data  ; /// <0,4294967295> [U32];
  output[ 3:0] G_bus_s_ch_0_wdat_m_strobe; /// <0,15> [U4]         ;
  output       G_bus_s_ch_0_wdat_m_valid ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_0_wdat_m_last  ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_0_wres_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_1_raddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_1_raddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_1_raddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_1_raddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_1_raddr_m_prot ; /// <0,7> [U3]          ;
  output[31:0] G_bus_s_ch_1_waddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_1_waddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_1_waddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_1_waddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_1_waddr_m_prot ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_1_rdat_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_1_wdat_m_data  ; /// <0,4294967295> [U32];
  output[ 3:0] G_bus_s_ch_1_wdat_m_strobe; /// <0,15> [U4]         ;
  output       G_bus_s_ch_1_wdat_m_valid ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_1_wdat_m_last  ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_1_wres_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_2_raddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_2_raddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_2_raddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_2_raddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_2_raddr_m_prot ; /// <0,7> [U3]          ;
  output[31:0] G_bus_s_ch_2_waddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_2_waddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_2_waddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_2_waddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_2_waddr_m_prot ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_2_rdat_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_2_wdat_m_data  ; /// <0,4294967295> [U32];
  output[ 3:0] G_bus_s_ch_2_wdat_m_strobe; /// <0,15> [U4]         ;
  output       G_bus_s_ch_2_wdat_m_valid ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_2_wdat_m_last  ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_2_wres_m_ready ; /// <0,1> [U1]          ;

  /*probe ports*/
  wire         _prb_AXI4L_CTRL_1_3__connectChannel_pSetup;

  AXI4L_CTRL_1_3__connectChannel_probed #(M_ID) M0   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_bus_m_ch_0_raddr_m_addr, G_bus_m_ch_0_raddr_m_size, G_bus_m_ch_0_raddr_m_valid, 
    G_bus_m_ch_0_raddr_m_len, G_bus_m_ch_0_raddr_m_prot, G_bus_m_ch_0_waddr_m_addr, 
    G_bus_m_ch_0_waddr_m_size, G_bus_m_ch_0_waddr_m_valid, G_bus_m_ch_0_waddr_m_len, 
    G_bus_m_ch_0_waddr_m_prot, G_bus_m_ch_0_rdat_m_ready, G_bus_m_ch_0_wdat_m_data, 
    G_bus_m_ch_0_wdat_m_strobe, G_bus_m_ch_0_wdat_m_valid, G_bus_m_ch_0_wdat_m_last, 
    G_bus_m_ch_0_wres_m_ready, G_bus_s_ch_0_raddr_s_ready, G_bus_s_ch_0_waddr_s_ready, 
    G_bus_s_ch_0_rdat_s_data, G_bus_s_ch_0_rdat_s_resp, G_bus_s_ch_0_rdat_s_valid, 
    G_bus_s_ch_0_rdat_s_last, G_bus_s_ch_0_wdat_s_ready, G_bus_s_ch_0_wres_s_resp, 
    G_bus_s_ch_0_wres_s_valid, G_bus_s_ch_1_raddr_s_ready, G_bus_s_ch_1_waddr_s_ready, 
    G_bus_s_ch_1_rdat_s_data, G_bus_s_ch_1_rdat_s_resp, G_bus_s_ch_1_rdat_s_valid, 
    G_bus_s_ch_1_rdat_s_last, G_bus_s_ch_1_wdat_s_ready, G_bus_s_ch_1_wres_s_resp, 
    G_bus_s_ch_1_wres_s_valid, G_bus_s_ch_2_raddr_s_ready, G_bus_s_ch_2_waddr_s_ready, 
    G_bus_s_ch_2_rdat_s_data, G_bus_s_ch_2_rdat_s_resp, G_bus_s_ch_2_rdat_s_valid, 
    G_bus_s_ch_2_rdat_s_last, G_bus_s_ch_2_wdat_s_ready, G_bus_s_ch_2_wres_s_resp, 
    G_bus_s_ch_2_wres_s_valid, 

    /* outputs */
    G_bus_m_ch_0_raddr_s_ready, G_bus_m_ch_0_waddr_s_ready, G_bus_m_ch_0_rdat_s_data, 
    G_bus_m_ch_0_rdat_s_resp, G_bus_m_ch_0_rdat_s_valid, G_bus_m_ch_0_rdat_s_last, 
    G_bus_m_ch_0_wdat_s_ready, G_bus_m_ch_0_wres_s_resp, G_bus_m_ch_0_wres_s_valid, 
    G_bus_s_ch_0_raddr_m_addr, G_bus_s_ch_0_raddr_m_size, G_bus_s_ch_0_raddr_m_valid, 
    G_bus_s_ch_0_raddr_m_len, G_bus_s_ch_0_raddr_m_prot, G_bus_s_ch_0_waddr_m_addr, 
    G_bus_s_ch_0_waddr_m_size, G_bus_s_ch_0_waddr_m_valid, G_bus_s_ch_0_waddr_m_len, 
    G_bus_s_ch_0_waddr_m_prot, G_bus_s_ch_0_rdat_m_ready, G_bus_s_ch_0_wdat_m_data, 
    G_bus_s_ch_0_wdat_m_strobe, G_bus_s_ch_0_wdat_m_valid, G_bus_s_ch_0_wdat_m_last, 
    G_bus_s_ch_0_wres_m_ready, G_bus_s_ch_1_raddr_m_addr, G_bus_s_ch_1_raddr_m_size, 
    G_bus_s_ch_1_raddr_m_valid, G_bus_s_ch_1_raddr_m_len, G_bus_s_ch_1_raddr_m_prot, 
    G_bus_s_ch_1_waddr_m_addr, G_bus_s_ch_1_waddr_m_size, G_bus_s_ch_1_waddr_m_valid, 
    G_bus_s_ch_1_waddr_m_len, G_bus_s_ch_1_waddr_m_prot, G_bus_s_ch_1_rdat_m_ready, 
    G_bus_s_ch_1_wdat_m_data, G_bus_s_ch_1_wdat_m_strobe, G_bus_s_ch_1_wdat_m_valid, 
    G_bus_s_ch_1_wdat_m_last, G_bus_s_ch_1_wres_m_ready, G_bus_s_ch_2_raddr_m_addr, 
    G_bus_s_ch_2_raddr_m_size, G_bus_s_ch_2_raddr_m_valid, G_bus_s_ch_2_raddr_m_len, 
    G_bus_s_ch_2_raddr_m_prot, G_bus_s_ch_2_waddr_m_addr, G_bus_s_ch_2_waddr_m_size, 
    G_bus_s_ch_2_waddr_m_valid, G_bus_s_ch_2_waddr_m_len, G_bus_s_ch_2_waddr_m_prot, 
    G_bus_s_ch_2_rdat_m_ready, G_bus_s_ch_2_wdat_m_data, G_bus_s_ch_2_wdat_m_strobe, 
    G_bus_s_ch_2_wdat_m_valid, G_bus_s_ch_2_wdat_m_last, G_bus_s_ch_2_wres_m_ready, 

    /*probes*/
    _prb_AXI4L_CTRL_1_3__connectChannel_pSetup

  );

endmodule // AXI4L_CTRL_1_3__connectChannel

module AXI4L_CTRL_1_3__connectChannel_probed   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_bus_m_ch_0_raddr_m_addr, G_bus_m_ch_0_raddr_m_size, G_bus_m_ch_0_raddr_m_valid, 
    G_bus_m_ch_0_raddr_m_len, G_bus_m_ch_0_raddr_m_prot, G_bus_m_ch_0_waddr_m_addr, 
    G_bus_m_ch_0_waddr_m_size, G_bus_m_ch_0_waddr_m_valid, G_bus_m_ch_0_waddr_m_len, 
    G_bus_m_ch_0_waddr_m_prot, G_bus_m_ch_0_rdat_m_ready, G_bus_m_ch_0_wdat_m_data, 
    G_bus_m_ch_0_wdat_m_strobe, G_bus_m_ch_0_wdat_m_valid, G_bus_m_ch_0_wdat_m_last, 
    G_bus_m_ch_0_wres_m_ready, G_bus_s_ch_0_raddr_s_ready, G_bus_s_ch_0_waddr_s_ready, 
    G_bus_s_ch_0_rdat_s_data, G_bus_s_ch_0_rdat_s_resp, G_bus_s_ch_0_rdat_s_valid, 
    G_bus_s_ch_0_rdat_s_last, G_bus_s_ch_0_wdat_s_ready, G_bus_s_ch_0_wres_s_resp, 
    G_bus_s_ch_0_wres_s_valid, G_bus_s_ch_1_raddr_s_ready, G_bus_s_ch_1_waddr_s_ready, 
    G_bus_s_ch_1_rdat_s_data, G_bus_s_ch_1_rdat_s_resp, G_bus_s_ch_1_rdat_s_valid, 
    G_bus_s_ch_1_rdat_s_last, G_bus_s_ch_1_wdat_s_ready, G_bus_s_ch_1_wres_s_resp, 
    G_bus_s_ch_1_wres_s_valid, G_bus_s_ch_2_raddr_s_ready, G_bus_s_ch_2_waddr_s_ready, 
    G_bus_s_ch_2_rdat_s_data, G_bus_s_ch_2_rdat_s_resp, G_bus_s_ch_2_rdat_s_valid, 
    G_bus_s_ch_2_rdat_s_last, G_bus_s_ch_2_wdat_s_ready, G_bus_s_ch_2_wres_s_resp, 
    G_bus_s_ch_2_wres_s_valid, 

    /* outputs */
    G_bus_m_ch_0_raddr_s_ready, G_bus_m_ch_0_waddr_s_ready, G_bus_m_ch_0_rdat_s_data, 
    G_bus_m_ch_0_rdat_s_resp, G_bus_m_ch_0_rdat_s_valid, G_bus_m_ch_0_rdat_s_last, 
    G_bus_m_ch_0_wdat_s_ready, G_bus_m_ch_0_wres_s_resp, G_bus_m_ch_0_wres_s_valid, 
    G_bus_s_ch_0_raddr_m_addr, G_bus_s_ch_0_raddr_m_size, G_bus_s_ch_0_raddr_m_valid, 
    G_bus_s_ch_0_raddr_m_len, G_bus_s_ch_0_raddr_m_prot, G_bus_s_ch_0_waddr_m_addr, 
    G_bus_s_ch_0_waddr_m_size, G_bus_s_ch_0_waddr_m_valid, G_bus_s_ch_0_waddr_m_len, 
    G_bus_s_ch_0_waddr_m_prot, G_bus_s_ch_0_rdat_m_ready, G_bus_s_ch_0_wdat_m_data, 
    G_bus_s_ch_0_wdat_m_strobe, G_bus_s_ch_0_wdat_m_valid, G_bus_s_ch_0_wdat_m_last, 
    G_bus_s_ch_0_wres_m_ready, G_bus_s_ch_1_raddr_m_addr, G_bus_s_ch_1_raddr_m_size, 
    G_bus_s_ch_1_raddr_m_valid, G_bus_s_ch_1_raddr_m_len, G_bus_s_ch_1_raddr_m_prot, 
    G_bus_s_ch_1_waddr_m_addr, G_bus_s_ch_1_waddr_m_size, G_bus_s_ch_1_waddr_m_valid, 
    G_bus_s_ch_1_waddr_m_len, G_bus_s_ch_1_waddr_m_prot, G_bus_s_ch_1_rdat_m_ready, 
    G_bus_s_ch_1_wdat_m_data, G_bus_s_ch_1_wdat_m_strobe, G_bus_s_ch_1_wdat_m_valid, 
    G_bus_s_ch_1_wdat_m_last, G_bus_s_ch_1_wres_m_ready, G_bus_s_ch_2_raddr_m_addr, 
    G_bus_s_ch_2_raddr_m_size, G_bus_s_ch_2_raddr_m_valid, G_bus_s_ch_2_raddr_m_len, 
    G_bus_s_ch_2_raddr_m_prot, G_bus_s_ch_2_waddr_m_addr, G_bus_s_ch_2_waddr_m_size, 
    G_bus_s_ch_2_waddr_m_valid, G_bus_s_ch_2_waddr_m_len, G_bus_s_ch_2_waddr_m_prot, 
    G_bus_s_ch_2_rdat_m_ready, G_bus_s_ch_2_wdat_m_data, G_bus_s_ch_2_wdat_m_strobe, 
    G_bus_s_ch_2_wdat_m_valid, G_bus_s_ch_2_wdat_m_last, G_bus_s_ch_2_wres_m_ready, 

    /*probes*/
    _prb_AXI4L_CTRL_1_3__connectChannel_pSetup

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input [31:0] G_bus_m_ch_0_raddr_m_addr ; /// <0,4294967295> [U32];
  input [ 2:0] G_bus_m_ch_0_raddr_m_size ; /// <0,7> [U3]          ;
  input        G_bus_m_ch_0_raddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_bus_m_ch_0_raddr_m_len  ; /// <0,15> [U4]         ;
  input [ 2:0] G_bus_m_ch_0_raddr_m_prot ; /// <0,7> [U3]          ;
  input [31:0] G_bus_m_ch_0_waddr_m_addr ; /// <0,4294967295> [U32];
  input [ 2:0] G_bus_m_ch_0_waddr_m_size ; /// <0,7> [U3]          ;
  input        G_bus_m_ch_0_waddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_bus_m_ch_0_waddr_m_len  ; /// <0,15> [U4]         ;
  input [ 2:0] G_bus_m_ch_0_waddr_m_prot ; /// <0,7> [U3]          ;
  input        G_bus_m_ch_0_rdat_m_ready ; /// <0,1> [U1]          ;
  input [31:0] G_bus_m_ch_0_wdat_m_data  ; /// <0,4294967295> [U32];
  input [ 3:0] G_bus_m_ch_0_wdat_m_strobe; /// <0,15> [U4]         ;
  input        G_bus_m_ch_0_wdat_m_valid ; /// <0,1> [U1]          ;
  input        G_bus_m_ch_0_wdat_m_last  ; /// <0,1> [U1]          ;
  input        G_bus_m_ch_0_wres_m_ready ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_raddr_s_ready; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_waddr_s_ready; /// <0,1> [U1]          ;
  input [31:0] G_bus_s_ch_0_rdat_s_data  ; /// <0,4294967295> [U32];
  input [ 1:0] G_bus_s_ch_0_rdat_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_0_rdat_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_rdat_s_last  ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_wdat_s_ready ; /// <0,1> [U1]          ;
  input [ 1:0] G_bus_s_ch_0_wres_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_0_wres_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_raddr_s_ready; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_waddr_s_ready; /// <0,1> [U1]          ;
  input [31:0] G_bus_s_ch_1_rdat_s_data  ; /// <0,4294967295> [U32];
  input [ 1:0] G_bus_s_ch_1_rdat_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_1_rdat_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_rdat_s_last  ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_wdat_s_ready ; /// <0,1> [U1]          ;
  input [ 1:0] G_bus_s_ch_1_wres_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_1_wres_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_raddr_s_ready; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_waddr_s_ready; /// <0,1> [U1]          ;
  input [31:0] G_bus_s_ch_2_rdat_s_data  ; /// <0,4294967295> [U32];
  input [ 1:0] G_bus_s_ch_2_rdat_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_2_rdat_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_rdat_s_last  ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_wdat_s_ready ; /// <0,1> [U1]          ;
  input [ 1:0] G_bus_s_ch_2_wres_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_2_wres_s_valid ; /// <0,1> [U1]          ;

  /*output ports*/
  output       G_bus_m_ch_0_raddr_s_ready; /// <0,1> [U1]          ;
  output       G_bus_m_ch_0_waddr_s_ready; /// <0,1> [U1]          ;
  output[31:0] G_bus_m_ch_0_rdat_s_data  ; /// <0,4294967295> [U32];
  output[ 1:0] G_bus_m_ch_0_rdat_s_resp  ; /// <0,3> [U2]          ;
  output       G_bus_m_ch_0_rdat_s_valid ; /// <0,1> [U1]          ;
  output       G_bus_m_ch_0_rdat_s_last  ; /// <0,1> [U1]          ;
  output       G_bus_m_ch_0_wdat_s_ready ; /// <0,1> [U1]          ;
  output[ 1:0] G_bus_m_ch_0_wres_s_resp  ; /// <0,3> [U2]          ;
  output       G_bus_m_ch_0_wres_s_valid ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_0_raddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_0_raddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_0_raddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_0_raddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_0_raddr_m_prot ; /// <0,7> [U3]          ;
  output[31:0] G_bus_s_ch_0_waddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_0_waddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_0_waddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_0_waddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_0_waddr_m_prot ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_0_rdat_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_0_wdat_m_data  ; /// <0,4294967295> [U32];
  output[ 3:0] G_bus_s_ch_0_wdat_m_strobe; /// <0,15> [U4]         ;
  output       G_bus_s_ch_0_wdat_m_valid ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_0_wdat_m_last  ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_0_wres_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_1_raddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_1_raddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_1_raddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_1_raddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_1_raddr_m_prot ; /// <0,7> [U3]          ;
  output[31:0] G_bus_s_ch_1_waddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_1_waddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_1_waddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_1_waddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_1_waddr_m_prot ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_1_rdat_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_1_wdat_m_data  ; /// <0,4294967295> [U32];
  output[ 3:0] G_bus_s_ch_1_wdat_m_strobe; /// <0,15> [U4]         ;
  output       G_bus_s_ch_1_wdat_m_valid ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_1_wdat_m_last  ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_1_wres_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_2_raddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_2_raddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_2_raddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_2_raddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_2_raddr_m_prot ; /// <0,7> [U3]          ;
  output[31:0] G_bus_s_ch_2_waddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_2_waddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_2_waddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_2_waddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_2_waddr_m_prot ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_2_rdat_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_2_wdat_m_data  ; /// <0,4294967295> [U32];
  output[ 3:0] G_bus_s_ch_2_wdat_m_strobe; /// <0,15> [U4]         ;
  output       G_bus_s_ch_2_wdat_m_valid ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_2_wdat_m_last  ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_2_wres_m_ready ; /// <0,1> [U1]          ;

  /*probe ports*/
  output       _prb_AXI4L_CTRL_1_3__connectChannel_pSetup;

  AXI4L_CTRL_1_3__connectChannel_no_mem #(M_ID) M0   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_bus_m_ch_0_raddr_m_addr, G_bus_m_ch_0_raddr_m_size, G_bus_m_ch_0_raddr_m_valid, 
    G_bus_m_ch_0_raddr_m_len, G_bus_m_ch_0_raddr_m_prot, G_bus_m_ch_0_waddr_m_addr, 
    G_bus_m_ch_0_waddr_m_size, G_bus_m_ch_0_waddr_m_valid, G_bus_m_ch_0_waddr_m_len, 
    G_bus_m_ch_0_waddr_m_prot, G_bus_m_ch_0_rdat_m_ready, G_bus_m_ch_0_wdat_m_data, 
    G_bus_m_ch_0_wdat_m_strobe, G_bus_m_ch_0_wdat_m_valid, G_bus_m_ch_0_wdat_m_last, 
    G_bus_m_ch_0_wres_m_ready, G_bus_s_ch_0_raddr_s_ready, G_bus_s_ch_0_waddr_s_ready, 
    G_bus_s_ch_0_rdat_s_data, G_bus_s_ch_0_rdat_s_resp, G_bus_s_ch_0_rdat_s_valid, 
    G_bus_s_ch_0_rdat_s_last, G_bus_s_ch_0_wdat_s_ready, G_bus_s_ch_0_wres_s_resp, 
    G_bus_s_ch_0_wres_s_valid, G_bus_s_ch_1_raddr_s_ready, G_bus_s_ch_1_waddr_s_ready, 
    G_bus_s_ch_1_rdat_s_data, G_bus_s_ch_1_rdat_s_resp, G_bus_s_ch_1_rdat_s_valid, 
    G_bus_s_ch_1_rdat_s_last, G_bus_s_ch_1_wdat_s_ready, G_bus_s_ch_1_wres_s_resp, 
    G_bus_s_ch_1_wres_s_valid, G_bus_s_ch_2_raddr_s_ready, G_bus_s_ch_2_waddr_s_ready, 
    G_bus_s_ch_2_rdat_s_data, G_bus_s_ch_2_rdat_s_resp, G_bus_s_ch_2_rdat_s_valid, 
    G_bus_s_ch_2_rdat_s_last, G_bus_s_ch_2_wdat_s_ready, G_bus_s_ch_2_wres_s_resp, 
    G_bus_s_ch_2_wres_s_valid, 

    /* outputs */
    G_bus_m_ch_0_raddr_s_ready, G_bus_m_ch_0_waddr_s_ready, G_bus_m_ch_0_rdat_s_data, 
    G_bus_m_ch_0_rdat_s_resp, G_bus_m_ch_0_rdat_s_valid, G_bus_m_ch_0_rdat_s_last, 
    G_bus_m_ch_0_wdat_s_ready, G_bus_m_ch_0_wres_s_resp, G_bus_m_ch_0_wres_s_valid, 
    G_bus_s_ch_0_raddr_m_addr, G_bus_s_ch_0_raddr_m_size, G_bus_s_ch_0_raddr_m_valid, 
    G_bus_s_ch_0_raddr_m_len, G_bus_s_ch_0_raddr_m_prot, G_bus_s_ch_0_waddr_m_addr, 
    G_bus_s_ch_0_waddr_m_size, G_bus_s_ch_0_waddr_m_valid, G_bus_s_ch_0_waddr_m_len, 
    G_bus_s_ch_0_waddr_m_prot, G_bus_s_ch_0_rdat_m_ready, G_bus_s_ch_0_wdat_m_data, 
    G_bus_s_ch_0_wdat_m_strobe, G_bus_s_ch_0_wdat_m_valid, G_bus_s_ch_0_wdat_m_last, 
    G_bus_s_ch_0_wres_m_ready, G_bus_s_ch_1_raddr_m_addr, G_bus_s_ch_1_raddr_m_size, 
    G_bus_s_ch_1_raddr_m_valid, G_bus_s_ch_1_raddr_m_len, G_bus_s_ch_1_raddr_m_prot, 
    G_bus_s_ch_1_waddr_m_addr, G_bus_s_ch_1_waddr_m_size, G_bus_s_ch_1_waddr_m_valid, 
    G_bus_s_ch_1_waddr_m_len, G_bus_s_ch_1_waddr_m_prot, G_bus_s_ch_1_rdat_m_ready, 
    G_bus_s_ch_1_wdat_m_data, G_bus_s_ch_1_wdat_m_strobe, G_bus_s_ch_1_wdat_m_valid, 
    G_bus_s_ch_1_wdat_m_last, G_bus_s_ch_1_wres_m_ready, G_bus_s_ch_2_raddr_m_addr, 
    G_bus_s_ch_2_raddr_m_size, G_bus_s_ch_2_raddr_m_valid, G_bus_s_ch_2_raddr_m_len, 
    G_bus_s_ch_2_raddr_m_prot, G_bus_s_ch_2_waddr_m_addr, G_bus_s_ch_2_waddr_m_size, 
    G_bus_s_ch_2_waddr_m_valid, G_bus_s_ch_2_waddr_m_len, G_bus_s_ch_2_waddr_m_prot, 
    G_bus_s_ch_2_rdat_m_ready, G_bus_s_ch_2_wdat_m_data, G_bus_s_ch_2_wdat_m_strobe, 
    G_bus_s_ch_2_wdat_m_valid, G_bus_s_ch_2_wdat_m_last, G_bus_s_ch_2_wres_m_ready, 

    /*probes*/
    _prb_AXI4L_CTRL_1_3__connectChannel_pSetup

  );

endmodule // AXI4L_CTRL_1_3__connectChannel_probed

/// skipped memWrapper...

module AXI4L_CTRL_1_3__connectChannel_no_mem   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_bus_m_ch_0_raddr_m_addr, G_bus_m_ch_0_raddr_m_size, G_bus_m_ch_0_raddr_m_valid, 
    G_bus_m_ch_0_raddr_m_len, G_bus_m_ch_0_raddr_m_prot, G_bus_m_ch_0_waddr_m_addr, 
    G_bus_m_ch_0_waddr_m_size, G_bus_m_ch_0_waddr_m_valid, G_bus_m_ch_0_waddr_m_len, 
    G_bus_m_ch_0_waddr_m_prot, G_bus_m_ch_0_rdat_m_ready, G_bus_m_ch_0_wdat_m_data, 
    G_bus_m_ch_0_wdat_m_strobe, G_bus_m_ch_0_wdat_m_valid, G_bus_m_ch_0_wdat_m_last, 
    G_bus_m_ch_0_wres_m_ready, G_bus_s_ch_0_raddr_s_ready, G_bus_s_ch_0_waddr_s_ready, 
    G_bus_s_ch_0_rdat_s_data, G_bus_s_ch_0_rdat_s_resp, G_bus_s_ch_0_rdat_s_valid, 
    G_bus_s_ch_0_rdat_s_last, G_bus_s_ch_0_wdat_s_ready, G_bus_s_ch_0_wres_s_resp, 
    G_bus_s_ch_0_wres_s_valid, G_bus_s_ch_1_raddr_s_ready, G_bus_s_ch_1_waddr_s_ready, 
    G_bus_s_ch_1_rdat_s_data, G_bus_s_ch_1_rdat_s_resp, G_bus_s_ch_1_rdat_s_valid, 
    G_bus_s_ch_1_rdat_s_last, G_bus_s_ch_1_wdat_s_ready, G_bus_s_ch_1_wres_s_resp, 
    G_bus_s_ch_1_wres_s_valid, G_bus_s_ch_2_raddr_s_ready, G_bus_s_ch_2_waddr_s_ready, 
    G_bus_s_ch_2_rdat_s_data, G_bus_s_ch_2_rdat_s_resp, G_bus_s_ch_2_rdat_s_valid, 
    G_bus_s_ch_2_rdat_s_last, G_bus_s_ch_2_wdat_s_ready, G_bus_s_ch_2_wres_s_resp, 
    G_bus_s_ch_2_wres_s_valid, 

    /* outputs */
    G_bus_m_ch_0_raddr_s_ready, G_bus_m_ch_0_waddr_s_ready, G_bus_m_ch_0_rdat_s_data, 
    G_bus_m_ch_0_rdat_s_resp, G_bus_m_ch_0_rdat_s_valid, G_bus_m_ch_0_rdat_s_last, 
    G_bus_m_ch_0_wdat_s_ready, G_bus_m_ch_0_wres_s_resp, G_bus_m_ch_0_wres_s_valid, 
    G_bus_s_ch_0_raddr_m_addr, G_bus_s_ch_0_raddr_m_size, G_bus_s_ch_0_raddr_m_valid, 
    G_bus_s_ch_0_raddr_m_len, G_bus_s_ch_0_raddr_m_prot, G_bus_s_ch_0_waddr_m_addr, 
    G_bus_s_ch_0_waddr_m_size, G_bus_s_ch_0_waddr_m_valid, G_bus_s_ch_0_waddr_m_len, 
    G_bus_s_ch_0_waddr_m_prot, G_bus_s_ch_0_rdat_m_ready, G_bus_s_ch_0_wdat_m_data, 
    G_bus_s_ch_0_wdat_m_strobe, G_bus_s_ch_0_wdat_m_valid, G_bus_s_ch_0_wdat_m_last, 
    G_bus_s_ch_0_wres_m_ready, G_bus_s_ch_1_raddr_m_addr, G_bus_s_ch_1_raddr_m_size, 
    G_bus_s_ch_1_raddr_m_valid, G_bus_s_ch_1_raddr_m_len, G_bus_s_ch_1_raddr_m_prot, 
    G_bus_s_ch_1_waddr_m_addr, G_bus_s_ch_1_waddr_m_size, G_bus_s_ch_1_waddr_m_valid, 
    G_bus_s_ch_1_waddr_m_len, G_bus_s_ch_1_waddr_m_prot, G_bus_s_ch_1_rdat_m_ready, 
    G_bus_s_ch_1_wdat_m_data, G_bus_s_ch_1_wdat_m_strobe, G_bus_s_ch_1_wdat_m_valid, 
    G_bus_s_ch_1_wdat_m_last, G_bus_s_ch_1_wres_m_ready, G_bus_s_ch_2_raddr_m_addr, 
    G_bus_s_ch_2_raddr_m_size, G_bus_s_ch_2_raddr_m_valid, G_bus_s_ch_2_raddr_m_len, 
    G_bus_s_ch_2_raddr_m_prot, G_bus_s_ch_2_waddr_m_addr, G_bus_s_ch_2_waddr_m_size, 
    G_bus_s_ch_2_waddr_m_valid, G_bus_s_ch_2_waddr_m_len, G_bus_s_ch_2_waddr_m_prot, 
    G_bus_s_ch_2_rdat_m_ready, G_bus_s_ch_2_wdat_m_data, G_bus_s_ch_2_wdat_m_strobe, 
    G_bus_s_ch_2_wdat_m_valid, G_bus_s_ch_2_wdat_m_last, G_bus_s_ch_2_wres_m_ready, 

    /*probes*/
    _prb_AXI4L_CTRL_1_3__connectChannel_pSetup

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input [31:0] G_bus_m_ch_0_raddr_m_addr ; /// <0,4294967295> [U32];
  input [ 2:0] G_bus_m_ch_0_raddr_m_size ; /// <0,7> [U3]          ;
  input        G_bus_m_ch_0_raddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_bus_m_ch_0_raddr_m_len  ; /// <0,15> [U4]         ;
  input [ 2:0] G_bus_m_ch_0_raddr_m_prot ; /// <0,7> [U3]          ;
  input [31:0] G_bus_m_ch_0_waddr_m_addr ; /// <0,4294967295> [U32];
  input [ 2:0] G_bus_m_ch_0_waddr_m_size ; /// <0,7> [U3]          ;
  input        G_bus_m_ch_0_waddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_bus_m_ch_0_waddr_m_len  ; /// <0,15> [U4]         ;
  input [ 2:0] G_bus_m_ch_0_waddr_m_prot ; /// <0,7> [U3]          ;
  input        G_bus_m_ch_0_rdat_m_ready ; /// <0,1> [U1]          ;
  input [31:0] G_bus_m_ch_0_wdat_m_data  ; /// <0,4294967295> [U32];
  input [ 3:0] G_bus_m_ch_0_wdat_m_strobe; /// <0,15> [U4]         ;
  input        G_bus_m_ch_0_wdat_m_valid ; /// <0,1> [U1]          ;
  input        G_bus_m_ch_0_wdat_m_last  ; /// <0,1> [U1]          ;
  input        G_bus_m_ch_0_wres_m_ready ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_raddr_s_ready; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_waddr_s_ready; /// <0,1> [U1]          ;
  input [31:0] G_bus_s_ch_0_rdat_s_data  ; /// <0,4294967295> [U32];
  input [ 1:0] G_bus_s_ch_0_rdat_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_0_rdat_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_rdat_s_last  ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_0_wdat_s_ready ; /// <0,1> [U1]          ;
  input [ 1:0] G_bus_s_ch_0_wres_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_0_wres_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_raddr_s_ready; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_waddr_s_ready; /// <0,1> [U1]          ;
  input [31:0] G_bus_s_ch_1_rdat_s_data  ; /// <0,4294967295> [U32];
  input [ 1:0] G_bus_s_ch_1_rdat_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_1_rdat_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_rdat_s_last  ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_1_wdat_s_ready ; /// <0,1> [U1]          ;
  input [ 1:0] G_bus_s_ch_1_wres_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_1_wres_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_raddr_s_ready; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_waddr_s_ready; /// <0,1> [U1]          ;
  input [31:0] G_bus_s_ch_2_rdat_s_data  ; /// <0,4294967295> [U32];
  input [ 1:0] G_bus_s_ch_2_rdat_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_2_rdat_s_valid ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_rdat_s_last  ; /// <0,1> [U1]          ;
  input        G_bus_s_ch_2_wdat_s_ready ; /// <0,1> [U1]          ;
  input [ 1:0] G_bus_s_ch_2_wres_s_resp  ; /// <0,3> [U2]          ;
  input        G_bus_s_ch_2_wres_s_valid ; /// <0,1> [U1]          ;

  /*output ports*/
  output       G_bus_m_ch_0_raddr_s_ready; /// <0,1> [U1]          ;
  output       G_bus_m_ch_0_waddr_s_ready; /// <0,1> [U1]          ;
  output[31:0] G_bus_m_ch_0_rdat_s_data  ; /// <0,4294967295> [U32];
  output[ 1:0] G_bus_m_ch_0_rdat_s_resp  ; /// <0,3> [U2]          ;
  output       G_bus_m_ch_0_rdat_s_valid ; /// <0,1> [U1]          ;
  output       G_bus_m_ch_0_rdat_s_last  ; /// <0,1> [U1]          ;
  output       G_bus_m_ch_0_wdat_s_ready ; /// <0,1> [U1]          ;
  output[ 1:0] G_bus_m_ch_0_wres_s_resp  ; /// <0,3> [U2]          ;
  output       G_bus_m_ch_0_wres_s_valid ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_0_raddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_0_raddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_0_raddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_0_raddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_0_raddr_m_prot ; /// <0,7> [U3]          ;
  output[31:0] G_bus_s_ch_0_waddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_0_waddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_0_waddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_0_waddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_0_waddr_m_prot ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_0_rdat_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_0_wdat_m_data  ; /// <0,4294967295> [U32];
  output[ 3:0] G_bus_s_ch_0_wdat_m_strobe; /// <0,15> [U4]         ;
  output       G_bus_s_ch_0_wdat_m_valid ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_0_wdat_m_last  ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_0_wres_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_1_raddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_1_raddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_1_raddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_1_raddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_1_raddr_m_prot ; /// <0,7> [U3]          ;
  output[31:0] G_bus_s_ch_1_waddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_1_waddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_1_waddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_1_waddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_1_waddr_m_prot ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_1_rdat_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_1_wdat_m_data  ; /// <0,4294967295> [U32];
  output[ 3:0] G_bus_s_ch_1_wdat_m_strobe; /// <0,15> [U4]         ;
  output       G_bus_s_ch_1_wdat_m_valid ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_1_wdat_m_last  ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_1_wres_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_2_raddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_2_raddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_2_raddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_2_raddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_2_raddr_m_prot ; /// <0,7> [U3]          ;
  output[31:0] G_bus_s_ch_2_waddr_m_addr ; /// <0,4294967295> [U32];
  output[ 2:0] G_bus_s_ch_2_waddr_m_size ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_2_waddr_m_valid; /// <0,1> [U1]          ;
  output[ 3:0] G_bus_s_ch_2_waddr_m_len  ; /// <0,15> [U4]         ;
  output[ 2:0] G_bus_s_ch_2_waddr_m_prot ; /// <0,7> [U3]          ;
  output       G_bus_s_ch_2_rdat_m_ready ; /// <0,1> [U1]          ;
  output[31:0] G_bus_s_ch_2_wdat_m_data  ; /// <0,4294967295> [U32];
  output[ 3:0] G_bus_s_ch_2_wdat_m_strobe; /// <0,15> [U4]         ;
  output       G_bus_s_ch_2_wdat_m_valid ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_2_wdat_m_last  ; /// <0,1> [U1]          ;
  output       G_bus_s_ch_2_wres_m_ready ; /// <0,1> [U1]          ;

  /*probe ports*/
  output       _prb_AXI4L_CTRL_1_3__connectChannel_pSetup;

  wire      ROOT_CP = 1'b1; /// root control path (always active)

  wire      AXI4L_CTRL_1_3__connectChannel_pSetup = 1'b1; /// pipeStageCount = 1

  reg[ 1:0] G__this_MRStat_0_slaveID;
  reg       G__this_MRStat_0_active;
  reg[ 1:0] G__this_MWStat_0_slaveID;
  reg       G__this_MWStat_0_active;
  reg       G__this_SRStat_0_active;
  reg       G__this_SRStat_1_active;
  reg       G__this_SRStat_2_active;
  reg       G__this_SWStat_0_active;
  reg       G__this_SWStat_1_active;
  reg       G__this_SWStat_2_active;
  reg       G__this_roundRobinRVal, G__this_roundRobinWVal;



  //// pipe-stage(1) : combinational-logic...

wire       A_892 =  G_bus_m_ch_0_rdat_m_ready & G__this_MRStat_0_active/*prv*/; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo4+ld[1:1]) [F(1.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire[31:0] I_decodeAddr_0_B1_0  =  G_bus_m_ch_0_raddr_m_addr & 32'hfffffff0; // GRP.0 <FB>(comb-Out) (NL) [F(0.0)<0>,B(29.0)<0>] <0,4294967295> [U32] P1 OP(and:&)(./rv32_io.h:L228)[AXI4L::decodeAddr]
wire       I_decodeAddr_0_B1_3  =  I_decodeAddr_0_B1_0 == 32'h10000080     ; // GRP.0 <FB>(comb-Out) (L5.0+A31.0+fo2+ld[1]+S) [F(5.0)<0>,B(29.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L228)[AXI4L::decodeAddr]
wire       I_decodeAddr_0_B1_1  =  I_decodeAddr_0_B1_0 == 32'h10000040     ; // GRP.0 <FB>(comb-Out) (L5.0+A31.0+fo1+ld[1]+S) [F(5.0)<0>,B(29.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L228)[AXI4L::decodeAddr]
wire[ 1:0] I_decodeAddr_0_B1_4 =  (I_decodeAddr_0_B1_3) ? 2'h2 : {1'b0,I_decodeAddr_0_B1_1}; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo4+ld[2:0:1]) [F(6.0)<0>,B(24.0)<0>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L228)[AXI4L::decodeAddr]
wire[ 1:0] L_decodeAddr_0_RET   =  I_decodeAddr_0_B1_4                     ; // GRP.0 <FB>(comb-Out) (NL) [F(6.0)<0>,B(23.0)<0>] <0,2> [U2] P1 OP(assign:=)(./rv32_io.h:L234)[AXI4L::decodeAddr]
wire[ 1:0] I_checkMRReq_B5_0    =  L_decodeAddr_0_RET                      ; // GRP.0 <FB>(comb-Out) (NL) [F(6.0)<0>,B(23.0)<0>] <0,3> [U2] P1 OP(assign:=)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire[ 1:0] N_287                =  I_checkMRReq_B5_0/*&2'h3*/              ; // GRP.0 <FB>(comb-Out) (NL) [F(6.0)<0>,B(23.0)<0>] <0,3> [U2] P1 OP(and:&)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       N_690                =  N_287 == 2'h1                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(7.0)<0>,B(23.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       CP_checkMRReq_B2_F1  =  ! G__this_MRStat_0_active/*prv*/        ; // GRP.0 <B>(comb-Out) (fo1+ld[1]) [F(0.0)<0>,B(24.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L331)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       CP_checkMRReq_B3_F2 =  CP_checkMRReq_B2_F1 & G_bus_m_ch_0_raddr_m_valid; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo7+ld[1:1]) [F(1.0)<0>,B(24.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L331)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       MA_853 =  (CP_checkMRReq_B3_F2) ? G__this_SRStat_1_active/*prv*/ : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(22.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       N_692                =  (N_690) ? MA_853 : 1'h0                 ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(21.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       N_693                =  N_287 == 2'h2                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(7.0)<0>,B(23.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       MA_854 =  (CP_checkMRReq_B3_F2) ? G__this_SRStat_2_active/*prv*/ : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(23.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       N_695                =  (N_693) ? MA_854 : 1'h0                 ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(22.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       N_687                =  N_287 == 2'h0                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(7.0)<0>,B(23.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       MA_852 =  (CP_checkMRReq_B3_F2) ? G__this_SRStat_0_active/*prv*/ : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(23.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       N_689                =  (N_687) ? MA_852 : 1'h0                 ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(22.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       O_858                =  N_695 | N_689                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(21.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       I_checkMRReq_B5_1    =  N_692 | O_858                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(20.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       I_checkMRReq_B5_2    =  ! I_checkMRReq_B5_1                     ; // GRP.0 <FB>(comb-Out) (fo2+ld[1]) [F(10.0)<0>,B(19.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       A_862                =  N_693 & CP_checkMRReq_B3_F2             ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(21.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       MA_868             =  (A_862) ? G_bus_s_ch_2_rdat_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(20.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       A_860                =  N_687 & CP_checkMRReq_B3_F2             ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(22.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       MA_866             =  (A_860) ? G_bus_s_ch_0_rdat_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(21.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       A_861                =  N_690 & CP_checkMRReq_B3_F2             ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(22.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       MA_867             =  (A_861) ? G_bus_s_ch_1_rdat_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(21.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       MAO_872              =  MA_866 | MA_867                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(20.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       MAO_874              =  MA_868 | MAO_872                        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(19.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       I_checkMRReq_B6_0    =  (I_checkMRReq_B5_2) ? MAO_874 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(18.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       I_checkMRReq_B6_1    =  ! I_checkMRReq_B6_0                     ; // GRP.0 <FB>(comb-Out) (fo4+ld[1]) [F(12.0)<0>,B(17.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       CP_checkMRReq_B5_F1  =  CP_checkMRReq_B3_F2 & I_checkMRReq_B5_2 ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo4+ld[1:1]) [F(11.0)<0>,B(19.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L333)[AXI4L::CTRL<1, 3>::checkMRReq]
wire[ 1:0] I_checkMRReq_B7_1    =  L_decodeAddr_0_RET & 2'h3               ; // GRP.0 <FB>(comb-Out) (NL) [F(6.0)<0>,B(18.0)<0>] <0,2> [U2] P1 OP(and:&)(./rv32_io.h:L335)[AXI4L::CTRL<1, 3>::checkMRReq]
wire[ 1:0] MA_876       =  (CP_checkMRReq_B5_F1) ? I_checkMRReq_B7_1 : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[2:1]) [F(12.0)<0>,B(18.0)<0>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L315,L335)[AXI4L::CTRL<1, 3>::checkMRReq]
wire[ 1:0] G__this_MRStat_0_reqSlaveID =  (I_checkMRReq_B6_1) ? MA_876 : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo5+ld[2:1]) [F(13.0)<0>,B(17.0)<0>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L315,L335)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       I_arbitrate_2_B03_1  =  G__this_MRStat_0_reqSlaveID == 2'h2     ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(14.0)<0>,B(16.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       G__this_MRStat_0_requested =  CP_checkMRReq_B5_F1 & I_checkMRReq_B6_1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(13.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L315,L334)[AXI4L::CTRL<1, 3>::checkMRReq]
wire       A_882        =  I_arbitrate_2_B03_1 & G__this_MRStat_0_requested; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(15.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_0_B01_F1 =  ! G__this_roundRobinRVal/*prv*/        ; // GRP.0 <B>(comb-Out) (fo1+ld[1]) [F(0.0)<0>,B(17.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       A_877             =  CP_arbitrate_0_B01_F1 & CP_checkMRReq_B5_F1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(17.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_0_B02_F2 =  I_checkMRReq_B6_1 & A_877              ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(13.0)<0>,B(16.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_2_B03_F1 =  CP_arbitrate_0_B02_F2 & I_arbitrate_2_B03_1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(15.0)<0>,B(15.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_653          =  CP_arbitrate_2_B03_F1 | CP_arbitrate_0_B02_F2; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_654               =  (CP_arbitrate_2_B03_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:0:1]) [F(16.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_2_B05_F1 =  (CM_653) ? DM_654 : 1'h1               ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(17.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_2_B07_F1 =  A_882 & CP_arbitrate_2_B05_F1          ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(18.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_268          =  CP_arbitrate_2_B07_F1 | CP_arbitrate_2_B03_F1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(19.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L315,L355,L360)[AXI4L::CTRL<1, 3>::connectChannel]
wire       I_arbitrate_1_B03_1  =  G__this_MRStat_0_reqSlaveID == 2'h1     ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(14.0)<0>,B(16.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       A_881        =  I_arbitrate_1_B03_1 & G__this_MRStat_0_requested; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(15.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_1_B03_F1 =  CP_arbitrate_0_B02_F2 & I_arbitrate_1_B03_1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(15.0)<0>,B(15.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_647          =  CP_arbitrate_1_B03_F1 | CP_arbitrate_0_B02_F2; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_648               =  (CP_arbitrate_1_B03_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:0:1]) [F(16.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_1_B05_F1 =  (CM_647) ? DM_648 : 1'h1               ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(17.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_1_B07_F1 =  A_881 & CP_arbitrate_1_B05_F1          ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(18.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_269          =  CP_arbitrate_1_B07_F1 | CP_arbitrate_1_B03_F1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(19.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L315,L355,L360)[AXI4L::CTRL<1, 3>::connectChannel]
wire       CM_272               =  CM_268 | CM_269                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(20.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L315,L355,L360)[AXI4L::CTRL<1, 3>::connectChannel]
wire       I_arbitrate_0_B03_1  =  G__this_MRStat_0_reqSlaveID == 2'h0     ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(14.0)<0>,B(15.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       A_880        =  I_arbitrate_0_B03_1 & G__this_MRStat_0_requested; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(15.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_0_B03_F1 =  CP_arbitrate_0_B02_F2 & I_arbitrate_0_B03_1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(15.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_641          =  CP_arbitrate_0_B03_F1 | CP_arbitrate_0_B02_F2; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_642               =  (CP_arbitrate_0_B03_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:0:1]) [F(16.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_0_B05_F1 =  (CM_641) ? DM_642 : 1'h1               ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(17.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_0_B07_F1 =  A_880 & CP_arbitrate_0_B05_F1          ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(18.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_270          =  CP_arbitrate_0_B07_F1 | CP_arbitrate_0_B03_F1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(19.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L315,L355,L360)[AXI4L::CTRL<1, 3>::connectChannel]
wire       G__this_MRStat_0_granted =  (CM_272) ? 1'h1 : CM_270            ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo10+ld[1:0:1]) [F(21.0)<0>,B(9.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L315,L355,L360)[AXI4L::CTRL<1, 3>::connectChannel]
wire       CP_updateMRStat_B01_F1 =  ! G__this_MRStat_0_granted            ; // GRP.0 <FB>(comb-Out) (fo2+ld[1]) [F(21.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L392)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       CP_updateMRStat_B03_F2 =  A_892 & CP_updateMRStat_B01_F1        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(22.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire[ 1:0] N_391                =  G__this_MRStat_0_slaveID/*prv*//*&2'h3*/; // GRP.0 <B>(comb-Out) (NL) [F(0.0)<0>,B(12.0)<0>] <0,2> [U2] P1 OP(and:&)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       N_737                =  N_391 == 2'h2                           ; // GRP.0 <B>(comb-Out) (L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       A_896                =  N_737 & A_892                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       MA_902              =  (A_896) ? G_bus_s_ch_2_rdat_s_last : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(9.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       N_731                =  N_391 == 2'h0                           ; // GRP.0 <B>(comb-Out) (L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       A_894                =  N_731 & A_892                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       MA_900              =  (A_894) ? G_bus_s_ch_0_rdat_s_last : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       N_734                =  N_391 == 2'h1                           ; // GRP.0 <B>(comb-Out) (L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       A_895                =  N_734 & A_892                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       MA_901              =  (A_895) ? G_bus_s_ch_1_rdat_s_last : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       MAO_906              =  MA_900 | MA_901                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(9.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       MAO_908              =  MA_902 | MAO_906                        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(8.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       I_updateMRStat_B04_1 =  (CP_updateMRStat_B01_F1) ? MAO_908 : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(22.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       CP_updateMRStat_B04_F2 =  CP_updateMRStat_B03_F2 & I_updateMRStat_B04_1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(23.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L399)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       CM_266      =  CP_updateMRStat_B04_F2 | G__this_MRStat_0_granted; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(24.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L312,L314)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       L_updateMRStat_RET =  (CM_266) ? CM_266 : G__this_MRStat_0_active/*prv*/; // GRP.0 <FB>(comb-Out) (L2.0+A2.0+fo191+ld[1:1:1]) [F(26.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L403)[AXI4L::CTRL<1, 3>::updateMRStat]
wire[ 1:0] L_AXI4L_CTRL_1_3__connectChannel_alc3_v1 =  (G__this_MRStat_0_granted) ? G__this_MRStat_0_reqSlaveID : G__this_MRStat_0_slaveID/*prv*/; // GRP.0 <FB>(comb-Out) (L2.0+A4.0+fo3+ld[2:1:1]) [F(23.0)<0>,B(8.0)<0>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L391,L393)
wire[ 1:0] I_updateMRStat_B06_1 =  L_AXI4L_CTRL_1_3__connectChannel_alc3_v1; // GRP.0 <FB>(comb-Out) (NL) [F(23.0)<0>,B(6.0)<0>] <0,2> [U2] P1 OP(assign:=)(./rv32_io.h:L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire[ 1:0] N_285                =  I_updateMRStat_B06_1/*&2'h3*/           ; // GRP.0 <FB>(comb-Out) (NL) [F(23.0)<0>,B(6.0)<0>] <0,2> [U2] P1 OP(and:&)(./rv32_io.h:L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       N_325                =  N_285 == 2'h2                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo78+ld[1]+S) [F(24.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       MA_938            =  (N_325) ? G_bus_s_ch_2_raddr_s_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       N_297                =  N_285 == 2'h0                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo78+ld[1]+S) [F(24.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       MA_920            =  (N_297) ? G_bus_s_ch_0_raddr_s_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       N_311                =  N_285 == 2'h1                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo78+ld[1]+S) [F(24.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       MA_929            =  (N_311) ? G_bus_s_ch_1_raddr_s_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       MAO_979              =  MA_920 | MA_929                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       MAO_988              =  MA_938 | MAO_979                        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(27.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       I_set_0_0_B1_0       =  (L_updateMRStat_RET) ? MAO_988 : 1'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(28.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       DM_375           =  (L_updateMRStat_RET) ? I_set_0_0_B1_0 : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(29.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L141)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_m_ch_0_raddr_s_ready =  DM_375                            ; // GRP.0 <FB>(comb-Out) (NL) [F(29.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L141)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_942              =  (N_325) ? G_bus_s_ch_2_rdat_s_last : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       MA_924              =  (N_297) ? G_bus_s_ch_0_rdat_s_last : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       MA_933              =  (N_311) ? G_bus_s_ch_1_rdat_s_last : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       MAO_983              =  MA_924 | MA_933                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       MAO_992              =  MA_942 | MAO_983                        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(27.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       I_set_13_0_B1_3      =  (L_updateMRStat_RET) ? MAO_992 : 1'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(28.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       DM_380          =  (L_updateMRStat_RET) ? I_set_13_0_B1_3 : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(29.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L155)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_m_ch_0_rdat_s_last =  DM_380                              ; // GRP.0 <FB>(comb-Out) (NL) [F(29.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_941             =  (N_325) ? G_bus_s_ch_2_rdat_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       MA_923             =  (N_297) ? G_bus_s_ch_0_rdat_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       MA_932             =  (N_311) ? G_bus_s_ch_1_rdat_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       MAO_982              =  MA_923 | MA_932                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       MAO_991              =  MA_941 | MAO_982                        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(27.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       I_set_13_0_B1_2      =  (L_updateMRStat_RET) ? MAO_991 : 1'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(28.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire       DM_379          =  (L_updateMRStat_RET) ? I_set_13_0_B1_2 : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(29.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L155)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_m_ch_0_rdat_s_valid =  DM_379                             ; // GRP.0 <FB>(comb-Out) (NL) [F(29.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CTRL<1, 3>::connectChannel]
wire       A_893 =  G_bus_m_ch_0_wres_m_ready & G__this_MWStat_0_active/*prv*/; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo4+ld[1:1]) [F(1.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire[31:0] I_decodeAddr_1_B1_0  =  G_bus_m_ch_0_waddr_m_addr & 32'hfffffff0; // GRP.0 <FB>(comb-Out) (NL) [F(0.0)<0>,B(30.0)<0>] <0,4294967295> [U32] P1 OP(and:&)(./rv32_io.h:L228)[AXI4L::decodeAddr]
wire       I_decodeAddr_1_B1_3  =  I_decodeAddr_1_B1_0 == 32'h10000080     ; // GRP.0 <FB>(comb-Out) (L5.0+A31.0+fo2+ld[1]+S) [F(5.0)<0>,B(30.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L228)[AXI4L::decodeAddr]
wire       I_decodeAddr_1_B1_1  =  I_decodeAddr_1_B1_0 == 32'h10000040     ; // GRP.0 <FB>(comb-Out) (L5.0+A31.0+fo1+ld[1]+S) [F(5.0)<0>,B(30.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L228)[AXI4L::decodeAddr]
wire[ 1:0] I_decodeAddr_1_B1_4 =  (I_decodeAddr_1_B1_3) ? 2'h2 : {1'b0,I_decodeAddr_1_B1_1}; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo4+ld[2:0:1]) [F(6.0)<0>,B(25.0)<0>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L228)[AXI4L::decodeAddr]
wire[ 1:0] L_decodeAddr_1_RET   =  I_decodeAddr_1_B1_4                     ; // GRP.0 <FB>(comb-Out) (NL) [F(6.0)<0>,B(24.0)<0>] <0,2> [U2] P1 OP(assign:=)(./rv32_io.h:L234)[AXI4L::decodeAddr]
wire[ 1:0] I_checkMWReq_B5_0    =  L_decodeAddr_1_RET                      ; // GRP.0 <FB>(comb-Out) (NL) [F(6.0)<0>,B(24.0)<0>] <0,3> [U2] P1 OP(assign:=)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire[ 1:0] N_332                =  I_checkMWReq_B5_0/*&2'h3*/              ; // GRP.0 <FB>(comb-Out) (NL) [F(6.0)<0>,B(24.0)<0>] <0,3> [U2] P1 OP(and:&)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       N_712                =  N_332 == 2'h1                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(7.0)<0>,B(24.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       CP_checkMWReq_B2_F1  =  ! G__this_MWStat_0_active/*prv*/        ; // GRP.0 <B>(comb-Out) (fo1+ld[1]) [F(0.0)<0>,B(25.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L343)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       CP_checkMWReq_B3_F2 =  CP_checkMWReq_B2_F1 & G_bus_m_ch_0_waddr_m_valid; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo7+ld[1:1]) [F(1.0)<0>,B(25.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L343)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       MA_856 =  (CP_checkMWReq_B3_F2) ? G__this_SWStat_1_active/*prv*/ : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(23.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       N_714                =  (N_712) ? MA_856 : 1'h0                 ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(22.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       N_715                =  N_332 == 2'h2                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(7.0)<0>,B(24.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       MA_857 =  (CP_checkMWReq_B3_F2) ? G__this_SWStat_2_active/*prv*/ : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(24.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       N_717                =  (N_715) ? MA_857 : 1'h0                 ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(23.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       N_709                =  N_332 == 2'h0                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(7.0)<0>,B(24.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       MA_855 =  (CP_checkMWReq_B3_F2) ? G__this_SWStat_0_active/*prv*/ : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(24.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       N_711                =  (N_709) ? MA_855 : 1'h0                 ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(23.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       O_859                =  N_717 | N_711                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(22.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       I_checkMWReq_B5_1    =  N_714 | O_859                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(21.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       I_checkMWReq_B5_2    =  ! I_checkMWReq_B5_1                     ; // GRP.0 <FB>(comb-Out) (fo2+ld[1]) [F(10.0)<0>,B(20.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       A_865                =  N_715 & CP_checkMWReq_B3_F2             ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(22.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       MA_871             =  (A_865) ? G_bus_s_ch_2_wres_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(21.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       A_863                =  N_709 & CP_checkMWReq_B3_F2             ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(23.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       MA_869             =  (A_863) ? G_bus_s_ch_0_wres_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(22.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       A_864                =  N_712 & CP_checkMWReq_B3_F2             ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(23.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       MA_870             =  (A_864) ? G_bus_s_ch_1_wres_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(22.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       MAO_873              =  MA_869 | MA_870                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(21.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       MAO_875              =  MA_871 | MAO_873                        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(20.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       I_checkMWReq_B6_0    =  (I_checkMWReq_B5_2) ? MAO_875 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(19.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       I_checkMWReq_B6_1    =  ! I_checkMWReq_B6_0                     ; // GRP.0 <FB>(comb-Out) (fo4+ld[1]) [F(12.0)<0>,B(18.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       CP_checkMWReq_B5_F1  =  CP_checkMWReq_B3_F2 & I_checkMWReq_B5_2 ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo4+ld[1:1]) [F(11.0)<0>,B(20.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L345)[AXI4L::CTRL<1, 3>::checkMWReq]
wire[ 1:0] I_checkMWReq_B7_1    =  L_decodeAddr_1_RET & 2'h3               ; // GRP.0 <FB>(comb-Out) (NL) [F(6.0)<0>,B(19.0)<0>] <0,2> [U2] P1 OP(and:&)(./rv32_io.h:L347)[AXI4L::CTRL<1, 3>::checkMWReq]
wire[ 1:0] MA_878       =  (CP_checkMWReq_B5_F1) ? I_checkMWReq_B7_1 : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[2:1]) [F(12.0)<0>,B(19.0)<0>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L315,L347)[AXI4L::CTRL<1, 3>::checkMWReq]
wire[ 1:0] G__this_MWStat_0_reqSlaveID =  (I_checkMWReq_B6_1) ? MA_878 : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo4+ld[2:1]) [F(13.0)<0>,B(18.0)<0>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L315,L347)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       I_arbitrate_5_B03_1  =  G__this_MWStat_0_reqSlaveID == 2'h2     ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(14.0)<0>,B(17.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       G__this_MWStat_0_requested =  CP_checkMWReq_B5_F1 & I_checkMWReq_B6_1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(13.0)<0>,B(15.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L315,L346)[AXI4L::CTRL<1, 3>::checkMWReq]
wire       A_885        =  I_arbitrate_5_B03_1 & G__this_MWStat_0_requested; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(15.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_3_B01_F1 =  ! G__this_roundRobinWVal/*prv*/        ; // GRP.0 <B>(comb-Out) (fo1+ld[1]) [F(0.0)<0>,B(18.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       A_879             =  CP_arbitrate_3_B01_F1 & CP_checkMWReq_B5_F1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(18.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_3_B02_F2 =  I_checkMWReq_B6_1 & A_879              ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(13.0)<0>,B(17.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_5_B03_F1 =  CP_arbitrate_3_B02_F2 & I_arbitrate_5_B03_1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(15.0)<0>,B(16.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_671          =  CP_arbitrate_5_B03_F1 | CP_arbitrate_3_B02_F2; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(15.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_672               =  (CP_arbitrate_5_B03_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:0:1]) [F(16.0)<0>,B(15.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_5_B05_F1 =  (CM_671) ? DM_672 : 1'h1               ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(17.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_5_B07_F1 =  A_885 & CP_arbitrate_5_B05_F1          ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(18.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_278          =  CP_arbitrate_5_B07_F1 | CP_arbitrate_5_B03_F1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(19.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L315,L355,L360)[AXI4L::CTRL<1, 3>::connectChannel]
wire       I_arbitrate_4_B03_1  =  G__this_MWStat_0_reqSlaveID == 2'h1     ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(14.0)<0>,B(17.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       A_884        =  I_arbitrate_4_B03_1 & G__this_MWStat_0_requested; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(15.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_4_B03_F1 =  CP_arbitrate_3_B02_F2 & I_arbitrate_4_B03_1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(15.0)<0>,B(16.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_665          =  CP_arbitrate_4_B03_F1 | CP_arbitrate_3_B02_F2; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(15.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_666               =  (CP_arbitrate_4_B03_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:0:1]) [F(16.0)<0>,B(15.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_4_B05_F1 =  (CM_665) ? DM_666 : 1'h1               ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(17.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_4_B07_F1 =  A_884 & CP_arbitrate_4_B05_F1          ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(18.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_279          =  CP_arbitrate_4_B07_F1 | CP_arbitrate_4_B03_F1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(19.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L315,L355,L360)[AXI4L::CTRL<1, 3>::connectChannel]
wire       CM_282               =  CM_278 | CM_279                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(20.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L315,L355,L360)[AXI4L::CTRL<1, 3>::connectChannel]
wire       I_arbitrate_3_B03_1  =  G__this_MWStat_0_reqSlaveID == 2'h0     ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1]+S) [F(14.0)<0>,B(16.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       A_883        =  I_arbitrate_3_B03_1 & G__this_MWStat_0_requested; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(15.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_3_B03_F1 =  CP_arbitrate_3_B02_F2 & I_arbitrate_3_B03_1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(15.0)<0>,B(15.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_659          =  CP_arbitrate_3_B03_F1 | CP_arbitrate_3_B02_F2; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_660               =  (CP_arbitrate_3_B03_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:0:1]) [F(16.0)<0>,B(14.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L354,L354)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_3_B05_F1 =  (CM_659) ? DM_660 : 1'h1               ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo3+ld[1:1]) [F(17.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CP_arbitrate_3_B07_F1 =  A_883 & CP_arbitrate_3_B05_F1          ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(18.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_280          =  CP_arbitrate_3_B07_F1 | CP_arbitrate_3_B03_F1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(19.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L315,L355,L360)[AXI4L::CTRL<1, 3>::connectChannel]
wire       G__this_MWStat_0_granted =  (CM_282) ? 1'h1 : CM_280            ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo10+ld[1:0:1]) [F(21.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L315,L355,L360)[AXI4L::CTRL<1, 3>::connectChannel]
wire       CP_updateMWStat_B01_F1 =  ! G__this_MWStat_0_granted            ; // GRP.0 <FB>(comb-Out) (fo2+ld[1]) [F(21.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L408)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       CP_updateMWStat_B03_F2 =  A_893 & CP_updateMWStat_B01_F1        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(22.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire[ 1:0] N_394                =  G__this_MWStat_0_slaveID/*prv*//*&2'h3*/; // GRP.0 <B>(comb-Out) (NL) [F(0.0)<0>,B(12.0)<0>] <0,2> [U2] P1 OP(and:&)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       N_803                =  N_394 == 2'h2                           ; // GRP.0 <B>(comb-Out) (L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       A_899                =  N_803 & A_893                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       MA_905             =  (A_899) ? G_bus_s_ch_2_wres_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(9.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       N_797                =  N_394 == 2'h0                           ; // GRP.0 <B>(comb-Out) (L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       A_897                =  N_797 & A_893                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       MA_903             =  (A_897) ? G_bus_s_ch_0_wres_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       N_800                =  N_394 == 2'h1                           ; // GRP.0 <B>(comb-Out) (L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       A_898                =  N_800 & A_893                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       MA_904             =  (A_898) ? G_bus_s_ch_1_wres_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       MAO_907              =  MA_903 | MA_904                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(9.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       MAO_909              =  MA_905 | MAO_907                        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(8.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       I_updateMWStat_B04_1 =  (CP_updateMWStat_B01_F1) ? MAO_909 : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo2+ld[1:1]) [F(22.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       CP_updateMWStat_B04_F2 =  CP_updateMWStat_B03_F2 & I_updateMWStat_B04_1; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(23.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L415)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       CM_276      =  CP_updateMWStat_B04_F2 | G__this_MWStat_0_granted; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(24.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L312,L314)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       L_updateMWStat_RET =  (CM_276) ? CM_276 : G__this_MWStat_0_active/*prv*/; // GRP.0 <FB>(comb-Out) (L2.0+A2.0+fo241+ld[1:1:1]) [F(26.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L420)[AXI4L::CTRL<1, 3>::updateMWStat]
wire[ 1:0] DM_275 =  (G__this_MWStat_0_granted) ? G__this_MWStat_0_reqSlaveID : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo2+ld[2:1]) [F(22.0)<0>,B(9.0)<0>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L312,L314)[AXI4L::CTRL<1, 3>::updateMWStat]
wire[ 1:0] L_AXI4L_CTRL_1_3__connectChannel_alc3 =  (G__this_MWStat_0_granted) ? DM_275 : G__this_MWStat_0_slaveID/*prv*/; // GRP.0 <FB>(comb-Out) (L2.0+A4.0+fo3+ld[2:1:1]) [F(24.0)<0>,B(8.0)<0>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L407,L409)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 1:0] I_updateMWStat_B06_1 =  L_AXI4L_CTRL_1_3__connectChannel_alc3   ; // GRP.0 <FB>(comb-Out) (NL) [F(24.0)<0>,B(6.0)<0>] <0,2> [U2] P1 OP(assign:=)(./rv32_io.h:L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire[ 1:0] N_330                =  I_updateMWStat_B06_1/*&2'h3*/           ; // GRP.0 <FB>(comb-Out) (NL) [F(24.0)<0>,B(6.0)<0>] <0,2> [U2] P1 OP(and:&)(./rv32_io.h:L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       N_370                =  N_330 == 2'h2                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo84+ld[1]+S) [F(25.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       MA_975            =  (N_370) ? G_bus_s_ch_2_waddr_s_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       N_342                =  N_330 == 2'h0                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo84+ld[1]+S) [F(25.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       MA_951            =  (N_342) ? G_bus_s_ch_0_waddr_s_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       N_356                =  N_330 == 2'h1                           ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo84+ld[1]+S) [F(25.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       MA_963            =  (N_356) ? G_bus_s_ch_1_waddr_s_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       MAO_984              =  MA_951 | MA_963                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(27.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       MAO_993              =  MA_975 | MAO_984                        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(28.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       I_set_0_1_B1_0       =  (L_updateMWStat_RET) ? MAO_993 : 1'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(29.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L142)[AXI4L::CH::ADDR::SL::set]
wire       DM_376           =  (L_updateMWStat_RET) ? I_set_0_1_B1_0 : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(30.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L141)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_m_ch_0_waddr_s_ready =  DM_376                            ; // GRP.0 <FB>(comb-Out) (NL) [F(30.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L141)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_976             =  (N_370) ? G_bus_s_ch_2_wdat_s_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L170)[AXI4L::CH::WDAT::SL::set]
wire       MA_952             =  (N_342) ? G_bus_s_ch_0_wdat_s_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L170)[AXI4L::CH::WDAT::SL::set]
wire       MA_964             =  (N_356) ? G_bus_s_ch_1_wdat_s_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L170)[AXI4L::CH::WDAT::SL::set]
wire       MAO_985              =  MA_952 | MA_964                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(27.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L170)[AXI4L::CH::WDAT::SL::set]
wire       MAO_994              =  MA_976 | MAO_985                        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(28.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L170)[AXI4L::CH::WDAT::SL::set]
wire       I_set_1_0_B1_0       =  (L_updateMWStat_RET) ? MAO_994 : 1'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(29.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L170)[AXI4L::CH::WDAT::SL::set]
wire       DM_381           =  (L_updateMWStat_RET) ? I_set_1_0_B1_0 : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(30.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L169)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_m_ch_0_wdat_s_ready =  DM_381                             ; // GRP.0 <FB>(comb-Out) (NL) [F(30.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L169)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_978             =  (N_370) ? G_bus_s_ch_2_wres_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire       MA_954             =  (N_342) ? G_bus_s_ch_0_wres_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire       MA_966             =  (N_356) ? G_bus_s_ch_1_wres_s_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire       MAO_987              =  MA_954 | MA_966                         ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(27.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire       MAO_996              =  MA_978 | MAO_987                        ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(28.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire       I_set_2_0_B1_1       =  (L_updateMWStat_RET) ? MAO_996 : 1'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(29.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire       DM_383           =  (L_updateMWStat_RET) ? I_set_2_0_B1_1 : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(30.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L183)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_m_ch_0_wres_s_valid =  DM_383                             ; // GRP.0 <FB>(comb-Out) (NL) [F(30.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L183)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_917            =  (N_297) ? G_bus_m_ch_0_raddr_m_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_412               =  (L_updateMRStat_RET) ? MA_917 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_raddr_m_valid =  DM_412                            ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_919             =  (N_297) ? G_bus_m_ch_0_rdat_m_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L149)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_452               =  (L_updateMRStat_RET) ? MA_919 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L149)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_rdat_m_ready =  DM_452                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L149)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_944            =  (N_342) ? G_bus_m_ch_0_waddr_m_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_437               =  (L_updateMWStat_RET) ? MA_944 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_waddr_m_valid =  DM_437                            ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_949              =  (N_342) ? G_bus_m_ch_0_wdat_m_last : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_472               =  (L_updateMWStat_RET) ? MA_949 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_wdat_m_last =  DM_472                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_948             =  (N_342) ? G_bus_m_ch_0_wdat_m_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_467               =  (L_updateMWStat_RET) ? MA_948 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_wdat_m_valid =  DM_467                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_950             =  (N_342) ? G_bus_m_ch_0_wres_m_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L177)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_477               =  (L_updateMWStat_RET) ? MA_950 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L177)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_wres_m_ready =  DM_477                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L177)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_926            =  (N_311) ? G_bus_m_ch_0_raddr_m_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_492               =  (L_updateMRStat_RET) ? MA_926 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_raddr_m_valid =  DM_492                            ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_928             =  (N_311) ? G_bus_m_ch_0_rdat_m_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L149)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_532               =  (L_updateMRStat_RET) ? MA_928 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L149)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_rdat_m_ready =  DM_532                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L149)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_956            =  (N_356) ? G_bus_m_ch_0_waddr_m_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_517               =  (L_updateMWStat_RET) ? MA_956 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_waddr_m_valid =  DM_517                            ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_961              =  (N_356) ? G_bus_m_ch_0_wdat_m_last : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_552               =  (L_updateMWStat_RET) ? MA_961 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_wdat_m_last =  DM_552                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_960             =  (N_356) ? G_bus_m_ch_0_wdat_m_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_547               =  (L_updateMWStat_RET) ? MA_960 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_wdat_m_valid =  DM_547                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_962             =  (N_356) ? G_bus_m_ch_0_wres_m_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L177)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_557               =  (L_updateMWStat_RET) ? MA_962 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L177)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_wres_m_ready =  DM_557                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L177)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_935            =  (N_325) ? G_bus_m_ch_0_raddr_m_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_572               =  (L_updateMRStat_RET) ? MA_935 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_raddr_m_valid =  DM_572                            ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_937             =  (N_325) ? G_bus_m_ch_0_rdat_m_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L149)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_612               =  (L_updateMRStat_RET) ? MA_937 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L149)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_rdat_m_ready =  DM_612                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L149)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_968            =  (N_370) ? G_bus_m_ch_0_waddr_m_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_597               =  (L_updateMWStat_RET) ? MA_968 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_waddr_m_valid =  DM_597                            ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_973              =  (N_370) ? G_bus_m_ch_0_wdat_m_last : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_632               =  (L_updateMWStat_RET) ? MA_973 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_wdat_m_last =  DM_632                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_972             =  (N_370) ? G_bus_m_ch_0_wdat_m_valid : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_627               =  (L_updateMWStat_RET) ? MA_972 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_wdat_m_valid =  DM_627                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire       MA_974             =  (N_370) ? G_bus_m_ch_0_wres_m_ready : 1'h0; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L177)[AXI4L::CTRL<1, 3>::connectChannel]
wire       DM_637               =  (L_updateMWStat_RET) ? MA_974 : 1'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L177)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_wres_m_ready =  DM_637                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(./rv32_io.h:L177)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 1:0] MA_940              =  (N_325) ? G_bus_s_ch_2_rdat_s_resp : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[2:1]) [F(25.0)<0>,B(4.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[ 1:0] MA_922              =  (N_297) ? G_bus_s_ch_0_rdat_s_resp : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[2:1]) [F(25.0)<0>,B(5.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[ 1:0] MA_931              =  (N_311) ? G_bus_s_ch_1_rdat_s_resp : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[2:1]) [F(25.0)<0>,B(5.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[ 1:0] MAO_981              =  MA_922 | MA_931                         ; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[1:1]) [F(26.0)<0>,B(4.0)<0>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[ 1:0] MAO_990              =  MA_940 | MAO_981                        ; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[1:1]) [F(27.0)<0>,B(3.0)<0>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[ 1:0] I_set_13_0_B1_1      =  (L_updateMRStat_RET) ? MAO_990 : 2'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[2:1]) [F(28.0)<0>,B(2.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[ 1:0] DM_378          =  (L_updateMRStat_RET) ? I_set_13_0_B1_1 : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+ld[2:1]) [F(29.0)<0>,B(1.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L155)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_m_ch_0_rdat_s_resp =  DM_378                              ; // GRP.0 <FB>(comb-Out) (NL) [F(29.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 1:0] MA_977              =  (N_370) ? G_bus_s_ch_2_wres_s_resp : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[2:1]) [F(26.0)<0>,B(4.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire[ 1:0] MA_953              =  (N_342) ? G_bus_s_ch_0_wres_s_resp : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[2:1]) [F(26.0)<0>,B(5.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire[ 1:0] MA_965              =  (N_356) ? G_bus_s_ch_1_wres_s_resp : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[2:1]) [F(26.0)<0>,B(5.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire[ 1:0] MAO_986              =  MA_953 | MA_965                         ; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[1:1]) [F(27.0)<0>,B(4.0)<0>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire[ 1:0] MAO_995              =  MA_977 | MAO_986                        ; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[1:1]) [F(28.0)<0>,B(3.0)<0>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire[ 1:0] I_set_2_0_B1_0       =  (L_updateMWStat_RET) ? MAO_995 : 2'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+fo1+ld[2:1]) [F(29.0)<0>,B(2.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire[ 1:0] DM_382           =  (L_updateMWStat_RET) ? I_set_2_0_B1_0 : 2'h0; // GRP.0 <FB>(comb-Out) (L1.0+A2.0+ld[2:1]) [F(30.0)<0>,B(1.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L183)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_m_ch_0_wres_s_resp =  DM_382                              ; // GRP.0 <FB>(comb-Out) (NL) [F(30.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(assign:=)(./rv32_io.h:L183)[AXI4L::CTRL<1, 3>::connectChannel]
wire       N_787                =  L_updateMRStat_RET & N_297              ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(27.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[ 2:0] DM_422             =  (N_787) ? G_bus_m_ch_0_raddr_m_prot : 3'h7; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_raddr_m_prot =  DM_422                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 2:0] DM_407             =  (N_787) ? G_bus_m_ch_0_raddr_m_size : 3'h2; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_raddr_m_size =  DM_407                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       N_842                =  L_updateMWStat_RET & N_342              ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(27.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire[ 2:0] DM_447             =  (N_842) ? G_bus_m_ch_0_waddr_m_prot : 3'h7; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_waddr_m_prot =  DM_447                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 2:0] DM_432             =  (N_842) ? G_bus_m_ch_0_waddr_m_size : 3'h2; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_waddr_m_size =  DM_432                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       N_790                =  L_updateMRStat_RET & N_311              ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(27.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[ 2:0] DM_502             =  (N_790) ? G_bus_m_ch_0_raddr_m_prot : 3'h7; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_raddr_m_prot =  DM_502                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 2:0] DM_487             =  (N_790) ? G_bus_m_ch_0_raddr_m_size : 3'h2; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_raddr_m_size =  DM_487                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       N_845                =  L_updateMWStat_RET & N_356              ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(27.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire[ 2:0] DM_527             =  (N_845) ? G_bus_m_ch_0_waddr_m_prot : 3'h7; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_waddr_m_prot =  DM_527                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 2:0] DM_512             =  (N_845) ? G_bus_m_ch_0_waddr_m_size : 3'h2; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_waddr_m_size =  DM_512                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       N_793                =  L_updateMRStat_RET & N_325              ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(27.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[ 2:0] DM_582             =  (N_793) ? G_bus_m_ch_0_raddr_m_prot : 3'h7; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_raddr_m_prot =  DM_582                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 2:0] DM_567             =  (N_793) ? G_bus_m_ch_0_raddr_m_size : 3'h2; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_raddr_m_size =  DM_567                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire       N_848                =  L_updateMWStat_RET & N_370              ; // GRP.0 <FB>(comb-Out) (L1.0+A1.0+fo6+ld[1:1]) [F(27.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L184)[AXI4L::CH::WRES::SL::set]
wire[ 2:0] DM_607             =  (N_848) ? G_bus_m_ch_0_waddr_m_prot : 3'h7; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_waddr_m_prot =  DM_607                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 2:0] DM_592             =  (N_848) ? G_bus_m_ch_0_waddr_m_size : 3'h2; // GRP.0 <FB>(comb-Out) (L1.0+A3.0+ld[3:1]) [F(28.0)<0>,B(1.0)<0>] <0,7> [U3] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_waddr_m_size =  DM_592                             ; // GRP.0 <FB>(comb-Out) (NL) [F(28.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] MA_918              =  (N_297) ? G_bus_m_ch_0_raddr_m_len : 4'h0; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+fo1+ld[4:1]) [F(25.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] DM_417               =  (L_updateMRStat_RET) ? MA_918 : 4'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+ld[4:1]) [F(27.0)<0>,B(1.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_raddr_m_len =  DM_417                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] MA_945              =  (N_342) ? G_bus_m_ch_0_waddr_m_len : 4'h0; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+fo1+ld[4:1]) [F(26.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] DM_442               =  (L_updateMWStat_RET) ? MA_945 : 4'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+ld[4:1]) [F(27.0)<0>,B(1.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_waddr_m_len =  DM_442                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] MA_947            =  (N_342) ? G_bus_m_ch_0_wdat_m_strobe : 4'h0; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+fo1+ld[4:1]) [F(26.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] DM_462               =  (L_updateMWStat_RET) ? MA_947 : 4'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+ld[4:1]) [F(27.0)<0>,B(1.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_wdat_m_strobe =  DM_462                            ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] MA_927              =  (N_311) ? G_bus_m_ch_0_raddr_m_len : 4'h0; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+fo1+ld[4:1]) [F(25.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] DM_497               =  (L_updateMRStat_RET) ? MA_927 : 4'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+ld[4:1]) [F(27.0)<0>,B(1.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_raddr_m_len =  DM_497                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] MA_957              =  (N_356) ? G_bus_m_ch_0_waddr_m_len : 4'h0; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+fo1+ld[4:1]) [F(26.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] DM_522               =  (L_updateMWStat_RET) ? MA_957 : 4'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+ld[4:1]) [F(27.0)<0>,B(1.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_waddr_m_len =  DM_522                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] MA_959            =  (N_356) ? G_bus_m_ch_0_wdat_m_strobe : 4'h0; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+fo1+ld[4:1]) [F(26.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] DM_542               =  (L_updateMWStat_RET) ? MA_959 : 4'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+ld[4:1]) [F(27.0)<0>,B(1.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_wdat_m_strobe =  DM_542                            ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] MA_936              =  (N_325) ? G_bus_m_ch_0_raddr_m_len : 4'h0; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+fo1+ld[4:1]) [F(25.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] DM_577               =  (L_updateMRStat_RET) ? MA_936 : 4'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+ld[4:1]) [F(27.0)<0>,B(1.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_raddr_m_len =  DM_577                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] MA_969              =  (N_370) ? G_bus_m_ch_0_waddr_m_len : 4'h0; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+fo1+ld[4:1]) [F(26.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] DM_602               =  (L_updateMWStat_RET) ? MA_969 : 4'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+ld[4:1]) [F(27.0)<0>,B(1.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_waddr_m_len =  DM_602                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] MA_971            =  (N_370) ? G_bus_m_ch_0_wdat_m_strobe : 4'h0; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+fo1+ld[4:1]) [F(26.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 3:0] DM_622               =  (L_updateMWStat_RET) ? MA_971 : 4'h0    ; // GRP.0 <FB>(comb-Out) (L1.0+A4.0+ld[4:1]) [F(27.0)<0>,B(1.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_wdat_m_strobe =  DM_622                            ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] MA_939             =  (N_325) ? G_bus_s_ch_2_rdat_s_data : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(25.0)<0>,B(4.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[31:0] MA_921             =  (N_297) ? G_bus_s_ch_0_rdat_s_data : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(25.0)<0>,B(5.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[31:0] MA_930             =  (N_311) ? G_bus_s_ch_1_rdat_s_data : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(25.0)<0>,B(5.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[31:0] MAO_980              =  MA_921 | MA_930                         ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[1:1]) [F(26.0)<0>,B(4.0)<0>] <0,4294967295> [U32] P1 OP(or:|)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[31:0] MAO_989              =  MA_939 | MAO_980                        ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[1:1]) [F(27.0)<0>,B(3.0)<0>] <0,4294967295> [U32] P1 OP(or:|)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[31:0] I_set_13_0_B1_0      =  (L_updateMRStat_RET) ? MAO_989 : 32'h0  ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(28.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L156)[AXI4L::CH::RDAT::SL::set]
wire[31:0] DM_377         =  (L_updateMRStat_RET) ? I_set_13_0_B1_0 : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+ld[32:1]) [F(29.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L155)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_m_ch_0_rdat_s_data =  DM_377                              ; // GRP.0 <FB>(comb-Out) (NL) [F(29.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] MA_916            =  (N_297) ? G_bus_m_ch_0_raddr_m_addr : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(25.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] DM_402               =  (L_updateMRStat_RET) ? MA_916 : 32'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+ld[32:1]) [F(27.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_raddr_m_addr =  DM_402                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] MA_943            =  (N_342) ? G_bus_m_ch_0_waddr_m_addr : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(26.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] DM_427               =  (L_updateMWStat_RET) ? MA_943 : 32'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+ld[32:1]) [F(27.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_waddr_m_addr =  DM_427                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] MA_946             =  (N_342) ? G_bus_m_ch_0_wdat_m_data : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(26.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] DM_457               =  (L_updateMWStat_RET) ? MA_946 : 32'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+ld[32:1]) [F(27.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_0_wdat_m_data =  DM_457                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] MA_925            =  (N_311) ? G_bus_m_ch_0_raddr_m_addr : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(25.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] DM_482               =  (L_updateMRStat_RET) ? MA_925 : 32'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+ld[32:1]) [F(27.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_raddr_m_addr =  DM_482                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] MA_955            =  (N_356) ? G_bus_m_ch_0_waddr_m_addr : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(26.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] DM_507               =  (L_updateMWStat_RET) ? MA_955 : 32'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+ld[32:1]) [F(27.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_waddr_m_addr =  DM_507                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] MA_958             =  (N_356) ? G_bus_m_ch_0_wdat_m_data : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(26.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] DM_537               =  (L_updateMWStat_RET) ? MA_958 : 32'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+ld[32:1]) [F(27.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_1_wdat_m_data =  DM_537                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] MA_934            =  (N_325) ? G_bus_m_ch_0_raddr_m_addr : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(25.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] DM_562               =  (L_updateMRStat_RET) ? MA_934 : 32'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+ld[32:1]) [F(27.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_raddr_m_addr =  DM_562                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] MA_967            =  (N_370) ? G_bus_m_ch_0_waddr_m_addr : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(26.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] DM_587               =  (L_updateMWStat_RET) ? MA_967 : 32'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+ld[32:1]) [F(27.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_waddr_m_addr =  DM_587                             ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(assign:=)(./rv32_io.h:L135)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] MA_970             =  (N_370) ? G_bus_m_ch_0_wdat_m_data : 32'h0; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+fo1+ld[32:1]) [F(26.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[31:0] DM_617               =  (L_updateMWStat_RET) ? MA_970 : 32'h0   ; // GRP.0 <FB>(comb-Out) (L1.0+A32.0+ld[32:1]) [F(27.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
assign     G_bus_s_ch_2_wdat_m_data =  DM_617                              ; // GRP.0 <FB>(comb-Out) (NL) [F(27.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(assign:=)(./rv32_io.h:L163)[AXI4L::CTRL<1, 3>::connectChannel]
wire[ 1:0] DM_265 =  (G__this_MRStat_0_granted) ? G__this_MRStat_0_reqSlaveID : 2'h0; // GRP.0 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(22.0)<0>,B(1.0)<0>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L312,L314)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       A_910                =  N_297 & CP_updateMRStat_B03_F2          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       N_298                =  A_910 & I_updateMRStat_B04_1            ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       N_300                =  G__this_MRStat_0_granted & N_297        ; // GRP.0 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(25.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       CM_301               =  N_298 | N_300                           ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(27.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       CM_315               =  CM_266 & N_311                          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       N_314                =  G__this_MRStat_0_granted & N_311        ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       CM_329               =  CM_266 & N_325                          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       N_328                =  G__this_MRStat_0_granted & N_325        ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(25.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
wire       A_911                =  N_342 & CP_updateMWStat_B03_F2          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       N_343                =  A_911 & I_updateMWStat_B04_1            ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(27.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       N_345                =  G__this_MWStat_0_granted & N_342        ; // GRP.0 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(26.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       CM_346               =  N_343 | N_345                           ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(28.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       CM_360               =  CM_276 & N_356                          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       N_359                =  G__this_MWStat_0_granted & N_356        ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       CM_374               =  CM_276 & N_370                          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       N_373                =  G__this_MWStat_0_granted & N_370        ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(26.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
wire       AO_886               =  A_880 | G__this_MRStat_0_requested      ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_644               =  AO_886 & CP_arbitrate_0_B05_F1          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(18.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_645               =  (CP_arbitrate_0_B05_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:0:1]) [F(18.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       L_arbitrate_0_RET   =  (CM_644) ? CP_arbitrate_0_B07_F1 : DM_645; // GRP.0 <FB>(L2.0+A2.0+fo1+ld[1:1:1]) [F(20.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L363)[AXI4L::CTRL<1, 3>::arbitrate]
wire       AO_887               =  A_881 | G__this_MRStat_0_requested      ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_650               =  AO_887 & CP_arbitrate_1_B05_F1          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(18.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_651               =  (CP_arbitrate_1_B05_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:0:1]) [F(18.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       L_arbitrate_1_RET   =  (CM_650) ? CP_arbitrate_1_B07_F1 : DM_651; // GRP.0 <FB>(L2.0+A2.0+fo1+ld[1:1:1]) [F(20.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L363)[AXI4L::CTRL<1, 3>::arbitrate]
wire       I_arbitrateMR_B3_1   =  L_arbitrate_0_RET | L_arbitrate_1_RET   ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(21.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L367)[AXI4L::CTRL<1, 3>::arbitrateMR]
wire       AO_888               =  A_882 | G__this_MRStat_0_requested      ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_656               =  AO_888 & CP_arbitrate_2_B05_F1          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(18.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_657               =  (CP_arbitrate_2_B05_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:0:1]) [F(18.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       L_arbitrate_2_RET   =  (CM_656) ? CP_arbitrate_2_B07_F1 : DM_657; // GRP.0 <FB>(L2.0+A2.0+fo1+ld[1:1:1]) [F(20.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L363)[AXI4L::CTRL<1, 3>::arbitrate]
wire       I_arbitrateMR_B4_1   =  I_arbitrateMR_B3_1 | L_arbitrate_2_RET  ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(22.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L367)[AXI4L::CTRL<1, 3>::arbitrateMR]
wire       AO_889               =  A_883 | G__this_MWStat_0_requested      ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_662               =  AO_889 & CP_arbitrate_3_B05_F1          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(18.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_663               =  (CP_arbitrate_3_B05_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:0:1]) [F(18.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       L_arbitrate_3_RET   =  (CM_662) ? CP_arbitrate_3_B07_F1 : DM_663; // GRP.0 <FB>(L2.0+A2.0+fo1+ld[1:1:1]) [F(20.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L363)[AXI4L::CTRL<1, 3>::arbitrate]
wire       AO_890               =  A_884 | G__this_MWStat_0_requested      ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_668               =  AO_890 & CP_arbitrate_4_B05_F1          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(18.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_669               =  (CP_arbitrate_4_B05_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:0:1]) [F(18.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       L_arbitrate_4_RET   =  (CM_668) ? CP_arbitrate_4_B07_F1 : DM_669; // GRP.0 <FB>(L2.0+A2.0+fo1+ld[1:1:1]) [F(20.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L363)[AXI4L::CTRL<1, 3>::arbitrate]
wire       I_arbitrateMW_B3_1   =  L_arbitrate_3_RET | L_arbitrate_4_RET   ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(21.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L372)[AXI4L::CTRL<1, 3>::arbitrateMW]
wire       AO_891               =  A_885 | G__this_MWStat_0_requested      ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(16.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       CM_674               =  AO_891 & CP_arbitrate_5_B05_F1          ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(18.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       DM_675               =  (CP_arbitrate_5_B05_F1) ? 1'h0 : 1'h1   ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:0:1]) [F(18.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L354,L359,L359,L359)[AXI4L::CTRL<1, 3>::arbitrate]
wire       L_arbitrate_5_RET   =  (CM_674) ? CP_arbitrate_5_B07_F1 : DM_675; // GRP.0 <FB>(L2.0+A2.0+fo1+ld[1:1:1]) [F(20.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L363)[AXI4L::CTRL<1, 3>::arbitrate]
wire       I_arbitrateMW_B4_1   =  I_arbitrateMW_B3_1 | L_arbitrate_5_RET  ; // GRP.0 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(22.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L372)[AXI4L::CTRL<1, 3>::arbitrateMW]


  //// pipe-stage(1)  : state-registers...

  always @ (posedge clk or negedge rst_n) begin
  if (rst_n == 1'b0) begin
    G__this_MRStat_0_slaveID <= 2'h0;
    G__this_MRStat_0_active  <= 1'h0;
    G__this_MWStat_0_slaveID <= 2'h0;
    G__this_MWStat_0_active  <= 1'h0;
    G__this_SRStat_0_active  <= 1'h0;
    G__this_SRStat_1_active  <= 1'h0;
    G__this_SRStat_2_active  <= 1'h0;
    G__this_SWStat_0_active  <= 1'h0;
    G__this_SWStat_1_active  <= 1'h0;
    G__this_SWStat_2_active  <= 1'h0;
    G__this_roundRobinRVal   <= 1'h0;
    G__this_roundRobinWVal   <= 1'h0;
  end /// (rst_n == 1'b0)
  else begin /*reg-assignments*/
    if (CM_266) begin
      G__this_MRStat_0_slaveID <= DM_265                  ; // GRP.0 <B>(ld[2:1]+S+@) [F(24.0)<0>,B(0.0)<0>] <0,2> [U2] P1 OP(clk:@)(./rv32_io.h:L312,L314)[AXI4L::CTRL<1, 3>::updateMRStat]
      G__this_MRStat_0_active  <= G__this_MRStat_0_granted; // GRP.0 <B>(ld[1:1]+S+@) [F(24.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L312,L314)[AXI4L::CTRL<1, 3>::updateMRStat]
    end /// (CM_266)
    if (CM_276) begin
      G__this_MWStat_0_slaveID <= DM_275                  ; // GRP.0 <B>(ld[2:1]+S+@) [F(24.0)<0>,B(0.0)<0>] <0,2> [U2] P1 OP(clk:@)(./rv32_io.h:L312,L314)[AXI4L::CTRL<1, 3>::updateMWStat]
      G__this_MWStat_0_active  <= G__this_MWStat_0_granted; // GRP.0 <B>(ld[1:1]+S+@) [F(24.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L312,L314)[AXI4L::CTRL<1, 3>::updateMWStat]
    end /// (CM_276)
    if (CM_301            )  G__this_SRStat_0_active <= N_300; // GRP.0 <B>(ld[1:1]+S+@) [F(27.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
    if (CM_315            )  G__this_SRStat_1_active <= N_314; // GRP.0 <B>(ld[1:1]+S+@) [F(25.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
    if (CM_329            )  G__this_SRStat_2_active <= N_328; // GRP.0 <B>(ld[1:1]+S+@) [F(25.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L395,L400)[AXI4L::CTRL<1, 3>::updateMRStat]
    if (CM_346            )  G__this_SWStat_0_active <= N_345; // GRP.0 <B>(ld[1:1]+S+@) [F(28.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
    if (CM_360            )  G__this_SWStat_1_active <= N_359; // GRP.0 <B>(ld[1:1]+S+@) [F(26.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
    if (CM_374            )  G__this_SWStat_2_active <= N_373; // GRP.0 <B>(ld[1:1]+S+@) [F(26.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L411,L416)[AXI4L::CTRL<1, 3>::updateMWStat]
    if (I_arbitrateMR_B4_1)  G__this_roundRobinRVal  <= 1'h0 ; // GRP.0 <B>(ld[1:1]+S+@) [F(22.0)<0>,B(0.0)<0>] <0,0> [U0] P1 OP(clk:@)(./rv32_io.h:L368)[AXI4L::CTRL<1, 3>::arbitrateMR]
    if (I_arbitrateMW_B4_1)  G__this_roundRobinWVal  <= 1'h0 ; // GRP.0 <B>(ld[1:1]+S+@) [F(22.0)<0>,B(0.0)<0>] <0,0> [U0] P1 OP(clk:@)(./rv32_io.h:L373)[AXI4L::CTRL<1, 3>::arbitrateMW]
  end /// reg-assignments
  end /// always @ ...

  /*probe assignments*/
  assign _prb_AXI4L_CTRL_1_3__connectChannel_pSetup = AXI4L_CTRL_1_3__connectChannel_pSetup;

endmodule // AXI4L_CTRL_1_3__connectChannel_no_mem

