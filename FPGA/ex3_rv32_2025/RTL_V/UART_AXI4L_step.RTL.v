/////////////////////////////////////////////////////////////////
//////          Auto-generated by C2RTL+LLVM.11.0.0        //////
//////             C2RTL.ver.4.4.0 (10.02.2025)            //////
//////               All rights reserved                   //////
////// (C)2016-2025, New System Vision R&D Institute (NSV) //////
//////           CURRENT TIME 10:26:22 02.04.2025          //////
/////////////////////////////////////////////////////////////////


/*******************************************************
OPT_DisableStdErrOutput                           : 1
OPT_SilenceMsg                                    : 1
OPT_DisableTopCallerPointToLink                   : 0
OPT_DisableTopCallerArrayConversion               : 1
OPT_RangePrintMode                                : 0
OPT_RTLUsePipeFunction                            : 0
OPT_RTLUsePipeStackCompression                    : 0
OPT_RTLUsePipeWorkspace                           : 0
OPT_RTLMaxPipeFunctionSize                        : 0
OPT_RTLExpandUnmatchedBWLeafArray                 : 1
OPT_RTLDisableBaseClassName                       : 1
OPT_RTLShowLLVM_Inst                              : 0
OPT_RTLPipeRegAsyncReset                          : 1
OPT_RTL_FPGA_Mode                                 : 0
OPT_RTL_DualPortMemoryWrite1st                    : 0
OPT_RTL_RAM_INIT                                  : 0
OPT_RTL_DISABLE_VECTOR_DISPLAY                    : 1
OPT_RTL_DISABLE_VCD_DUMP                          : 1
OPT_DisableArrayLoadDecomposition                 : 1
OPT_RegArrayAddrPos                               : 1
OPT_DBG_ReduceArrayIndexLoad                      : 0
OPT_DBG_ComputeDist                               : 0
OPT_PrintRangeBits                                : 1
OPT_PrintExpandNodeAddr                           : 0
OPT_DBG_Range                                     : 0
OPT_DBG_RangeTruncate                             : 0
OPT_DBG_AssignPropagation                         : 1
OPT_ConstPrintMode                                : 1
OPT_InitializeWireRangeFromBitWidth               : 1
OPT_ForcePrintRangeUpdate                         : 0
OPT_PrintAllData                                  : 0
OPT_PrintAddDefNode                               : 0
OPT_DBG_Connectivity                              : 0
OPT_DBG_SplitDefUseChain                          : 0
OPT_DBG_IsReachable                               : 0
OPT_DBG_IsReachableInternal                       : 0
OPT_DBG_PipeDist                                  : 0
OPT_PrintPipeDist                                 : 0
OPT_DBG_PipeStageInitialize                       : 0
OPT_DBG_ShowLLVMTypeValue                         : 0
OPT_DBG_getContiguousData                         : 0
OPT_DBG_BWReachableNodes                          : 0
OPT_DBG_FWReachableNodes                          : 0
OPT_DBG_PipeDistUpdate                            : 0
OPT_HidePrintGateDist                             : 0
OPT_DefaultPipeStageCount                         : 8
OPT_OverridePipeStageCount                        : 0
OPT_PrintPipeStageCreate                          : 3
OPT_ShowRange                                     : 1
OPT_ShowGateCost                                  : 1
OPT_ShowBlockAddressInPathName                    : 0
OPT_ShowPathLevelsInPathName                      : 0
OPT_PrintCFGConnectivity                          : 1
OPT_ShowMiscFlag                                  : 0
OPT_SplitDefUseChainPending                       : 0
OPT_DBG_createIODistHeap                          : 0
OPT_EnableSelectionPropagation                    : 1
OPT_RelaxSelectionPropagationConstraint           : 1
OPT_DataLeafElementMaxCount                       : 100000
OPT_LoopUnrollMaxTripCount                        : 10000
OPT_EnableExternalRangeCap                        : 1
OPT_MergeMultipleArrayWrites                      : 1
OPT_MergeMultipleArrayReads                       : 1
OPT_PrintPipeGateStat                             : 0
OPT_PrintAreaProfile                              : 0
OPT_PrintCriticalPathInfo                         : 1
OPT_PrintControlPathsOnly                         : 0
OPT_PrintPhiBBCond                                : 0
OPT_EnableLLVMPatchOnShortProductSumBug           : 1
OPT_PrintInternalGlobals                          : 2
OPT_PrintCreateC2RType                            : 0
OPT_EnableCarryComputationMerge                   : 1
OPT_EnableAndOrRetiming                           : 1
OPT_RestrictAndOrRetimingOnTrees                  : 0
OPT_EnableOrRestructuring                         : 1
OPT_MultType                                      : 0
OPT_MultReduceRatio                               : 0
OPT_EnableXorTreeReduction                        : 1
OPT_MuxTreeReductionMinHeight                     : 0
OPT_PrintTreeHeightReductionDetail                : 0
OPT_EnableMuxQualifierReduction                   : 1
OPT_RestrictCreateMuxQualifier                    : 0
OPT_MuxQualifierNodeCountThreshold                : 5
OPT_EnableInternalNodeProbes                      : 0
OPT_PrintCFGConnection                            : 2
OPT_ClassMethodInstanceCount                      : 1
OPT_PIPE_OPT_UseRegCountAnnealing                 : 0
OPT_PIPE_OPT_AnnealingInitTempFactor              : 1000
OPT_PIPE_OPT_AnnealingCoolingTempFactor           : 990
OPT_PIPE_OPT_UseDistSlope                         : 0
OPT_PIPE_OPT_SelectMaxDist                        : 1
OPT_PIPE_OPT_SelectRandDistProb                   : 0
OPT_PIPE_OPT_RandSeed                             : 0
OPT_PIPE_OPT_distIterNodeCountRatio               : 0
OPT_PIPE_OPT_distIterCount                        : 500
OPT_PIPE_OPT_distRetryCount                       : 20
OPT_PIPE_OPT_regIterCount                         : 100
OPT_PIPE_OPT_regRetryCount                        : 30
OPT_PIPE_OPT_enableLateInsertion                  : 1
OPT_PIPE_OPT_assignDirectPathPipeStage            : 1
OPT_PIPE_OPT_minPipeDistCost                      : 5
OPT_PIPE_OPT_minimizePipeDistSquared              : 1
OPT_RTL_RAM_Exclusive_RW_NoChange                 : 1
OPT_PrintRangeTrucationException                  : 2
OPT_PrintSkipDependenceInputs                     : 0
OPT_SynchronizeDirectSignalPath                   : 1
OPT_DisableRelocateFeedbackPath                   : 0
OPT_DisableIncompatibleDirectPath                 : 0
OPT_SynchronizeStructMemberFeedbackWires          : 0
OPT_DefaultBitPreciseRTLC                         : 1
OPT_DisableRTLComments                            : 0
OPT_EnableVOBFS                                   : 0
OPT_DBG_NodeInst                                  : 0
OPT_Enable_printAllocaNodeMap                     : 0
OPT_Enable_printBlockInfo                         : 0
OPT_Enable_printReachablePaths                    : 0
OPT_RTL_NoTestVectorReturnValue                   : 0
OPT_RTL_ForceOutputPortOnTopArg                   : 1
OPT_DBG_GetCreateType                             : 0
OPT_DBG_INTERNAL_GLOBALS                          : 0
OPT_DBG_adjustDirectPathNodes                     : 0
OPT_EnableAndMaskReduction                        : 1
OPT_PrintCriticalPathMsg                          : 0
OPT_EnableLogFileOpenMsg                          : 0
OPT_MultDelayFactor                               : 0
OPT_CarryDelayFactor                              : 0
OPT_UseCheckSumTestVector                         : 0
OPT_TestVectorMaxSize                             : 0
OPT_EnableRTLCCollapsing                          : 0
OPT_EnableRTLCLogicalCollapsing                   : 0
OPT_EnablePrvStateCopy                            : 0
OPT_MaxFanoutRTLCCollapsing                       : 1
OPT_MaxAccFanoutRTLCCollapsing                    : 1
OPT_EnableRegArrayIndexWrite                      : 1
OPT_DBGPipeRelocate                               : 0
OPT_DisableMethodNameBinding                      : 0
OPT_EnableVarIndexAccessOnArrayStruct             : 1
OPT_DisableVarIndexAccessOnArrayStructWires       : 1
OPT_RTL_OmitPipeStageInfoInRTLLog                 : 0
OPT_TestBenchFineGrainLogThreshold                : 100000
OPT_EnableGateFanoutModel                         : 0
OPT_GateModel_EG_area                             : 1000
OPT_GateModel_EG_delay                            : 1000
OPT_GateModel_CG_area                             : 2000
OPT_GateModel_CG_delay                            : 2000
OPT_GateModel_FO_factor                           : 500
OPT_CriticalPathFOFactorSweepCount                : 10
OPT_CriticalPathSortType                          : 0
OPT_SlackHistogramSize                            : 20
OPT_EnableRedirectPipDistAlignedWireFeedbackUsers : 1
OPT_IgnoreUnassignedArrayReference                : 0
OPT_PatchRTLC_varIndexEnabled                     : 0
OPT_IgnoreUnmatchedBWLeafArray                    : 0
OPT_DisableDivDecompsition                        : 0
OPT_EnableUseSystemOutputSV                       : 1
OPT_EnablePipeRegBitWidthZLB                      : 1
OPT_EnablePipeRegBitWidthUsrTruncate              : 1
OPT_EnableInitRegWriter                           : 0
OPT_SplitRegFeedbackOnMaxStateDepth               : 0
OPT_EnableSplitRegFeedback                        : 0
OPT_DBGEnableSplitRegFeedback                     : 0
OPT_DBGStateGraphDepth                            : 0
OPT_EnableErrorOnUncleanSplitRegFeedback          : 0
OPT_DBGVarIndexGroup                              : 0
OPT_DBGMergeGroup                                 : 0
OPT_RTL_EnableMemWrapperAtSystemLevel             : 0
OPT_EnableMemoryByteAddress                       : 0
OPT_ExtractMemoryPortPaths                        : 0
OPT_ShowAllFWCombPaths                            : 0
OPT_ShowFWCombPathsWithWireFeedback               : 1
OPT_ShowPipeLockedNodes                           : 0
OPT_UseImplicitClockGating                        : 1
OPT_EnablePipeRegClockGating                      : 0
OPT_EnablePipeRegClockGatingMonitor               : 0
OPT_EnableMemoryClockGating                       : 0
OPT_DBGcomputePipeDistBW                          : 0
OPT_RTL_USE_MEMORY_INIT_FILE_MACRO                : 1
*******************************************************/
/*-------------------------------------------------------------------------------------------------------------
final pipe layout
P( 1): 524 nodes,   1719.0 gates,  121 pipeRegs (   68 pipes,  217 states, 0 FBs), IO(  0, 13),GIO( 6, 4),D(  47.0),pd( 0, 0)
------------------------------------------ explicit pipe boundary -------------------------------------------
P( 2): 417 nodes,   1044.0 gates,    0 pipeRegs (    0 pipes,  191 states, 1 FBs), IO( 64,  0),GIO( 0, 2),D(  47.0),pd( 0, 1)
-------------------------------------------------------------------------------------------------------------
Total: 941 nodes,   2763.0 gates,  121 pipeRegs (   68 pipes,  408 states, 1 FBs), I( 64),O( 13),D(  94.0),maxD(  47.0 :   47.0)
Total    5863.5 gates (combined) :   2763.0 (comb-gates) +  477 (reg-bits) * 6.50 (gates/FF) + 0 memBits
-------------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------------
[TOTAL] 941 nodes, 5,863.5 totalGates, 2,763 combGates, 477 regBits, 0 memBits, 0 totalMemBits
    OP(+) : U32 x 3 (288 gates), U17 x 1 (51 gates), U16 x 2 (96 gates), U5 x 6 (90 gates), S5 x 2 (30 gates)
    OP(+) : U4 x 1 (12 gates)
----- OP(+) : total 567 gates, 15 ops -----
    OP(&) : U8 x 1 (8 gates), U1 x 144 (144 gates)
----- OP(&) : total 152 gates, 145 ops -----
    OP(|) : U8 x 5 (36 gates), U7 x 4 (21 gates), U6 x 1 (5 gates), U5 x 1 (5 gates), S5 x 2 (8 gates)
    OP(|) : U2 x 14 (20 gates), U1 x 99 (99 gates)
----- OP(|) : total 194 gates, 126 ops -----
    OP(^) : U1 x 2 (4 gates)
----- OP(^) : total 4 gates, 2 ops -----
    OP(==) : U1 x 50 (214 gates)
----- OP(==) : total 214 gates, 50 ops -----
    OP(!=) : U1 x 3 (29 gates)
----- OP(!=) : total 29 gates, 3 ops -----
    OP(<) : U1 x 4 (174 gates)
----- OP(<) : total 174 gates, 4 ops -----
    OP(>) : U1 x 1 (16 gates)
----- OP(>) : total 16 gates, 1 ops -----
    OP(?) : U32 x 6 (224 gates), U16 x 5 (80 gates), U8 x 10 (88 gates), U7 x 4 (28 gates), U6 x 1 (6 gates)
    OP(?) : U5 x 22 (130 gates), S5 x 3 (15 gates), U4 x 5 (20 gates), U3 x 3 (9 gates), U2 x 22 (46 gates)
    OP(?) : U1 x 38 (41 gates)
----- OP(?) : total 687 gates, 119 ops -----
    OP([]) : U20 x 1 (600 gates), U8 x 3 (96 gates), U3 x 1 (18 gates), U2 x 1 (12 gates)
----- OP([]) : total 726 gates, 6 ops -----
========= ALL : 2,763 gates =========
-------------------------------------------------------------------------------------------------------------*/

/*
+++++++++++++++++++++++++++++++ criticalPath info +++++++++++++++++++++++++++++++
foFactor = 0.000, maxD = 47.000, src = P1 : area(   90.0,   10.0),latency(   11.0,    2.0),carry(   96.0,    0.0),foSum(   71.000,  21.423,  15.797,    0),foAve(6.455,1.948,1.436,0.000),foStd(3.016,0.492,0.255),foNormL2(  39.484),nodeCount(    11)
====================== (src: P1) =======================
 0 : P1 : dfw(  0.000) dbw( 47.000) slack(  0.000) (NL)[(nop)] G.prv._(*this).uart.baud_period_m1 
 1 : P1 : dfw( 34.000) dbw( 13.000) slack(  0.000) (L2.0+C32.0+A80.0+fo20+ld[1:1]+S)[<] I.do_tx.B05.2 = G.prv._(*this).uart.tx.tick < G.prv._(*this).uart.baud_period_m1 (rv32_io.cpp:L256)                                        
 2 : P1 : dfw( 34.000) dbw( 13.000) slack(  0.000) (fo33+ld[1])[!] CE.255     = ! I.do_tx.B05.2                       (rv32_io.cpp:L256)                                        
 3 : P1 : dfw( 35.000) dbw( 12.000) slack(  0.000) (L1.0+A1.0+fo2+ld[1:1])[&] QC.470 = A.749 & CE.255                 (rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)
 4 : P1 : dfw( 36.000) dbw( 11.000) slack(  0.000) (L1.0+A1.0+fo2+ld[1:1])[|] CM.614 = QC.453 | QC.470                (./rv32_io.h:L511)(rv32_io.cpp:L277)                      
 5 : P1 : dfw( 37.000) dbw( 10.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] CM.727 = O.790 | CM.614                 (rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)
 6 : P1 : dfw( 38.000) dbw(  9.000) slack(  0.000) (L1.0+A1.0+fo7+ld[1:1])[?] DM.731 = (CM.727) ? DM.728 : 0          (rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)
 7 : P1 : dfw( 40.000) dbw(  7.000) slack(  0.000) (L2.0+A10.0+fo3+ld[5:1:1])[?] DM.732 = (DM.731) ? L.nxt_pnt.2.RET : G.prv._(*this).uart.tx.buf.rp (./rv32_io.h:L71)                                         
 8 : P1 : dfw( 45.000) dbw(  2.000) slack(  0.000) (L5.0+A14.0+fo1+ld[1:1]+S)[!=] I.update.1.B08.01 = DM.732 != DM.733 (./rv32_io.h:L73)                                         
 9 : P1 : dfw( 46.000) dbw(  1.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] I.update.1.B08.03 = I.update.1.B08.01 | I.do_tx.B01.08 (./rv32_io.h:L73)                                         
10 : P1 : dfw( 47.000) dbw(  0.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[?] DM.598 = (CP.update.1.B01.F2) ? I.update.1.B08.03 : 0 (./rv32_io.h:L68,L73)                                     
11 : P1 : dfw( 47.000) dbw(  0.000) slack(  0.000) (ld[1:1]+S+@)[@] G._(*this).uart.tx.buf.not_empty = CM.599 @ DM.598 (./rv32_io.h:L68,L73)                                     
CriticalPath : D(47.000), DC(47.000)
************** slack histogram (shsize = 20, totalDelayNodeCount = 577) ************** 
(  0) [  0.000 -   2.350] : area(  199.0,   30.0),latency(   39.0,    6.0),carry(   64.0,    0.0),foSum(  153.000,  55.669,  44.528,    0),foAve(4.135,1.505,1.203,0.000),foStd(1.316,0.225,0.121),foNormL2(  54.800),nodeCount(    37)
(  1) [  2.350 -   4.700] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  2) [  4.700 -   7.050] : area(   28.0,    0.0),latency(   12.0,    0.0),carry(    0.0,    0.0),foSum(   55.000,  23.880,  18.943,    0),foAve(3.235,1.405,1.114,0.000),foStd(0.890,0.272,0.184),foNormL2(  20.174),nodeCount(    17)
(  3) [  7.050 -   9.400] : area(   22.0,    0.0),latency(   22.0,    0.0),carry(    0.0,    0.0),foSum(   47.000,  29.243,  26.115,    0),foAve(1.567,0.975,0.870,0.000),foStd(0.405,0.143,0.109),foNormL2(  14.866),nodeCount(    30)
(  4) [  9.400 -  11.750] : area(   63.0,    0.0),latency(   35.0,    0.0),carry(    0.0,    0.0),foSum(   69.000,  42.560,  39.002,    0),foAve(1.769,1.091,1.000,0.000),foStd(0.536,0.122,0.077),foNormL2(  23.643),nodeCount(    39)
(  5) [ 11.750 -  14.100] : area(  183.0,   96.0),latency(   11.0,    3.0),carry(   96.0,    0.0),foSum(   14.000,  14.000,  14.000,    0),foAve(0.737,0.737,0.737,0.000),foStd(0.101,0.101,0.101),foNormL2(   3.742),nodeCount(    19)
(  6) [ 14.100 -  16.450] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  7) [ 16.450 -  18.800] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  8) [ 18.800 -  21.150] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  9) [ 21.150 -  23.500] : area(   38.0,    0.0),latency(   14.0,    0.0),carry(   13.0,    0.0),foSum(   38.000,  20.937,  17.946,    0),foAve(2.714,1.496,1.282,0.000),foStd(0.752,0.185,0.100),foNormL2(  14.629),nodeCount(    14)
( 10) [ 23.500 -  25.850] : area(    2.0,    0.0),latency(    2.0,    0.0),carry(    0.0,    0.0),foSum(    3.000,   2.414,   2.260,    0),foAve(1.500,1.207,1.130,0.000),foStd(0.354,0.146,0.092),foNormL2(   2.236),nodeCount(     2)
( 11) [ 25.850 -  28.200] : area(  175.0,   86.0),latency(   65.0,    6.0),carry(   49.0,    0.0),foSum(  136.000,  89.254,  79.430,    0),foAve(2.061,1.352,1.203,0.000),foStd(0.190,0.059,0.037),foNormL2(  20.928),nodeCount(    66)
( 12) [ 28.200 -  30.550] : area(  145.0,  343.0),latency(   31.0,   12.0),carry(   20.0,    0.0),foSum(  211.000,  74.691,  58.892,    0),foAve(5.024,1.778,1.402,0.000),foStd(1.395,0.211,0.099),foNormL2(  67.045),nodeCount(    42)
( 13) [ 30.550 -  32.900] : area(   29.0,    0.0),latency(   21.0,    0.0),carry(    0.0,    0.0),foSum(   91.000,  40.222,  32.842,    0),foAve(3.792,1.676,1.368,0.000),foStd(1.062,0.202,0.102),foNormL2(  31.544),nodeCount(    24)
( 14) [ 32.900 -  35.250] : area(  103.0,   15.0),latency(   44.0,    4.0),carry(    0.0,    0.0),foSum(  144.000,  65.061,  54.752,    0),foAve(3.349,1.513,1.273,0.000),foStd(0.934,0.157,0.077),foNormL2(  45.782),nodeCount(    43)
( 15) [ 35.250 -  37.600] : area(  191.0,   88.0),latency(   65.0,   11.0),carry(   12.0,    0.0),foSum(  240.000, 108.427,  92.659,    0),foAve(2.857,1.291,1.103,0.000),foStd(0.821,0.119,0.066),foNormL2(  73.770),nodeCount(    84)
( 16) [ 37.600 -  39.950] : area(   48.0,   12.0),latency(   27.0,    4.0),carry(   10.0,    0.0),foSum(  143.000,  56.597,  47.962,    0),foAve(3.326,1.316,1.115,0.000),foStd(1.619,0.192,0.098),foNormL2(  72.959),nodeCount(    43)
( 17) [ 39.950 -  42.300] : area(  133.0,    4.0),latency(   63.0,    1.0),carry(    4.0,    0.0),foSum(  200.000,  96.292,  83.098,    0),foAve(2.778,1.337,1.154,0.000),foStd(0.734,0.117,0.063),foNormL2(  57.845),nodeCount(    72)
( 18) [ 42.300 -  44.650] : area(   50.0,    2.0),latency(   25.0,    2.0),carry(    0.0,    0.0),foSum(   73.000,  36.057,  32.112,    0),foAve(2.212,1.093,0.973,0.000),foStd(1.112,0.176,0.102),foNormL2(  38.820),nodeCount(    33)
( 19) [ 44.650 -  47.000] : area(    2.0,    0.0),latency(    2.0,    0.0),carry(    0.0,    0.0),foSum(    3.000,   3.000,   3.000,    0),foAve(0.250,0.250,0.250,0.000),foStd(0.125,0.125,0.125),foNormL2(   1.732),nodeCount(    12)
*/

/**********************************************************
UART_AXI4L_step       : _ZN10UART_AXI4L4stepEPN5AXI4L2CHEP7UARTPinPh                        : root function
UART_AXI4L.0          : _ZN10UART_AXI4LC2Ev                                                 : root function
SlaveFSM.0            : _ZN5AXI4L8SlaveFSMC2Ev                                              : called @  ./rv32_io.h:L539 
set_pin               : _ZN4UART7set_pinEP7UARTPin                                          : called @  ./rv32_io.h:L548 
fsm_0.0               : _ZN5AXI4L8SlaveFSM3fsmEPNS_2CHE                                     : called @  ./rv32_io.h:L550 
preFsmUser            : _ZN5AXI4L8SlaveFSM10preFsmUserEv                                    : called @  ./rv32_io.h:L284 
fsmRead               : _ZN5AXI4L8SlaveFSM7fsmReadEPNS_2CHE                                 : called @  ./rv32_io.h:L285 
setSLRead_1           : _ZN5AXI4L2CH9setSLReadERNS0_4ADDR2SLERNS0_4RDAT2SLE                 : called @  rv32_io.cpp:L498 
set_0.0               : _ZN5AXI4L2CH4ADDR2SL3setERS2_                                       : called @  ./rv32_io.h:L196 
set_5.0               : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  ./rv32_io.h:L142 
set_13.0              : _ZN5AXI4L2CH4RDAT2SL3setERS2_                                       : called @  ./rv32_io.h:L196 
set_14.0              : _ZN5AXI4L2CH4RDAT2SL3setEjhhh                                       : called @  ./rv32_io.h:L156 
devReadSetup          : _ZN5AXI4L8SlaveFSM12devReadSetupEjj                                 : called @  rv32_io.cpp:L501 
set_5.1               : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  rv32_io.cpp:L506 
reset_2.0             : _ZN5AXI4L2CH4ADDR2SL5resetEv                                        : called @  rv32_io.cpp:L512 
set_5.2               : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  ./rv32_io.h:L143 
devRead_1             : _ZN10UART_AXI4L7devReadEPjjh                                        : called @  rv32_io.cpp:L515 
read_status           : _ZN4UART11read_statusEv                                             : called @  rv32_io.cpp:L609 
UINT32_to_AXI_DType   : _ZN5AXI4L19UINT32_to_AXI_DTypeEPKjPjjh                              : called @  rv32_io.cpp:L617 
set_14.1              : _ZN5AXI4L2CH4RDAT2SL3setEjhhh                                       : called @  rv32_io.cpp:L516 
reset_5.0             : _ZN5AXI4L2CH4RDAT2SL5resetEv                                        : called @  rv32_io.cpp:L531 
set_14.2              : _ZN5AXI4L2CH4RDAT2SL3setEjhhh                                       : called @  ./rv32_io.h:L157 
fsmWrite              : _ZN5AXI4L8SlaveFSM8fsmWriteEPNS_2CHE                                : called @  ./rv32_io.h:L286 
devWriteSetup         : _ZN5AXI4L8SlaveFSM13devWriteSetupEj                                 : called @  rv32_io.cpp:L540 
set_5.3               : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  rv32_io.cpp:L544 
set_4.0               : _ZN5AXI4L2CH4WDAT2SL3setEh                                          : called @  rv32_io.cpp:L547 
reset_2.1             : _ZN5AXI4L2CH4ADDR2SL5resetEv                                        : called @  rv32_io.cpp:L556 
set_5.4               : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  ./rv32_io.h:L143 
devWrite_1            : _ZN10UART_AXI4L8devWriteEjjh                                        : called @  rv32_io.cpp:L558 
AXI_DType_to_UINT32   : _ZN5AXI4L19AXI_DType_to_UINT32EPKjPjjh                              : called @  rv32_io.cpp:L635 
set_4.1               : _ZN5AXI4L2CH4WDAT2SL3setEh                                          : called @  rv32_io.cpp:L560 
set_3.0               : _ZN5AXI4L2CH4WRES2SL3setEhh                                         : called @  rv32_io.cpp:L562 
reset_2.2             : _ZN5AXI4L2CH4ADDR2SL5resetEv                                        : called @  rv32_io.cpp:L570 
set_5.5               : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  ./rv32_io.h:L143 
devWrite_1.1          : _ZN10UART_AXI4L8devWriteEjjh                                        : called @  rv32_io.cpp:L573 
AXI_DType_to_UINT32.1 : _ZN5AXI4L19AXI_DType_to_UINT32EPKjPjjh                              : called @  rv32_io.cpp:L635 
reset_3.0             : _ZN5AXI4L2CH4WDAT2SL5resetEv                                        : called @  rv32_io.cpp:L576 
set_4.2               : _ZN5AXI4L2CH4WDAT2SL3setEh                                          : called @  ./rv32_io.h:L171 
set_3.1               : _ZN5AXI4L2CH4WRES2SL3setEhh                                         : called @  rv32_io.cpp:L578 
reset_3.1             : _ZN5AXI4L2CH4WDAT2SL5resetEv                                        : called @  rv32_io.cpp:L591 
set_4.3               : _ZN5AXI4L2CH4WDAT2SL3setEh                                          : called @  ./rv32_io.h:L171 
reset_4.0             : _ZN5AXI4L2CH4WRES2SL5resetEv                                        : called @  rv32_io.cpp:L596 
set_3.2               : _ZN5AXI4L2CH4WRES2SL3setEhh                                         : called @  ./rv32_io.h:L185 
setSLWrite_1          : _ZN5AXI4L2CH10setSLWriteERNS0_4ADDR2SLERNS0_4WDAT2SLERNS0_4WRES2SLE : called @  rv32_io.cpp:L602 
set_0.1               : _ZN5AXI4L2CH4ADDR2SL3setERS2_                                       : called @  ./rv32_io.h:L197 
set_5.6               : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  ./rv32_io.h:L142 
set_1.0               : _ZN5AXI4L2CH4WDAT2SL3setERS2_                                       : called @  ./rv32_io.h:L197 
set_4.4               : _ZN5AXI4L2CH4WDAT2SL3setEh                                          : called @  ./rv32_io.h:L170 
set_2.0               : _ZN5AXI4L2CH4WRES2SL3setERS2_                                       : called @  ./rv32_io.h:L197 
set_3.3               : _ZN5AXI4L2CH4WRES2SL3setEhh                                         : called @  ./rv32_io.h:L184 
fsmUser_2             : _ZN10UART_AXI4L7fsmUserEv                                           : called @  ./rv32_io.h:L287 
write_command         : _ZN4UART13write_commandEtij                                         : called @  rv32_io.cpp:L642 
reset_port.0          : _ZN9UART_PORT10reset_portEv                                         : called @  rv32_io.cpp:L481 
reset_14              : _ZN5IOBufIhLi8EE5resetEv                                            : called @  ./rv32_io.h:L510 
reset_port.1          : _ZN9UART_PORT10reset_portEv                                         : called @  rv32_io.cpp:L482 
reset_14.1            : _ZN5IOBufIhLi8EE5resetEv                                            : called @  ./rv32_io.h:L510 
do_rx                 : _ZN4UART5do_rxEh                                                    : called @  rv32_io.cpp:L645 
activate.0            : _ZN9UART_PORT8activateEj                                            : called @  rv32_io.cpp:L343 
adjust_word           : _ZN4UART11adjust_wordEv                                             : called @  rv32_io.cpp:L366 
parity_bit.0          : _ZN4UART10parity_bitEh                                              : called @  rv32_io.cpp:L374 
activate.1            : _ZN9UART_PORT8activateEj                                            : called @  rv32_io.cpp:L381 
update.0              : _ZN5IOBufIhLi8EE6updateEii                                          : called @  rv32_io.cpp:L386 
nxt_pnt.0             : _Z7nxt_pnti                                                         : called @  ./rv32_io.h:L71 
nxt_pnt.1             : _Z7nxt_pnti                                                         : called @  ./rv32_io.h:L72 
do_tx                 : _ZN4UART5do_txEhj                                                   : called @  rv32_io.cpp:L646 
activate.2            : _ZN9UART_PORT8activateEj                                            : called @  rv32_io.cpp:L248 
parity_bit.1          : _ZN4UART10parity_bitEh                                              : called @  rv32_io.cpp:L280 
activate.3            : _ZN9UART_PORT8activateEj                                            : called @  rv32_io.cpp:L292 
update.1              : _ZN5IOBufIhLi8EE6updateEii                                          : called @  rv32_io.cpp:L308 
nxt_pnt.2             : _Z7nxt_pnti                                                         : called @  ./rv32_io.h:L71 
nxt_pnt.3             : _Z7nxt_pnti                                                         : called @  ./rv32_io.h:L72 
-----------------------------------------------------------
there are 50 unowned nodes...
(0:G.prv._(*this).burst_end_r)(1:G.prv._(*this).waddr)(2:G.prv._(*this).waddr_end)(3:G.prv._(*this).burst_count_w)
(4:G.prv._(*this).wres_end)(5:G.prv._(*this).uart.baud_period_m1)(6:G.prv._(*this).uart.tx.tick)(7:G.prv._(*this).uart.parity_type)
(8:G.prv._(*this).uart.bit_count_m1)(9:G.prv._(*this).uart.stop_count)(10:G.prv._(*this).uart.tx.bit_pos)(11:G.prv._(*this).w_state)
(12:G.prv._(*this).uart.activated)(13:G.prv._(*this).uart.tx.buf.full)(14:G.prv._(*this).uart.tx.buf.rp)(15:G.prv._(*this).uart.tx.buf.not_empty)
(16:G.prv._(*this).uart.tx.buf.wp)(17:G.prv._(*this).uart.tx.state)(18:G.prv._(*this).cycle)(19:G.prv._(*this).uart.rx_bit_d_n)
(20:G.prv._(*this).dbg_wcount)(21:G.prv._(*this).uart.tx.buf.buf)(22:G._(*this).uart.tx.buf.buf.REF)(23:G.prv._(*this).uart.rx.state)
(24:G.prv._(*this).uart.rx.tick)(25:G.prv._(*this).uart.rx.bit_pos)(26:G.prv._(*this).uart.rx_bit_samp)(27:G.prv._(*this).uart.tx.word)
(28:G.prv._(*this).uart.tx.parity)(29:G.prv._(*this).uart.rx.word)(30:G.prv._(*this).uart.rx.parity)(31:G.prv._(*this).raddr_end)
(32:G.prv._(*this).burst_count_r)(33:G.prv._(*this).out.rdat.valid)(34:G.prv._(*this).r_state)(35:G.prv._(*this).raddr)
(36:G.prv._(*this).uart.rx.buf.wp)(37:G.prv._(*this).uart.rx.buf.full)(38:G.prv._(*this).uart.rx.buf.rp)(39:G.prv._(*this).uart.rx.buf.not_empty)
(40:G.prv._(*this).dbg_rcount)(41:G.prv._(*this).out.rdat.resp)(42:G.prv._(*this).out.rdat.last)(43:G.prv._(*this).out.raddr.ready)
(44:G.prv._(*this).intr)(45:G.prv._(*this).uart.rx.buf.buf)(46:G._(*this).uart.rx.buf.buf.REF)(47:G.prv._(*this).uart.tx.bit_n)
(48:G.prv._(*this).uart.rx.error)(49:G.prv._(*this).out.rdat.data)
(unownedNodeStats : 110.5 gates, 50 nodes) : 0.0 comb-gates + 0 pipeBits + 16 stateBits + 1 FBBits
(_UART_AXI4L_step : 5753.0 gates, 891 nodes) : 2763.0 comb-gates + 68 pipeBits + 392 stateBits + 0 FBBits
  (excl.sub-modules : 423.0 gates, 238 nodes) : 46.0 comb-gates + 40 pipeBits + 18 stateBits + 0 FBBits
  (_1_UART_AXI4L : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_1_1_SlaveFSM : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_2_set_pin : 13.0 gates, 7 nodes) : 0.0 comb-gates + 0 pipeBits + 2 stateBits + 0 FBBits
  (_3_fsm_0 : 5317.0 gates, 646 nodes) : 2717.0 comb-gates + 28 pipeBits + 372 stateBits + 0 FBBits
    (excl.sub-modules : 425.5 gates, 21 nodes) : 211.0 comb-gates + 0 pipeBits + 33 stateBits + 0 FBBits
    (_3_1_preFsmUser : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_3_2_fsmRead : 1049.5 gates, 91 nodes) : 354.0 comb-gates + 1 pipeBits + 106 stateBits + 0 FBBits
      (excl.sub-modules : 948.0 gates, 56 nodes) : 259.0 comb-gates + 0 pipeBits + 106 stateBits + 0 FBBits
      (_3_2_1_setSLRead_1 : 0.0 gates, 5 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_2_1_1_set_0 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_2_1_1_1_set_5 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_2_1_2_set_13 : 0.0 gates, 4 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_2_1_2_1_set_14 : 0.0 gates, 4 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_2_devReadSetup : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_3_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_4_reset_2 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_2_4_1_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_5_devRead_1 : 101.5 gates, 30 nodes) : 95.0 comb-gates + 1 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 66.0 gates, 14 nodes) : 66.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_2_5_1_read_status : 35.5 gates, 16 nodes) : 29.0 comb-gates + 1 pipeBits + 0 stateBits + 0 FBBits
        (_3_2_5_2_UINT32_to_AXI_DType : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_6_set_14 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_7_reset_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_2_7_1_set_14 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_3_3_fsmWrite : 732.5 gates, 104 nodes) : 245.0 comb-gates + 0 pipeBits + 75 stateBits + 0 FBBits
      (excl.sub-modules : 724.5 gates, 83 nodes) : 237.0 comb-gates + 0 pipeBits + 75 stateBits + 0 FBBits
      (_3_3_1_devWriteSetup : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_2_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_3_set_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_4_reset_2 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_4_1_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_5_devWrite_1 : 7.0 gates, 15 nodes) : 7.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 7.0 gates, 15 nodes) : 7.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_5_1_AXI_DType_to_UINT32 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_6_set_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_7_set_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_8_reset_2 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_8_1_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_9_devWrite_1 : 1.0 gates, 2 nodes) : 1.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 1.0 gates, 2 nodes) : 1.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_9_1_AXI_DType_to_UINT32 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_10_reset_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_10_1_set_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_11_set_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_12_reset_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_12_1_set_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_13_reset_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_13_1_set_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_14_setSLWrite_1 : 0.0 gates, 4 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_14_1_set_0 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_3_14_1_1_set_5 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_14_2_set_1 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_3_14_2_1_set_4 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_14_3_set_2 : 0.0 gates, 2 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_3_14_3_1_set_3 : 0.0 gates, 2 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_3_4_fsmUser_2 : 3109.5 gates, 430 nodes) : 1907.0 comb-gates + 27 pipeBits + 158 stateBits + 0 FBBits
      (excl.sub-modules : 561.5 gates, 87 nodes) : 165.0 comb-gates + 3 pipeBits + 58 stateBits + 0 FBBits
      (_3_4_1_write_command : 941.5 gates, 52 nodes) : 766.0 comb-gates + 2 pipeBits + 25 stateBits + 0 FBBits
        (excl.sub-modules : 941.5 gates, 52 nodes) : 766.0 comb-gates + 2 pipeBits + 25 stateBits + 0 FBBits
        (_3_4_1_1_reset_port : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_4_1_1_1_reset_14 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_4_1_2_reset_port : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_4_1_2_1_reset_14 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_4_2_do_rx : 882.5 gates, 162 nodes) : 499.0 comb-gates + 21 pipeBits + 38 stateBits + 0 FBBits
        (excl.sub-modules : 700.0 gates, 114 nodes) : 336.0 comb-gates + 18 pipeBits + 38 stateBits + 0 FBBits
        (_3_4_2_1_activate : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_4_2_2_adjust_word : 52.0 gates, 17 nodes) : 52.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_4_2_3_parity_bit : 33.5 gates, 13 nodes) : 14.0 comb-gates + 3 pipeBits + 0 stateBits + 0 FBBits
        (_3_4_2_4_activate : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_4_2_5_update : 97.0 gates, 18 nodes) : 97.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 51.0 gates, 10 nodes) : 51.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_4_2_5_1_nxt_pnt : 23.0 gates, 4 nodes) : 23.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_4_2_5_2_nxt_pnt : 23.0 gates, 4 nodes) : 23.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_4_3_do_tx : 724.0 gates, 129 nodes) : 477.0 comb-gates + 1 pipeBits + 37 stateBits + 0 FBBits
        (excl.sub-modules : 623.0 gates, 106 nodes) : 376.0 comb-gates + 1 pipeBits + 37 stateBits + 0 FBBits
        (_3_4_3_1_activate : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_4_3_2_parity_bit : 4.0 gates, 4 nodes) : 4.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_4_3_3_activate : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_4_3_4_update : 97.0 gates, 18 nodes) : 97.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 51.0 gates, 10 nodes) : 51.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_4_3_4_1_nxt_pnt : 23.0 gates, 4 nodes) : 23.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_4_3_4_2_nxt_pnt : 23.0 gates, 4 nodes) : 23.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
*********************************************************
                _3_2_fsmRead :     948.0 gates(acc:  16.48%),     259.0 comb-gates +    0 pipeBits + 106 stateBits +   0 FBBits
        _3_4_1_write_command :     941.5 gates(acc:  32.84%),     766.0 comb-gates +    2 pipeBits +  25 stateBits +   0 FBBits
               _3_3_fsmWrite :     724.5 gates(acc:  45.44%),     237.0 comb-gates +    0 pipeBits +  75 stateBits +   0 FBBits
                _3_4_2_do_rx :     700.0 gates(acc:  57.60%),     336.0 comb-gates +   18 pipeBits +  38 stateBits +   0 FBBits
                _3_4_3_do_tx :     623.0 gates(acc:  68.43%),     376.0 comb-gates +    1 pipeBits +  37 stateBits +   0 FBBits
              _3_4_fsmUser_2 :     561.5 gates(acc:  78.19%),     165.0 comb-gates +    3 pipeBits +  58 stateBits +   0 FBBits
                    _3_fsm_0 :     425.5 gates(acc:  85.59%),     211.0 comb-gates +    0 pipeBits +  33 stateBits +   0 FBBits
            _UART_AXI4L_step :     423.0 gates(acc:  92.94%),      46.0 comb-gates +   40 pipeBits +  18 stateBits +   0 FBBits
**********************************************************/



module UART_AXI4L_step   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_axi_raddr_m_addr, G_axi_raddr_m_valid, G_axi_raddr_m_len, G_axi_waddr_m_addr, 
    G_axi_waddr_m_valid, G_axi_waddr_m_len, G_axi_rdat_m_ready, G_axi_wdat_m_data, 
    G_axi_wdat_m_valid, G_axi_wres_m_ready, G_uart_pin_rx, G_uart_pin_cts, 

    /* outputs */
    G_axi_raddr_s_ready, G_axi_waddr_s_ready, G_axi_rdat_s_data, G_axi_rdat_s_resp, 
    G_axi_rdat_s_valid, G_axi_rdat_s_last, G_axi_wdat_s_ready, G_axi_wres_s_resp, 
    G_axi_wres_s_valid, G_uart_pin_tx, G_uart_pin_rts, G_intr_out

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input [31:0] G_axi_raddr_m_addr ; /// <0,4294967295> [U32];
  input        G_axi_raddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_raddr_m_len  ; /// <0,15> [U4]         ;
  input [31:0] G_axi_waddr_m_addr ; /// <0,4294967295> [U32];
  input        G_axi_waddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_waddr_m_len  ; /// <0,15> [U4]         ;
  input        G_axi_rdat_m_ready ; /// <0,1> [U1]          ;
  input [31:0] G_axi_wdat_m_data  ; /// <0,4294967295> [U32];
  input        G_axi_wdat_m_valid ; /// <0,1> [U1]          ;
  input        G_axi_wres_m_ready ; /// <0,1> [U1]          ;
  input        G_uart_pin_rx      ; /// <0,1> [U1]          ;
  input        G_uart_pin_cts     ; /// <0,1> [U1]          ;

  /*output ports*/
  output       G_axi_raddr_s_ready; /// <0,1> [U1]          ;
  output       G_axi_waddr_s_ready; /// <0,1> [U1]          ;
  output[31:0] G_axi_rdat_s_data  ; /// <0,4294967295> [U32];
  output       G_axi_rdat_s_resp  ; /// <0,0> [U0]          ;
  output       G_axi_rdat_s_valid ; /// <0,1> [U1]          ;
  output       G_axi_rdat_s_last  ; /// <0,1> [U1]          ;
  output       G_axi_wdat_s_ready ; /// <0,1> [U1]          ;
  output       G_axi_wres_s_resp  ; /// <0,0> [U0]          ;
  output       G_axi_wres_s_valid ; /// <0,1> [U1]          ;
  output       G_uart_pin_tx      ; /// <0,1> [U1]          ;
  output       G_uart_pin_rts     ; /// <0,1> [U1]          ;
  output       G_intr_out         ; /// <0,1> [U1]          ;

  /*probe ports*/
  wire         _prb_UART_AXI4L_step_pSetup;

  UART_AXI4L_step_probed #(M_ID) M0   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_axi_raddr_m_addr, G_axi_raddr_m_valid, G_axi_raddr_m_len, G_axi_waddr_m_addr, 
    G_axi_waddr_m_valid, G_axi_waddr_m_len, G_axi_rdat_m_ready, G_axi_wdat_m_data, 
    G_axi_wdat_m_valid, G_axi_wres_m_ready, G_uart_pin_rx, G_uart_pin_cts, 

    /* outputs */
    G_axi_raddr_s_ready, G_axi_waddr_s_ready, G_axi_rdat_s_data, G_axi_rdat_s_resp, 
    G_axi_rdat_s_valid, G_axi_rdat_s_last, G_axi_wdat_s_ready, G_axi_wres_s_resp, 
    G_axi_wres_s_valid, G_uart_pin_tx, G_uart_pin_rts, G_intr_out, 

    /*probes*/
    _prb_UART_AXI4L_step_pSetup

  );

endmodule // UART_AXI4L_step

module UART_AXI4L_step_probed   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_axi_raddr_m_addr, G_axi_raddr_m_valid, G_axi_raddr_m_len, G_axi_waddr_m_addr, 
    G_axi_waddr_m_valid, G_axi_waddr_m_len, G_axi_rdat_m_ready, G_axi_wdat_m_data, 
    G_axi_wdat_m_valid, G_axi_wres_m_ready, G_uart_pin_rx, G_uart_pin_cts, 

    /* outputs */
    G_axi_raddr_s_ready, G_axi_waddr_s_ready, G_axi_rdat_s_data, G_axi_rdat_s_resp, 
    G_axi_rdat_s_valid, G_axi_rdat_s_last, G_axi_wdat_s_ready, G_axi_wres_s_resp, 
    G_axi_wres_s_valid, G_uart_pin_tx, G_uart_pin_rts, G_intr_out, 

    /*probes*/
    _prb_UART_AXI4L_step_pSetup

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input [31:0] G_axi_raddr_m_addr ; /// <0,4294967295> [U32];
  input        G_axi_raddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_raddr_m_len  ; /// <0,15> [U4]         ;
  input [31:0] G_axi_waddr_m_addr ; /// <0,4294967295> [U32];
  input        G_axi_waddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_waddr_m_len  ; /// <0,15> [U4]         ;
  input        G_axi_rdat_m_ready ; /// <0,1> [U1]          ;
  input [31:0] G_axi_wdat_m_data  ; /// <0,4294967295> [U32];
  input        G_axi_wdat_m_valid ; /// <0,1> [U1]          ;
  input        G_axi_wres_m_ready ; /// <0,1> [U1]          ;
  input        G_uart_pin_rx      ; /// <0,1> [U1]          ;
  input        G_uart_pin_cts     ; /// <0,1> [U1]          ;

  /*output ports*/
  output       G_axi_raddr_s_ready; /// <0,1> [U1]          ;
  output       G_axi_waddr_s_ready; /// <0,1> [U1]          ;
  output[31:0] G_axi_rdat_s_data  ; /// <0,4294967295> [U32];
  output       G_axi_rdat_s_resp  ; /// <0,0> [U0]          ;
  output       G_axi_rdat_s_valid ; /// <0,1> [U1]          ;
  output       G_axi_rdat_s_last  ; /// <0,1> [U1]          ;
  output       G_axi_wdat_s_ready ; /// <0,1> [U1]          ;
  output       G_axi_wres_s_resp  ; /// <0,0> [U0]          ;
  output       G_axi_wres_s_valid ; /// <0,1> [U1]          ;
  output       G_uart_pin_tx      ; /// <0,1> [U1]          ;
  output       G_uart_pin_rts     ; /// <0,1> [U1]          ;
  output       G_intr_out         ; /// <0,1> [U1]          ;

  /*probe ports*/
  output       _prb_UART_AXI4L_step_pSetup;

  UART_AXI4L_step_no_mem #(M_ID) M0   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_axi_raddr_m_addr, G_axi_raddr_m_valid, G_axi_raddr_m_len, G_axi_waddr_m_addr, 
    G_axi_waddr_m_valid, G_axi_waddr_m_len, G_axi_rdat_m_ready, G_axi_wdat_m_data, 
    G_axi_wdat_m_valid, G_axi_wres_m_ready, G_uart_pin_rx, G_uart_pin_cts, 

    /* outputs */
    G_axi_raddr_s_ready, G_axi_waddr_s_ready, G_axi_rdat_s_data, G_axi_rdat_s_resp, 
    G_axi_rdat_s_valid, G_axi_rdat_s_last, G_axi_wdat_s_ready, G_axi_wres_s_resp, 
    G_axi_wres_s_valid, G_uart_pin_tx, G_uart_pin_rts, G_intr_out, 

    /*probes*/
    _prb_UART_AXI4L_step_pSetup

  );

endmodule // UART_AXI4L_step_probed

/// skipped memWrapper...

module UART_AXI4L_step_no_mem   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_axi_raddr_m_addr, G_axi_raddr_m_valid, G_axi_raddr_m_len, G_axi_waddr_m_addr, 
    G_axi_waddr_m_valid, G_axi_waddr_m_len, G_axi_rdat_m_ready, G_axi_wdat_m_data, 
    G_axi_wdat_m_valid, G_axi_wres_m_ready, G_uart_pin_rx, G_uart_pin_cts, 

    /* outputs */
    G_axi_raddr_s_ready, G_axi_waddr_s_ready, G_axi_rdat_s_data, G_axi_rdat_s_resp, 
    G_axi_rdat_s_valid, G_axi_rdat_s_last, G_axi_wdat_s_ready, G_axi_wres_s_resp, 
    G_axi_wres_s_valid, G_uart_pin_tx, G_uart_pin_rts, G_intr_out, 

    /*probes*/
    _prb_UART_AXI4L_step_pSetup

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input [31:0] G_axi_raddr_m_addr ; /// <0,4294967295> [U32];
  input        G_axi_raddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_raddr_m_len  ; /// <0,15> [U4]         ;
  input [31:0] G_axi_waddr_m_addr ; /// <0,4294967295> [U32];
  input        G_axi_waddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_waddr_m_len  ; /// <0,15> [U4]         ;
  input        G_axi_rdat_m_ready ; /// <0,1> [U1]          ;
  input [31:0] G_axi_wdat_m_data  ; /// <0,4294967295> [U32];
  input        G_axi_wdat_m_valid ; /// <0,1> [U1]          ;
  input        G_axi_wres_m_ready ; /// <0,1> [U1]          ;
  input        G_uart_pin_rx      ; /// <0,1> [U1]          ;
  input        G_uart_pin_cts     ; /// <0,1> [U1]          ;

  /*output ports*/
  output       G_axi_raddr_s_ready; /// <0,1> [U1]          ;
  output       G_axi_waddr_s_ready; /// <0,1> [U1]          ;
  output[31:0] G_axi_rdat_s_data  ; /// <0,4294967295> [U32];
  output       G_axi_rdat_s_resp  ; /// <0,0> [U0]          ;
  output       G_axi_rdat_s_valid ; /// <0,1> [U1]          ;
  output       G_axi_rdat_s_last  ; /// <0,1> [U1]          ;
  output       G_axi_wdat_s_ready ; /// <0,1> [U1]          ;
  output       G_axi_wres_s_resp  ; /// <0,0> [U0]          ;
  output       G_axi_wres_s_valid ; /// <0,1> [U1]          ;
  output       G_uart_pin_tx      ; /// <0,1> [U1]          ;
  output       G_uart_pin_rts     ; /// <0,1> [U1]          ;
  output       G_intr_out         ; /// <0,1> [U1]          ;
  reg          G_intr_out         ;

  /*probe ports*/
  output       _prb_UART_AXI4L_step_pSetup;

  wire      ROOT_CP = 1'b1; /// root control path (always active)

  reg       G__this_out_raddr_ready;
  reg       G__this_out_waddr_ready;
  reg[31:0] G__this_out_rdat_data;
  reg       G__this_out_rdat_resp, G__this_out_rdat_valid, G__this_out_rdat_last;
  reg       G__this_out_wdat_ready;
  reg       G__this_out_wres_resp, G__this_out_wres_valid;
  reg[ 1:0] G__this_r_state, G__this_w_state;
  reg[31:0] G__this_raddr, G__this_waddr;
  reg       G__this_raddr_end, G__this_waddr_end, G__this_wres_end, G__this_intr;
  reg[31:0] G__this_cycle;
  reg[ 3:0] G__this_burst_count_r, G__this_burst_count_w;
  reg[31:0] G__this_dbg_rcount, G__this_dbg_wcount;
  reg       G__this_uart_rx_buf_not_empty, G__this_uart_rx_buf_full;
  reg[ 3:0] G__this_uart_rx_buf_rp, G__this_uart_rx_buf_wp;
  reg[ 7:0] G__this_uart_rx_buf_buf[0:2];
  reg[ 7:0] G__this_uart_rx_word;
  reg[ 1:0] G__this_uart_rx_state;
  reg       G__this_uart_rx_bit_n, G__this_uart_rx_parity, G__this_uart_rx_error;
  reg[ 3:0] G__this_uart_rx_bit_pos;
  reg[15:0] G__this_uart_rx_tick;
  reg       G__this_uart_tx_buf_not_empty, G__this_uart_tx_buf_full;
  reg[ 3:0] G__this_uart_tx_buf_rp, G__this_uart_tx_buf_wp;
  reg[ 7:0] G__this_uart_tx_buf_buf[0:2];
  reg[ 7:0] G__this_uart_tx_word;
  reg[ 1:0] G__this_uart_tx_state;
  reg       G__this_uart_tx_bit_n, G__this_uart_tx_parity;
  reg[ 3:0] G__this_uart_tx_bit_pos;
  reg[15:0] G__this_uart_tx_tick;
  reg       G__this_uart_activated, G__this_uart_rx_bit_d_n, 
    G__this_uart_rx_bit_samp, G__this_uart_cts;
  reg[15:0] G__this_uart_baud_period_m1;
  reg[ 2:0] G__this_uart_bit_count_m1;
  reg[ 1:0] G__this_uart_stop_count;
  reg[ 2:0] G__this_uart_parity_type;
  reg       _p1_CE_233, _p1_CE_237, _p1_CM_657, _p1_CM_697, _p1_CP_fsmUser_2_B1_F1, 
    _p1_CP_fsmUser_2_B1_F2, _p1_CP_fsmUser_2_B4_F2, _p1_CP_write_command_B01_F2, 
    _p1_DM_658, _p1_G_axi_raddr_m_valid, _p1_G_axi_rdat_m_ready, _p1_I_do_rx_B10_1, 
    _p1_I_do_tx_B27_0, _p1_I_read_status_B1_09, _p1_I_write_command_B01_1, 
    _p1_UART_AXI4L_step_pSetup;
  reg[ 1:0] _p1_I_do_rx_B18_2;
  reg[ 3:0] _p1_G_axi_raddr_m_len;
  reg[14:0] _p1_I_do_rx_B11_1;
  reg[31:0] _p1_G_axi_raddr_m_addr;
  reg       _p1_DFB_G__this_uart_activated/*prv*/, 
    _p1_DFB_G__this_uart_tx_buf_full/*prv*/;
  reg[ 1:0] _p1_DFB_G__this_uart_tx_state/*prv*/;
  reg[ 2:0] _p1_DFB_G__this_uart_bit_count_m1/*prv*/;
  reg[15:0] _p1_DFB_G__this_uart_baud_period_m1/*prv*/;
  reg       _p2_DFB_G__this_burst_end_r/*prv*/;

function[ 7:0] _lut_G_HIDDEN_GLOBAL_59;
  input[ 3:0] idx0;
  case(idx0)
    4'd0  : _lut_G_HIDDEN_GLOBAL_59 = 8'h3c;
    4'd1  : _lut_G_HIDDEN_GLOBAL_59 = 8'h55;
    4'd2  : _lut_G_HIDDEN_GLOBAL_59 = 8'h41;
    4'd3  : _lut_G_HIDDEN_GLOBAL_59 = 8'h52;
    4'd4  : _lut_G_HIDDEN_GLOBAL_59 = 8'h54;
    4'd5  : _lut_G_HIDDEN_GLOBAL_59 = 8'h5f;
    4'd6  : _lut_G_HIDDEN_GLOBAL_59 = 8'h45;
    4'd7  : _lut_G_HIDDEN_GLOBAL_59 = 8'h58;
    4'd8  : _lut_G_HIDDEN_GLOBAL_59 = 8'h54;
    4'd9  : _lut_G_HIDDEN_GLOBAL_59 = 8'h2d;
    4'd10 : _lut_G_HIDDEN_GLOBAL_59 = 8'h31;
    4'd11 : _lut_G_HIDDEN_GLOBAL_59 = 8'h3e;
    4'd12 : _lut_G_HIDDEN_GLOBAL_59 = 8'h0;
    default : _lut_G_HIDDEN_GLOBAL_59 = 8'hx;
  endcase
endfunction /*_lut_G_HIDDEN_GLOBAL_59*/


function[ 1:0] _WIRE_ARRAY_2_4;
  input[ 1:0] idx0;
  input[ 1:0] din00,din01,din02,din03;
  case(idx0)
    2'd0  : _WIRE_ARRAY_2_4 = din00;
    2'd1  : _WIRE_ARRAY_2_4 = din01;
    2'd2  : _WIRE_ARRAY_2_4 = din02;
    2'd3  : _WIRE_ARRAY_2_4 = din03;
  endcase
endfunction /*_WIRE_ARRAY_2_4*/

function[ 2:0] _WIRE_ARRAY_3_4;
  input[ 1:0] idx0;
  input[ 2:0] din00,din01,din02,din03;
  case(idx0)
    2'd0  : _WIRE_ARRAY_3_4 = din00;
    2'd1  : _WIRE_ARRAY_3_4 = din01;
    2'd2  : _WIRE_ARRAY_3_4 = din02;
    2'd3  : _WIRE_ARRAY_3_4 = din03;
  endcase
endfunction /*_WIRE_ARRAY_3_4*/

function[ 7:0] _WIRE_ARRAY_8_3;
  input[ 1:0] idx0;
  input[ 7:0] din00,din01,din02;
  case(idx0)
    2'd0  : _WIRE_ARRAY_8_3 = din00;
    2'd1  : _WIRE_ARRAY_8_3 = din01;
    2'd2  : _WIRE_ARRAY_8_3 = din02;
    default : _WIRE_ARRAY_8_3 = 8'hx;
  endcase
endfunction /*_WIRE_ARRAY_8_3*/

function[19:0] _WIRE_ARRAY_20_16;
  input[ 3:0] idx0;
  input[19:0] din00,din01,din02,din03,din04,din05,din06,din07;
  input[19:0] din08,din09,din10,din11,din12,din13,din14,din15;
  case(idx0)
    4'd0  : _WIRE_ARRAY_20_16 = din00;
    4'd1  : _WIRE_ARRAY_20_16 = din01;
    4'd2  : _WIRE_ARRAY_20_16 = din02;
    4'd3  : _WIRE_ARRAY_20_16 = din03;
    4'd4  : _WIRE_ARRAY_20_16 = din04;
    4'd5  : _WIRE_ARRAY_20_16 = din05;
    4'd6  : _WIRE_ARRAY_20_16 = din06;
    4'd7  : _WIRE_ARRAY_20_16 = din07;
    4'd8  : _WIRE_ARRAY_20_16 = din08;
    4'd9  : _WIRE_ARRAY_20_16 = din09;
    4'd10 : _WIRE_ARRAY_20_16 = din10;
    4'd11 : _WIRE_ARRAY_20_16 = din11;
    4'd12 : _WIRE_ARRAY_20_16 = din12;
    4'd13 : _WIRE_ARRAY_20_16 = din13;
    4'd14 : _WIRE_ARRAY_20_16 = din14;
    4'd15 : _WIRE_ARRAY_20_16 = din15;
  endcase
endfunction /*_WIRE_ARRAY_20_16*/

task printf_gep_array_0; /// I.write_command.B08.1  = AD.10 ; // (NL) [F(9.0)<1>,B(2.0)<0>] <00,ff> [U8] <FB> P2 t[i8*] op[load] (rv32_io.cpp:L466)[UART::write_command]
  input[1:0] idx;
  case(idx)
    2'd0 : $write("<UART_AXI-0>");
    2'd1 : $write("<UART_EXT-0>");
    default : $write("<UART_AXI-1>");
  endcase
endtask



  //// pipe-stage(2) : combinational-logic...

assign     G_axi_raddr_s_ready  =  G__this_out_raddr_ready/*prv*/          ; // DSO.GRP.9 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L141)[AXI4L::CH::ADDR::SL::set]
assign     G_axi_rdat_s_last    =  G__this_out_rdat_last/*prv*/            ; // DSO.GRP.9 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CH::RDAT::SL::set]
assign     G_axi_rdat_s_resp    =  G__this_out_rdat_resp/*prv*/            ; // DSO.GRP.9 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,0> [U0] P2 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CH::RDAT::SL::set]
assign     G_axi_rdat_s_valid   =  G__this_out_rdat_valid/*prv*/           ; // DSO.GRP.9 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CH::RDAT::SL::set]
assign     G_axi_waddr_s_ready  =  G__this_out_waddr_ready                 ; // DSO.GRP.9 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L141)[AXI4L::CH::ADDR::SL::set]
assign     G_axi_wdat_s_ready   =  G__this_out_wdat_ready                  ; // DSO.GRP.9 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L169)[AXI4L::CH::WDAT::SL::set]
assign     G_axi_wres_s_resp    =  G__this_out_wres_resp                   ; // DSO.GRP.9 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,0> [U0] P2 OP(assign:=)(./rv32_io.h:L183)[AXI4L::CH::WRES::SL::set]
assign     G_axi_wres_s_valid   =  G__this_out_wres_valid                  ; // DSO.GRP.9 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L183)[AXI4L::CH::WRES::SL::set]
wire       A_737 =  _p2_DFB_G__this_burst_end_r/*prv*/ & G__this_out_rdat_valid/*prv*/; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<1>,B(6.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L515)[AXI4L::SlaveFSM::fsmRead]
wire[ 1:0] N_003                =  G__this_r_state/*prv*/ & 2'h3           ; // GRP.30 <B>(NL) [F(0.0)<1>,B(16.0)<0>] <0,3> [U2] P2 OP(and:&)(rv32_io.cpp:L499)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B02_F4    =  N_003 == 2'h1                           ; // GRP.30 <B>(L1.0+A1.0+fo5+ld[1]+S) [F(1.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L499)[AXI4L::SlaveFSM::fsmRead]
wire       E_fsmRead_B12_1      =  A_737 & CP_fsmRead_B02_F4               ; // GRP.30 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(2.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L515)[AXI4L::SlaveFSM::fsmRead]
wire       I_fsmRead_B11_3      =  ! G__this_out_rdat_valid/*prv*/         ; // GRP.30 <B>(fo1+ld[1]) [F(0.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L515)[AXI4L::SlaveFSM::fsmRead]
wire       I_fsmRead_B12_1      =  ! _p2_DFB_G__this_burst_end_r/*prv*/    ; //  <FB+*>(fo1+ld[1]) [F(0.0)<0>,B(17.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L515)[AXI4L::SlaveFSM::fsmRead]
wire       QC_665        =  G__this_out_rdat_valid/*prv*/ & I_fsmRead_B12_1; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<1>,B(17.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L124)(rv32_io.cpp:L514)[AXI4L::SlaveFSM::fsmRead]
wire       QC_666               =  I_fsmRead_B11_3 | QC_665                ; // GRP.30 <FB>(L1.0+A1.0+fo34+ld[1:1]) [F(2.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L124)(rv32_io.cpp:L514)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B11_F1_B12_F1 =  CP_fsmRead_B02_F4 & QC_666          ; // GRP.30 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(3.0)<1>,B(15.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L515,L515)[AXI4L::SlaveFSM::fsmRead]
wire       CP_devRead_1_B1_F1 =  G__this_uart_rx_buf_not_empty/*prv*/ & _p1_DFB_G__this_uart_activated/*prv*/; // GRP.30 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L608)[UART_AXI4L::devRead]
wire[ 2:0] I_devRead_1_B1_1     =  G__this_raddr/*prv*/[2:0]/*&3'h7*/      ; // GRP.30 <B>(NL) [F(0.0)<1>,B(17.0)<0>] <0,7> [U3] P2 OP(and:&)(rv32_io.cpp:L608)[UART_AXI4L::devRead]
wire       I_devRead_1_B1_2     =  I_devRead_1_B1_1 == 3'h0                ; // GRP.30 <B>(L2.0+A2.0+fo2+ld[1]+S) [F(2.0)<1>,B(17.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L608)[UART_AXI4L::devRead]
wire       A_774                =  CP_devRead_1_B1_F1 & I_devRead_1_B1_2   ; // GRP.30 <B>(L1.0+A1.0+fo10+ld[1:1]) [F(3.0)<1>,B(15.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L295)(rv32_io.cpp:L613)[AXI4L::SlaveFSM::fsm]
wire       CE_058               =  ! I_devRead_1_B1_2                      ; // GRP.30 <B>(fo8+ld[1]) [F(2.0)<1>,B(6.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L608)[UART_AXI4L::devRead]
wire       L_devRead_1_RET      =  A_774 | CE_058                          ; // GRP.30 <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<1>,B(6.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L619)[UART_AXI4L::devRead]
wire       E_fsmRead_B14_1    =  CP_fsmRead_B11_F1_B12_F1 & L_devRead_1_RET; // GRP.30 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(5.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L515)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B12_F2_B14_F2 =  E_fsmRead_B12_1 | E_fsmRead_B14_1   ; // GRP.30 <FB>(L1.0+A1.0+fo71+ld[1:1]) [F(6.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L515,L515)[AXI4L::SlaveFSM::fsmRead]
wire       I_fsmRead_B15_2      =  G__this_burst_count_r/*prv*/ == 4'h0    ; // GRP.30 <B>(L2.0+A3.0+fo4+ld[1]+S) [F(2.0)<1>,B(6.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L516)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B16_F1  =  CP_fsmRead_B12_F2_B14_F2 & I_fsmRead_B15_2; //  <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(7.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L520)[AXI4L::SlaveFSM::fsmRead]
wire       G__this_burst_end_r  =  CP_fsmRead_B16_F1                       ; //  <B-*>(NL) [F(7.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(rv32_io.cpp:L505,L522)[AXI4L::SlaveFSM::fsmRead]
assign     G_axi_rdat_s_data    =  G__this_out_rdat_data/*prv*/            ; // DSO.GRP.9 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,4294967295> [U32] P2 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CH::RDAT::SL::set]
wire       CP_fsmRead_B02_F2    =  N_003 == 2'h0                           ; // GRP.30 <B>(L1.0+A1.0+fo5+ld[1]+S) [F(1.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L499)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B03_F2 =  CP_fsmRead_B02_F2 & _p1_G_axi_raddr_m_valid; // GRP.30 <FB>(L1.0+A1.0+fo38+ld[1:1]) [F(2.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L501)[AXI4L::SlaveFSM::fsmRead]
wire       CM_480               =  CP_fsmRead_B03_F2 | CP_fsmRead_B02_F4   ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L141)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B02_F8    =  N_003 == 2'h2                           ; // GRP.30 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L499)[AXI4L::SlaveFSM::fsmRead]
wire       O_784                =  CP_fsmRead_B02_F8 | E_fsmRead_B12_1     ; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
wire       CM_484               =  O_784 | E_fsmRead_B14_1                 ; // GRP.30 <FB>(L1.0+A1.0+fo35+ld[1:1]) [F(6.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
wire[ 1:0] N_561             =  G__this_uart_rx_buf_rp/*prv*/[1:0]/*&2'h3*/; //  <B>(NL) [F(0.0)<1>,B(10.0)<0>] <0,3> [U2] P2 OP(and:&)(rv32_io.cpp:L614)[UART_AXI4L::devRead]
wire[ 7:0] AD_3                =  G__this_uart_rx_buf_buf/*prv*/ [ N_561 ] ; // RA.GRP.0 <B>(L4.0+A32.0+fo1+ld[1:3]+S) [F(4.0)<1>,B(10.0)<0>] <0,255> [U8] P2 OP(addr:[])(rv32_io.cpp:L614)[UART_AXI4L::devRead]
wire[ 7:0] DM_668               =  (A_774) ? AD_3 : 8'h0                   ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(5.0)<1>,B(6.0)<0>] <0,255> [U8] P2 OP(sel:?)(rv32_io.cpp:L607,L609,L614)[UART_AXI4L::devRead]
wire[ 1:0] I_read_status_B1_16 =  _p1_DFB_G__this_uart_tx_state/*prv*/ | G__this_uart_rx_state/*prv*/; //  <B>(L1.0+A2.0+fo1+ld[1:1]) [F(1.0)<1>,B(10.0)<0>] <0,3> [U2] P2 OP(or:|)(rv32_io.cpp:L494)[UART::read_status]
wire       I_read_status_B1_17  =  I_read_status_B1_16 == 2'h0             ; //  <B>(L1.0+A1.0+fo5+ld[1]+S) [F(2.0)<1>,B(9.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L494)[UART::read_status]
wire[ 4:0] I_read_status_B1_18  =  (I_read_status_B1_17) ? 5'h0 : 5'h10    ; //  <B>(L1.0+A5.0+fo1+ld[5:0:1]) [F(3.0)<1>,B(8.0)<0>] <0,16> [U5] P2 OP(sel:?)(rv32_io.cpp:L494)[UART::read_status]
wire       I_devRead_1_B3_1     =  ! G__this_uart_rx_buf_not_empty/*prv*/  ; //  <B>(fo4+ld[1]) [F(0.0)<1>,B(10.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L612)[UART_AXI4L::devRead]
wire[ 3:0] I_read_status_B1_19  =  (I_devRead_1_B3_1) ? 4'h8 : 4'h0        ; //  <B>(L1.0+A4.0+fo1+ld[4:0:1]) [F(1.0)<1>,B(10.0)<0>] <0,8> [U4] P2 OP(sel:?)(rv32_io.cpp:L494)[UART::read_status]
wire[ 6:0] I_read_status_B1_14  =  {G__this_uart_cts,6'b0}/*<<6*/          ; //  <B>(NL) [F(0.0)<1>,B(9.0)<0>] <0,64> [U7] ZLB(6) P2 OP(shl:<<)(rv32_io.cpp:L494)[UART::read_status]
wire[ 6:0] I_read_status_B1_22 =  I_read_status_B1_14 | {6'b0,_p1_DFB_G__this_uart_tx_buf_full/*prv*/}; //  <B>(fo1+ld[1:1]) [F(0.0)<1>,B(9.0)<0>] <0,127> [U7] P2 OP(or:|)(rv32_io.cpp:L494)[UART::read_status]
wire[ 6:0] I_read_status_B1_25 =  {3'b0,I_read_status_B1_19} | I_read_status_B1_22; //  <B>(L1.0+A4.0+fo1+ld[1:1]) [F(2.0)<1>,B(9.0)<0>] <0,127> [U7] P2 OP(or:|)(rv32_io.cpp:L494)[UART::read_status]
wire[ 2:0] I_read_status_B1_20 =  {G__this_uart_rx_buf_full/*prv*/,2'b0}/*<<2*/; //  <B>(NL) [F(0.0)<1>,B(8.0)<0>] <0,4> [U3] ZLB(2) P2 OP(shl:<<)(rv32_io.cpp:L494)[UART::read_status]
wire[ 5:0] I_read_status_B1_15 =  {G__this_uart_rx_error/*prv*/,5'b0}/*<<5*/; //  <B>(NL) [F(0.0)<1>,B(8.0)<0>] <0,32> [U6] ZLB(5) P2 OP(shl:<<)(rv32_io.cpp:L494)[UART::read_status]
wire[ 5:0] I_read_status_B1_24 =  {3'b0,I_read_status_B1_20} | I_read_status_B1_15; //  <B>(fo1+ld[1:1]) [F(0.0)<1>,B(8.0)<0>] <0,63> [U6] ZLB(2) P2 OP(or:|)(rv32_io.cpp:L494)[UART::read_status]
wire[ 1:0] I_read_status_B1_21  =  (_p1_I_read_status_B1_09) ? 2'h2 : 2'h0 ; //  <B>(L1.0+A2.0+fo1+ld[2:0:1]) [F(1.0)<0>,B(9.0)<0>] <0,2> [U2] P2 OP(sel:?)(rv32_io.cpp:L494)[UART::read_status]
wire[ 5:0] O_757        =  I_read_status_B1_24 | {4'b0,I_read_status_B1_21}; //  <B>(fo1+ld[1:1]) [F(1.0)<1>,B(8.0)<0>] <0,63> [U6] P2 OP(or:|)(rv32_io.cpp:L494)[UART::read_status]
wire[ 6:0] O_769                =  I_read_status_B1_25 | {1'b0,O_757}      ; //  <B>(L1.0+A6.0+fo1+ld[1:1]) [F(3.0)<1>,B(8.0)<0>] <0,127> [U7] P2 OP(or:|)(rv32_io.cpp:L494)[UART::read_status]
wire[ 6:0] I_read_status_B1_27  =  {2'b0,I_read_status_B1_18} | O_769      ; //  <B>(L1.0+A5.0+fo1+ld[1:1]) [F(4.0)<1>,B(7.0)<0>] <0,127> [U7] P2 OP(or:|)(rv32_io.cpp:L494)[UART::read_status]
wire[ 6:0] L_read_status_RET    =  I_read_status_B1_27                     ; //  <B>(NL) [F(4.0)<1>,B(6.0)<0>] <0,127> [U7] P2 OP(assign:=)(rv32_io.cpp:L494)[UART::read_status]
wire[ 6:0] DM_669               =  (CE_058) ? L_read_status_RET : 7'h0     ; //  <B>(L1.0+A7.0+fo1+ld[7:1]) [F(5.0)<1>,B(6.0)<0>] <0,127> [U7] P2 OP(sel:?)(rv32_io.cpp:L607,L609,L614)[UART_AXI4L::devRead]
wire[ 7:0] DM_671               =  DM_668 | {1'b0,DM_669}                  ; //  <B>(L1.0+A7.0+fo1+ld[1:1]) [F(6.0)<1>,B(5.0)<0>] <0,255> [U8] P2 OP(or:|)(rv32_io.cpp:L607,L609,L614)[UART_AXI4L::devRead]
wire[ 7:0] L_devRead_1_alc5     =  (L_devRead_1_RET) ? DM_671 : 8'h0       ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(7.0)<1>,B(4.0)<0>] <0,255> [U8] P2 OP(sel:?)(rv32_io.cpp:L607,L609,L614)[UART_AXI4L::devRead]
wire[31:0] L_fsmRead_alc3 =  (QC_666) ? {24'b0,L_devRead_1_alc5} : G__this_out_rdat_data/*prv*/; // GRP.18 <FB>(L2.0+A64.0+fo1+ld[32:1:1]) [F(9.0)<1>,B(3.0)<0>] <0,4294967295> [U32] P2 OP(sel:?)(./rv32_io.h:L124)(rv32_io.cpp:L514)[AXI4L::SlaveFSM::fsmRead]
wire[31:0] DM_483    =  (CP_fsmRead_B12_F2_B14_F2) ? L_fsmRead_alc3 : 32'h0; // GRP.18 <FB>(L1.0+A32.0+fo1+ld[32:1]) [F(10.0)<1>,B(1.0)<0>] <0,4294967295> [U32] P2 OP(sel:?)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
wire       DM_487    =  (CP_fsmRead_B12_F2_B14_F2) ? I_fsmRead_B15_2 : 1'h0; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(7.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(sel:?)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
wire       A_787                =  _p1_G_axi_rdat_m_ready & I_fsmRead_B15_2; // GRP.30 <FB>(L1.0+A1.0+fo3+ld[1:1]) [F(3.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L521)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B17_F2    =  A_787 & CP_fsmRead_B12_F2_B14_F2        ; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(7.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L521)[AXI4L::SlaveFSM::fsmRead]
wire       I_fsmRead_B03_1      =  ! _p1_G_axi_raddr_m_valid               ; //  <FB>(fo2+ld[1]) [F(0.0)<0>,B(5.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L501)[AXI4L::SlaveFSM::fsmRead]
wire       I_fsmRead_B23_1      =  ! G__this_raddr_end/*prv*/              ; // GRP.30 <B>(fo1+ld[1]) [F(0.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L532)[AXI4L::SlaveFSM::fsmRead]
wire       A_738                =  I_fsmRead_B03_1 & I_fsmRead_B23_1       ; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L532)[AXI4L::SlaveFSM::fsmRead]
wire       AO_753               =  G__this_raddr_end/*prv*/ | A_738        ; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L532,L532)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B23_F2_B24_F1 =  CP_fsmRead_B02_F8 & AO_753          ; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L532,L532)[AXI4L::SlaveFSM::fsmRead]
wire       O_791            =  CP_fsmRead_B23_F2_B24_F1 | CP_fsmRead_B03_F2; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
wire       CM_504               =  CP_fsmRead_B17_F2 | O_791               ; // GRP.30 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(8.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
wire[ 1:0] MA_789               =  (A_787) ? 2'h2 : 2'h0                   ; // GRP.30 <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(4.0)<1>,B(3.0)<0>] <0,2> [U2] P2 OP(sel:?)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
wire[ 1:0] DM_501             =  (CP_fsmRead_B12_F2_B14_F2) ? MA_789 : 2'h0; // GRP.30 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(7.0)<1>,B(2.0)<0>] <0,2> [U2] P2 OP(sel:?)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
wire[ 1:0] DM_503               =  {1'b0,CP_fsmRead_B03_F2} | DM_501       ; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<1>,B(1.0)<0>] <0,3> [U2] P2 OP(or:|)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B09_F1    =  CP_fsmRead_B02_F4 & I_fsmRead_B03_1     ; // GRP.30 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(2.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L513)[AXI4L::SlaveFSM::fsmRead]
wire       CM_515               =  CP_fsmRead_B03_F2 | CP_fsmRead_B09_F1   ; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L507,L513)[AXI4L::SlaveFSM::fsmRead]
wire       G__this_uart_tx_irq  =  _p1_I_do_tx_B27_0                       ; // (NL) [F(0.0)<0>,B(1.0)<0>] <0,1> [U1] P2 OP(assign:=)(rv32_io.cpp:L309)[UART::do_tx]
wire       I_fsmUser_2_B8_2 =  G__this_uart_tx_irq | G__this_uart_rx_buf_not_empty/*prv*/; // (L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L653)[UART_AXI4L::fsmUser]
wire       G__this_nxt_intr     =  I_fsmUser_2_B8_2                        ; // (NL) [F(1.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(rv32_io.cpp:L653)[AXI4L::SlaveFSM::fsm]
wire       CE_046               =  ! I_fsmRead_B15_2                       ; // GRP.30 <B>(fo1+ld[1]) [F(2.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L520)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B16_F2    =  CP_fsmRead_B12_F2_B14_F2 & CE_046       ; // GRP.30 <FB>(L1.0+A1.0+fo6+ld[1:1]) [F(7.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L520)[AXI4L::SlaveFSM::fsmRead]
wire       CM_541               =  CP_fsmRead_B03_F2 | CP_fsmRead_B16_F2   ; // GRP.30 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(8.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
wire[ 3:0] MA_735 =  (_p1_G_axi_raddr_m_valid) ? _p1_G_axi_raddr_m_len : 4'h0; //  <FB>(L1.0+A4.0+fo1+ld[4:1]) [F(1.0)<0>,B(3.0)<0>] <0,15> [U4] P2 OP(sel:?)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
wire[ 3:0] DM_539               =  (CP_fsmRead_B02_F2) ? MA_735 : 4'h0     ; // GRP.30 <FB>(L1.0+A4.0+fo1+ld[4:1]) [F(2.0)<1>,B(2.0)<0>] <0,15> [U4] P2 OP(sel:?)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
wire[ 4:0] I_fsmRead_B20_0   =  {1'b0,G__this_burst_count_r/*prv*/} + 5'h1f; // GRP.30 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<1>,B(4.0,9.0)<0>] <-1,14> [S5] P2 OP(add:+)(rv32_io.cpp:L525)[AXI4L::SlaveFSM::fsmRead]
wire[ 4:0] DM_540           =  (CP_fsmRead_B16_F2) ? I_fsmRead_B20_0 : 5'h0; // GRP.30 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(8.0)<1>,B(2.0)<0>] <-1,14> [S5] P2 OP(sel:?)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
wire[ 4:0] DM_542               =  {1'b0,DM_539} | DM_540                  ; // GRP.30 <FB>(L1.0+A4.0+fo1+ld[1:1]) [F(9.0)<1>,B(1.0)<0>] <-1,15> [S5] P2 OP(or:|)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
wire[31:0] I_fsmRead_B16_1      =  G__this_dbg_rcount/*prv*/ + 32'h1       ; // GRP.15(L2.0+C32.0+A96.0+fo1+ld[1]) [F(34.0,2.0)<1>,B(2.0,34.0)<0>] <0,4294967295> [U32] P2 OP(add:+)(rv32_io.cpp:L518)[AXI4L::SlaveFSM::fsmRead]
wire       I_do_rx_B01_09       =  ! G__this_uart_rx_bit_n                 ; //  <B>(fo12+ld[1]) [F(0.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L332)[UART::do_rx]
wire[ 1:0] N_016                =  G__this_uart_rx_state/*prv*/ & 2'h3     ; // GRP.29 <B>(NL) [F(0.0)<1>,B(18.0)<0>] <0,3> [U2] P2 OP(and:&)(rv32_io.cpp:L361)[UART::do_rx]
wire       CE_202               =  N_016 == 2'h3                           ; // GRP.29 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<1>,B(18.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L361)[UART::do_rx]
wire       I_do_rx_B03_2        =  G__this_uart_rx_state/*prv*/ == 2'h0    ; // GRP.29 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<1>,B(20.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L342)[UART::do_rx]
wire       I_do_rx_B03_4        =  I_do_rx_B03_2 & G__this_uart_rx_bit_n   ; // GRP.29 <B>(L1.0+A1.0+fo4+ld[1:1]) [F(2.0)<1>,B(19.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342)[UART::do_rx]
wire       CE_171               =  ! I_do_rx_B03_4                         ; // GRP.29 <B>(fo2+ld[1]) [F(2.0)<1>,B(18.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L342)[UART::do_rx]
wire       CE_174               =  ! I_do_rx_B03_2                         ; // GRP.29 <B>(fo2+ld[1]) [F(1.0)<1>,B(18.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L345)[UART::do_rx]
wire       QC_384               =  CE_171 & CE_174                         ; // GRP.29 <B>(L1.0+A1.0+fo4+ld[1:1]) [F(3.0)<1>,B(18.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       A_838                =  CE_202 & QC_384                         ; // GRP.29 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(4.0)<1>,B(17.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       A_849                =  I_do_rx_B01_09 & A_838                  ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       CE_200               =  N_016 == 2'h2                           ; // GRP.29 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<1>,B(17.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L361)[UART::do_rx]
wire       A_839                =  CE_200 & QC_384                         ; // GRP.29 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(4.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       AO_863               =  A_849 | A_839                           ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(6.0)<1>,B(15.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire[ 4:0] sub_I_do_rx_B17_2 = {1'b0,1'b0,_p1_DFB_G__this_uart_bit_count_m1/*prv*/} - {1'b0,G__this_uart_rx_bit_pos/*prv*/}; // G__this_uart_rx_bit_pos/*prv*/ > _p1_DFB_G__this_uart_bit_count_m1/*prv*/
wire       I_do_rx_B17_2        = (sub_I_do_rx_B17_2[4])                  ; // GRP.29 <B>(L2.0+C7.0+A16.0+fo4+ld[1:1]+S) [F(9.0)<1>,B(18.0,25.0)<0>] <0,1> [U1] P2 OP(gt:>)(rv32_io.cpp:L363)[UART::do_rx]
wire       CE_205               =  ! I_do_rx_B17_2                         ; // GRP.29 <B>(fo2+ld[1]) [F(9.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L363)[UART::do_rx]
wire       AO_868               =  I_do_rx_B17_2 | CE_205                  ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       CE_198               =  N_016 == 2'h1                           ; // GRP.29 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<1>,B(17.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L361)[UART::do_rx]
wire       A_840                =  CE_198 & QC_384                         ; // GRP.29 <B>(L1.0+A1.0+fo3+ld[1:1]) [F(4.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       AO_867               =  AO_868 & A_840                          ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<1>,B(15.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       AO_883               =  AO_863 | AO_867                         ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<1>,B(14.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire[16:0] sub_I_do_rx_B07_2 = {1'b0,G__this_uart_rx_tick/*prv*/} - {1'b0,_p1_DFB_G__this_uart_baud_period_m1/*prv*/}; // G__this_uart_rx_tick/*prv*/ < _p1_DFB_G__this_uart_baud_period_m1/*prv*/
wire       I_do_rx_B07_2        = (sub_I_do_rx_B07_2[16])                 ; // GRP.29 <B>(L2.0+C32.0+A80.0+fo31+ld[1:1]+S) [F(34.0)<1>,B(15.0,47.0)<0>] <0,1> [U1] P2 OP(lt:<)(rv32_io.cpp:L346)[UART::do_rx]
wire       CE_177               =  ! I_do_rx_B07_2                         ; // GRP.29 <B>(fo20+ld[1]) [F(34.0)<1>,B(13.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L346)[UART::do_rx]
wire       CM_705               =  AO_883 & CE_177                         ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(13.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       A_848                =  G__this_uart_rx_bit_n & A_838           ; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<1>,B(14.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       QC_387               =  A_848 & CE_177                          ; // GRP.29 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(35.0)<1>,B(13.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       O_890                =  CM_705 | QC_387                         ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<1>,B(12.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       I_do_rx_B08_0        =  G__this_uart_rx_state/*prv*/ == 2'h3    ; // GRP.29 <B>(L1.0+A1.0+fo3+ld[1]+S) [F(1.0)<1>,B(18.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L347)[UART::do_rx]
wire       I_do_rx_B09_1        =  G__this_uart_rx_bit_pos/*prv*/ == 4'h0  ; // GRP.29 <B>(L2.0+A3.0+fo1+ld[1]+S) [F(2.0)<1>,B(19.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L347)[UART::do_rx]
wire       CE_183               =  ! I_do_rx_B09_1                         ; // GRP.29 <B>(fo2+ld[1]) [F(2.0)<1>,B(17.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L347)[UART::do_rx]
wire       QC_348               =  I_do_rx_B08_0 & CE_183                  ; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<1>,B(17.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L346,L347,L347)[UART::do_rx]
wire       CM_682               =  QC_348 | I_do_rx_B08_0                  ; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L346,L347,L347)[UART::do_rx]
wire       MA_745             =  (I_do_rx_B08_0) ? _p1_I_do_rx_B10_1 : 1'h0; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<1>,B(17.0)<0>] <0,1> [U1] P2 OP(sel:?)(rv32_io.cpp:L346,L347,L347)[UART::do_rx]
wire       DM_683               =  (CE_183) ? MA_745 : 1'h0                ; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<1>,B(16.0)<0>] <0,1> [U1] P2 OP(sel:?)(rv32_io.cpp:L346,L347,L347)[UART::do_rx]
wire       DM_684               =  (CM_682) ? DM_683 : 1'h0                ; // GRP.29 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(5.0)<1>,B(15.0)<0>] <0,1> [U1] P2 OP(sel:?)(rv32_io.cpp:L346,L347,L347)[UART::do_rx]
wire       I_do_rx_B11_2 =  G__this_uart_rx_tick/*prv*/ == {1'b0,_p1_I_do_rx_B11_1}; // GRP.29 <B>(L6.0+A47.0+fo2+ld[1:1]+S) [F(6.0)<1>,B(21.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L348)[UART::do_rx]
wire       A_841                =  I_do_rx_B11_2 & QC_384                  ; //  <B>(L1.0+A1.0+fo2+ld[1:1]) [F(7.0)<1>,B(15.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       A_853                =  DM_684 & A_841                          ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<1>,B(14.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       QC_407               =  A_853 & I_do_rx_B07_2                   ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(13.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       O_879                =  QC_407 | I_do_rx_B03_4                  ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<1>,B(12.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       CM_706               =  O_890 | O_879                           ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<1>,B(11.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       A_851                =  I_do_rx_B17_2 & A_840                   ; // GRP.29 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(10.0)<1>,B(13.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       I_do_rx_B18_4        =  ! G__this_uart_rx_buf_full/*prv*/       ; // GRP.30 <B>(fo2+ld[1]) [F(0.0)<1>,B(12.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L365)[UART::do_rx]
wire       MA_864               =  (A_851) ? I_do_rx_B18_4 : 1'h0          ; // GRP.30 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<1>,B(12.0)<0>] <0,1> [U1] P2 OP(sel:?)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       DM_700               =  (CE_177) ? MA_864 : 1'h0                ; // GRP.30 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(11.0)<0>] <0,1> [U1] P2 OP(sel:?)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       DM_710               =  (CM_706) ? DM_700 : 1'h0                ; // GRP.30 <B>(L1.0+A1.0+fo7+ld[1:1]) [F(38.0)<1>,B(10.0)<0>] <0,1> [U1] P2 OP(sel:?)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       G__this_readFlag     =  CP_fsmRead_B11_F1_B12_F1 & A_774        ; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<1>,B(14.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L295)(rv32_io.cpp:L613)[AXI4L::SlaveFSM::fsm]
wire       I_fsmUser_2_B5_1     =  ! G__this_readFlag                      ; // GRP.30 <FB>(fo3+ld[1]) [F(4.0)<1>,B(13.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L645)[UART_AXI4L::fsmUser]
wire[ 2:0] I_fsmUser_2_B5_2     =  (I_fsmUser_2_B5_1) ? 3'h0 : 3'h4        ; // GRP.30 <FB>(L1.0+A3.0+fo1+ld[3:0:1]) [F(5.0)<1>,B(13.0)<0>] <0,4> [U3] P2 OP(sel:?)(rv32_io.cpp:L645)[UART_AXI4L::fsmUser]
wire       I_do_rx_B01_06       =  I_fsmUser_2_B5_2 == 3'h4                ; // GRP.30 <FB>(L2.0+A2.0+fo1+ld[1]+S) [F(7.0)<1>,B(12.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L329)[UART::do_rx]
wire       I_do_rx_B01_07 =  I_do_rx_B01_06 & G__this_uart_rx_buf_not_empty/*prv*/; // GRP.30 <FB>(L1.0+A1.0+fo7+ld[1:1]) [F(8.0)<1>,B(10.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L329)[UART::do_rx]
wire       I_update_0_B01_2     =  DM_710 | I_do_rx_B01_07                 ; // GRP.30 <FB>(L1.0+A1.0+fo6+ld[1:1]) [F(39.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       CP_update_0_B01_F2  =  _p1_CP_fsmUser_2_B4_F2 & I_update_0_B01_2; // GRP.30 <FB>(L1.0+A1.0+fo8+ld[1:1]) [F(40.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       CM_553            =  _p1_CP_fsmUser_2_B1_F1 | CP_update_0_B01_F2; // GRP.30 <FB>(L1.0+A1.0+fo10+ld[1:1]) [F(41.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L68,L73)[UART_AXI4L::fsmUser]
wire       I_nxt_pnt_0_B1_0     =  G__this_uart_rx_buf_rp/*prv*/ == 4'h2   ; // GRP.30 <B>(L2.0+A3.0+fo5+ld[1]+S) [F(2.0)<1>,B(12.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_0_B1_1  =  {1'b0,G__this_uart_rx_buf_rp/*prv*/} + 5'h1; // GRP.30 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<1>,B(12.0,17.0)<0>] <1,16> [U5] P2 OP(add:+)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_0_B1_2 =  (I_nxt_pnt_0_B1_0) ? 5'h0 : I_nxt_pnt_0_B1_1; // GRP.30 <B>(L1.0+A5.0+fo1+ld[5:0:1]) [F(8.0,3.0)<1>,B(10.0)<0>] <0,16> [U5] P2 OP(sel:?)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] L_nxt_pnt_0_RET      =  I_nxt_pnt_0_B1_2                        ; // GRP.30 <B>(NL) [F(8.0,3.0)<1>,B(9.0)<0>] <0,16> [U5] P2 OP(assign:=)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] DM_711 =  (I_do_rx_B01_07) ? L_nxt_pnt_0_RET : {1'b0,G__this_uart_rx_buf_rp/*prv*/}; // GRP.30 <FB>(L2.0+A10.0+fo3+ld[5:1:1]) [F(10.0)<1>,B(9.0)<0>] <0,16> [U5] P2 OP(sel:?)(./rv32_io.h:L71)[IOBuf<unsigned char, 8>::update]
wire       I_nxt_pnt_1_B1_0     =  G__this_uart_rx_buf_wp/*prv*/ == 4'h2   ; // GRP.30 <B>(L2.0+A3.0+fo5+ld[1]+S) [F(2.0)<1>,B(12.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_1_B1_1  =  {1'b0,G__this_uart_rx_buf_wp/*prv*/} + 5'h1; // GRP.30 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<1>,B(12.0,17.0)<0>] <1,16> [U5] P2 OP(add:+)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_1_B1_2 =  (I_nxt_pnt_1_B1_0) ? 5'h0 : I_nxt_pnt_1_B1_1; // GRP.30 <B>(L1.0+A5.0+fo1+ld[5:0:1]) [F(8.0,3.0)<1>,B(10.0)<0>] <0,16> [U5] P2 OP(sel:?)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] L_nxt_pnt_1_RET      =  I_nxt_pnt_1_B1_2                        ; // GRP.30 <B>(NL) [F(8.0,3.0)<1>,B(9.0)<0>] <0,16> [U5] P2 OP(assign:=)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] DM_712 =  (DM_710) ? L_nxt_pnt_1_RET : {1'b0,G__this_uart_rx_buf_wp/*prv*/}; // GRP.30 <B>(L2.0+A10.0+fo3+ld[5:1:1]) [F(40.0)<1>,B(9.0)<0>] <0,16> [U5] P2 OP(sel:?)(./rv32_io.h:L72)[IOBuf<unsigned char, 8>::update]
wire       I_update_0_B08_01    =  DM_711 != DM_712                        ; // GRP.30 <FB>(L5.0+A14.0+fo1+ld[1:1]+S) [F(45.0)<1>,B(7.0)<0>] <0,1> [U1] P2 OP(ne:!=)(./rv32_io.h:L73)[IOBuf<unsigned char, 8>::update]
wire       I_update_0_B08_03    =  I_update_0_B08_01 | DM_710              ; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(46.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L73)[IOBuf<unsigned char, 8>::update]
wire       DM_552        =  (CP_update_0_B01_F2) ? I_update_0_B08_03 : 1'h0; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(47.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(sel:?)(./rv32_io.h:L68,L73)[UART_AXI4L::fsmUser]
wire       I_update_0_B08_06    =  DM_711 == DM_712                        ; // GRP.30 <FB>(L5.0+A14.0+fo1+ld[1:1]+S) [F(45.0)<1>,B(6.0)<0>] <0,1> [U1] P2 OP(eq:==)(./rv32_io.h:L74)[IOBuf<unsigned char, 8>::update]
wire       I_update_0_B01_0     =  ! I_do_rx_B01_07                        ; // GRP.30 <FB>(fo1+ld[1]) [F(8.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(not:!)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       MA_896         =  (CP_update_0_B01_F2) ? I_update_0_B01_0 : 1'h0; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(41.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(sel:?)(./rv32_io.h:L68,L74)[UART_AXI4L::fsmUser]
wire       DM_554               =  I_update_0_B08_06 & MA_896              ; // GRP.30 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(46.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L68,L74)[UART_AXI4L::fsmUser]
wire[ 4:0] I_update_0_B08_10    =  DM_711 & 5'h1f                          ; // GRP.30 <FB>(NL) [F(10.0)<1>,B(2.0)<0>] <0,16> [U5] P2 OP(and:&)(./rv32_io.h:L75)[IOBuf<unsigned char, 8>::update]
wire[ 4:0] MA_895    =  (_p1_CP_fsmUser_2_B4_F2) ? I_update_0_B08_10 : 5'h0; // GRP.30 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(11.0)<1>,B(2.0)<0>] <0,16> [U5] P2 OP(sel:?)(./rv32_io.h:L68,L75)[UART_AXI4L::fsmUser]
wire[ 4:0] DM_556               =  (I_update_0_B01_2) ? MA_895 : 5'h0      ; // GRP.30 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(40.0)<1>,B(1.0)<0>] <0,16> [U5] P2 OP(sel:?)(./rv32_io.h:L68,L75)[UART_AXI4L::fsmUser]
wire[ 4:0] I_update_0_B08_12    =  DM_712 & 5'h1f                          ; // GRP.30 <B>(NL) [F(40.0)<1>,B(1.0)<0>] <0,16> [U5] P2 OP(and:&)(./rv32_io.h:L76)[IOBuf<unsigned char, 8>::update]
wire[ 4:0] DM_558        =  (CP_update_0_B01_F2) ? I_update_0_B08_12 : 5'h0; // GRP.30 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(41.0)<1>,B(1.0)<0>] <0,16> [U5] P2 OP(sel:?)(./rv32_io.h:L68,L76)[UART_AXI4L::fsmUser]
wire       I_do_rx_B12_1        =  G__this_uart_rx_state/*prv*/ == 2'h1    ; //  <B>(L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L352)[UART::do_rx]
wire       A_854                =  I_do_rx_B12_1 & A_841                   ; //  <B>(L1.0+A1.0+fo10+ld[1:1]) [F(8.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L511)(rv32_io.cpp:L353)[UART::do_rx]
wire       QC_563               =  A_854 & I_do_rx_B07_2                   ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L511)(rv32_io.cpp:L353)[UART::do_rx]
wire       O_880                =  QC_387 | I_do_rx_B03_4                  ; // GRP.29 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(36.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       CM_566               =  QC_563 | O_880                          ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L353)[UART::do_rx]
wire       N_567                =  CM_566 & _p1_CP_fsmUser_2_B4_F2         ; //  <FB>(L1.0+A1.0+fo9+ld[1:1]) [F(38.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L511)(rv32_io.cpp:L353)[UART::do_rx]
wire[ 6:0] I_do_rx_B13_2        =  G__this_uart_rx_word/*prv*/[7:1]/*>>1*/ ; // GRP.25(NL) [F(0.0)<1>,B(3.0)<0>] <0,127> [U7] P2 OP(shr:>>)(rv32_io.cpp:L353)[UART::do_rx]
wire[ 7:0] I_do_rx_B13_0        =  (I_do_rx_B01_09) ? 8'h80 : 8'h0         ; // (L1.0+A8.0+fo1+ld[8:0:1]) [F(1.0)<1>,B(4.0)<0>] <0,128> [U8] P2 OP(sel:?)(rv32_io.cpp:L353)[UART::do_rx]
wire[ 7:0] I_do_rx_B13_3        =  {1'b0,I_do_rx_B13_2} | I_do_rx_B13_0    ; // GRP.25(L1.0+A7.0+fo1+ld[1:1]) [F(2.0)<1>,B(3.0)<0>] <0,255> [U8] P2 OP(or:|)(rv32_io.cpp:L353)[UART::do_rx]
wire[ 7:0] MA_869               =  (A_854) ? I_do_rx_B13_3 : 8'h0          ; // GRP.25(L1.0+A8.0+fo1+ld[8:1]) [F(9.0)<1>,B(2.0)<0>] <0,255> [U8] P2 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L353)[UART::do_rx]
wire[ 7:0] DM_564               =  (I_do_rx_B07_2) ? MA_869 : 8'h0         ; // GRP.25(L1.0+A8.0+fo1+ld[8:1]) [F(35.0)<1>,B(1.0)<0>] <0,255> [U8] P2 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L353)[UART::do_rx]
wire       A_820          =  CE_171 & _p1_DFB_G__this_uart_activated/*prv*/; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<1>,B(10.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342)[UART::do_rx]
wire       A_832                =  CE_174 & A_820                          ; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<1>,B(9.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L345)[UART::do_rx]
wire       CP_do_rx_B06_F2      =  A_832 & _p1_CP_fsmUser_2_B1_F2          ; // GRP.29 <FB>(L1.0+A1.0+fo22+ld[1:1]) [F(5.0)<1>,B(8.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L345)[UART::do_rx]
wire       A_859                =  CE_202 & CP_do_rx_B06_F2                ; // GRP.29 <FB>(L1.0+A1.0+fo3+ld[1:1]) [F(6.0)<1>,B(7.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L361)[UART::do_rx]
wire       A_877                =  G__this_uart_rx_bit_n & A_859           ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(7.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L381)[UART::do_rx]
wire       CP_do_rx_B29_F2      =  A_877 & CE_177                          ; // GRP.29 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(35.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L381)[UART::do_rx]
wire       A_812   =  I_do_rx_B03_4 & _p1_DFB_G__this_uart_activated/*prv*/; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342)[UART::do_rx]
wire       CP_do_rx_B03_F1      =  A_812 & _p1_CP_fsmUser_2_B1_F2          ; // GRP.29 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(4.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342)[UART::do_rx]
wire       CM_570               =  _p1_CP_fsmUser_2_B1_F1 | CP_do_rx_B03_F1; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire       CM_573               =  CP_do_rx_B29_F2 | CM_570                ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire       A_858                =  CE_200 & CP_do_rx_B06_F2                ; // GRP.29 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(6.0)<1>,B(6.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L361)[UART::do_rx]
wire       A_876                =  I_do_rx_B01_09 & A_859                  ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(7.0)<1>,B(6.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L381)[UART::do_rx]
wire       AO_888               =  A_858 | A_876                           ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire       CM_572               =  AO_888 & CE_177                         ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire       A_856                =  I_do_rx_B11_2 & CP_do_rx_B06_F2         ; // GRP.29 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(7.0)<1>,B(6.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L350)[UART::do_rx]
wire       A_871                =  DM_684 & A_856                          ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L356)[UART::do_rx]
wire       CP_do_rx_B14_F1      =  A_871 & I_do_rx_B07_2                   ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L356)[UART::do_rx]
wire       O_893                =  CM_572 | CP_do_rx_B14_F1                ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire       A_857                =  CE_198 & CP_do_rx_B06_F2                ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(6.0)<1>,B(7.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L361)[UART::do_rx]
wire       A_872                =  I_do_rx_B17_2 & A_857                   ; // GRP.29 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(10.0)<1>,B(6.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L363)[UART::do_rx]
wire       CP_do_rx_B17_F1      =  A_872 & CE_177                          ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L363)[UART::do_rx]
wire       CM_575               =  O_893 | CP_do_rx_B17_F1                 ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire       CM_577               =  CM_573 | CM_575                         ; // GRP.29 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(38.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire[ 1:0] MA_885               =  (A_872) ? _p1_I_do_rx_B18_2 : 2'h0      ; // GRP.29 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(11.0)<1>,B(5.0)<0>] <0,3> [U2] P2 OP(sel:?)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire[ 1:0] MA_873               =  (A_858) ? 2'h3 : 2'h0                   ; // GRP.29 <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(7.0)<1>,B(5.0)<0>] <0,3> [U2] P2 OP(sel:?)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire[ 1:0] MAO_891              =  MA_885 | MA_873                         ; // GRP.29 <FB>(L1.0+A2.0+fo1+ld[1:1]) [F(12.0)<1>,B(4.0)<0>] <0,3> [U2] P2 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire[ 1:0] DM_576               =  (CE_177) ? MAO_891 : 2'h0               ; // GRP.29 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(35.0)<1>,B(3.0)<0>] <0,3> [U2] P2 OP(sel:?)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire[ 1:0] O_894                =  DM_576 | {1'b0,CP_do_rx_B03_F1}         ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<1>,B(2.0)<0>] <0,3> [U2] P2 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire[ 1:0] DM_578               =  O_894 | {1'b0,CP_do_rx_B29_F2}          ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<1>,B(1.0)<0>] <0,3> [U2] P2 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
wire       I_do_rx_B13_6  =  G__this_uart_rx_parity/*prv*/ ^ I_do_rx_B01_09; // GRP.26 <B>(L2.0+A2.0+fo1+ld[1:1]) [F(2.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(xor:^)(rv32_io.cpp:L354)[UART::do_rx]
wire       MA_870               =  (A_854) ? I_do_rx_B13_6 : 1'h0          ; // GRP.26 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L354)[UART::do_rx]
wire       DM_580               =  (I_do_rx_B07_2) ? MA_870 : 1'h0         ; // GRP.26 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L354)[UART::do_rx]
wire       I_parity_bit_0_B3_0  =  ! G__this_uart_rx_parity/*prv*/         ; //  <B>(fo1+ld[1]) [F(0.0)<1>,B(9.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L218)[UART::parity_bit]
wire       DM_695              =  (_p1_CE_233) ? I_parity_bit_0_B3_0 : 1'h0; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<1>,B(9.0)<0>] <0,1> [U1] P2 OP(sel:?)(rv32_io.cpp:L217,L218,L374)[UART::parity_bit]
wire       DM_698               =  DM_695 | _p1_CE_237                     ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<1>,B(8.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L217,L218,L374)[UART::parity_bit]
wire       L_parity_bit_0_RET =  (_p1_CM_697) ? DM_698 : G__this_uart_rx_parity/*prv*/; //  <B>(L2.0+A2.0+fo1+ld[1:1:1]) [F(4.0)<1>,B(7.0)<0>] <0,1> [U1] P2 OP(sel:?)(rv32_io.cpp:L223)[UART::parity_bit]
wire       I_do_rx_B24_1 =  L_parity_bit_0_RET == G__this_uart_rx_bit_samp/*prv*/; //  <B>(L2.0+A2.0+fo1+ld[1:1]+S) [F(6.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L374)[UART::do_rx]
wire       CE_211               =  ! I_do_rx_B24_1                         ; //  <B>(fo1+ld[1]) [F(6.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L374)[UART::do_rx]
wire       A_874                =  CE_211 & A_858                          ; //  <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(7.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L374)[UART::do_rx]
wire       CP_do_rx_B24_F2      =  A_874 & CE_177                          ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L374)[UART::do_rx]
wire       I_do_rx_B27_1        =  G__this_uart_rx_bit_samp/*prv*/ != 1'h1 ; //  <B>(fo1+ld[1]+S) [F(0.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(ne:!=)(rv32_io.cpp:L379)[UART::do_rx]
wire       I_do_rx_B27_3 =  G__this_uart_rx_buf_full/*prv*/ | I_do_rx_B27_1; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L379)[UART::do_rx]
wire       A_875                =  I_do_rx_B27_3 & A_859                   ; //  <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(7.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L379)[UART::do_rx]
wire       CP_do_rx_B27_F1      =  A_875 & CE_177                          ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L379)[UART::do_rx]
wire       O_892                =  CP_do_rx_B27_F1 | _p1_CP_fsmUser_2_B1_F1; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L374,L379)[UART_AXI4L::fsmUser]
wire       CM_585               =  CP_do_rx_B24_F2 | O_892                 ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L374,L379)[UART_AXI4L::fsmUser]
wire       AO_887               =  A_875 | A_874                           ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L374,L379)[UART_AXI4L::fsmUser]
wire       DM_586               =  AO_887 & CE_177                         ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L374,L379)[UART_AXI4L::fsmUser]
wire       A_852                =  CE_205 & A_840                          ; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<1>,B(6.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       AO_866               =  A_852 | A_839                           ; // GRP.29 <B>(L1.0+A1.0+fo6+ld[1:1]) [F(11.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       CM_590               =  AO_866 & CE_177                         ; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L511)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       QC_393               =  A_851 & CE_177                          ; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(4.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       O_889                =  CM_590 | QC_393                         ; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       CM_593               =  O_880 | O_889                           ; // GRP.29 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       N_594                =  CM_593 & _p1_CP_fsmUser_2_B4_F2         ; // GRP.29 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(38.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L511)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire[ 4:0] I_do_rx_B22_0    =  {1'b0,G__this_uart_rx_bit_pos/*prv*/} + 5'h1; // GRP.29 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<1>,B(4.0,9.0)<0>] <1,16> [U5] P2 OP(add:+)(rv32_io.cpp:L371)[UART::do_rx]
wire[ 4:0] MAO_881              =  (AO_866) ? I_do_rx_B22_0 : 5'h0         ; // GRP.29 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(12.0)<1>,B(2.0)<0>] <0,16> [U5] P2 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire[ 4:0] DM_591               =  (CE_177) ? MAO_881 : 5'h0               ; // GRP.29 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(35.0)<1>,B(1.0)<0>] <0,16> [U5] P2 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       CP_do_rx_B07_F2      =  CP_do_rx_B06_F2 & CE_177                ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L346)[UART::do_rx]
wire       CP_do_rx_B07_F1      =  CP_do_rx_B06_F2 & I_do_rx_B07_2         ; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L346)[UART::do_rx]
wire       CM_596               =  _p1_CP_fsmUser_2_B1_F1 | CP_do_rx_B07_F1; // GRP.29 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L349,L360)[UART_AXI4L::fsmUser]
wire       CM_597               =  CP_do_rx_B07_F2 | CM_596                ; // GRP.29 <FB>(L1.0+A1.0+fo16+ld[1:1]) [F(37.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L349,L360)[UART_AXI4L::fsmUser]
wire[15:0] I_do_rx_B11_3        =  G__this_uart_rx_tick/*prv*/ + 16'h1     ; // GRP.29 <B>(L2.0+C16.0+A48.0+fo1+ld[1]) [F(18.0,2.0)<1>,B(4.0,20.0)<0>] <0,65535> [U16] P2 OP(add:+)(rv32_io.cpp:L349)[UART::do_rx]
wire[15:0] MA_855              =  (CP_do_rx_B06_F2) ? I_do_rx_B11_3 : 16'h0; // GRP.29 <FB>(L1.0+A16.0+fo1+ld[16:1]) [F(19.0,6.0)<1>,B(2.0)<0>] <0,65535> [U16] P2 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L349,L360)[UART_AXI4L::fsmUser]
wire[15:0] DM_595               =  (I_do_rx_B07_2) ? MA_855 : 16'h0        ; // GRP.29 <FB>(L1.0+A16.0+fo1+ld[16:1]) [F(35.0)<1>,B(1.0)<0>] <0,65535> [U16] P2 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L349,L360)[UART_AXI4L::fsmUser]
wire       CP_do_rx_B11_F1      =  A_856 & I_do_rx_B07_2                   ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L350)[UART::do_rx]
wire       A_886                =  I_do_rx_B18_4 & A_872                   ; //  <F>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<1>,B(2.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L365)[UART::do_rx]
wire       CP_do_rx_B18_F1      =  A_886 & CE_177                          ; //  <F>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<1>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L365)[UART::do_rx]
wire[ 1:0] N_560             =  G__this_uart_rx_buf_wp/*prv*/[1:0]/*&2'h3*/; // (NL) [F(0.0)<1>,B(0.0)<0>] <0,3> [U2] P2 OP(and:&)(rv32_io.cpp:L367)[UART::do_rx]
wire[ 2:0] N_017         =  _p1_DFB_G__this_uart_bit_count_m1/*prv*/ & 3'h7; // (NL) [F(0.0)<0>,B(6.0)<0>] <0,7> [U3] P2 OP(and:&)(rv32_io.cpp:L314)[UART::adjust_word]
wire       CE_225               =  N_017 == 3'h5                           ; // (L2.0+A2.0+fo7+ld[1]+S) [F(2.0)<0>,B(6.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L314)[UART::adjust_word]
wire[ 5:0] I_adjust_word_B4_1   =  G__this_uart_rx_word/*prv*/[7:2]/*>>2*/ ; // (NL) [F(0.0)<1>,B(4.0)<0>] <0,63> [U6] P2 OP(shr:>>)(rv32_io.cpp:L316)[UART::adjust_word]
wire[ 5:0] DM_690               =  (CE_225) ? I_adjust_word_B4_1 : 6'h0    ; // (L1.0+A6.0+fo1+ld[6:1]) [F(3.0)<1>,B(4.0)<0>] <0,63> [U6] P2 OP(sel:?)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire       CE_223               =  N_017 == 3'h4                           ; // (L2.0+A2.0+fo6+ld[1]+S) [F(2.0)<0>,B(6.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L314)[UART::adjust_word]
wire[ 4:0] I_adjust_word_B3_1   =  G__this_uart_rx_word/*prv*/[7:3]/*>>3*/ ; // (NL) [F(0.0)<1>,B(4.0)<0>] <0,31> [U5] P2 OP(shr:>>)(rv32_io.cpp:L315)[UART::adjust_word]
wire[ 4:0] DM_691               =  (CE_223) ? I_adjust_word_B3_1 : 5'h0    ; // (L1.0+A5.0+fo1+ld[5:1]) [F(3.0)<1>,B(4.0)<0>] <0,31> [U5] P2 OP(sel:?)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire[ 5:0] DM_693               =  DM_690 | {1'b0,DM_691}                  ; // (L1.0+A5.0+fo1+ld[1:1]) [F(4.0)<1>,B(3.0)<0>] <0,63> [U6] P2 OP(or:|)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire       CE_227               =  N_017 == 3'h6                           ; // (L2.0+A2.0+fo8+ld[1]+S) [F(2.0)<0>,B(5.0)<0>] <0,1> [U1] P2 OP(eq:==)(rv32_io.cpp:L314)[UART::adjust_word]
wire[ 6:0] DM_689               =  (CE_227) ? I_do_rx_B13_2 : 7'h0         ; // (L1.0+A7.0+fo1+ld[7:1]) [F(3.0)<1>,B(3.0)<0>] <0,127> [U7] P2 OP(sel:?)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire[ 6:0] O_786                =  {1'b0,DM_693} | DM_689                  ; // (L1.0+A6.0+fo1+ld[1:1]) [F(5.0)<1>,B(2.0)<0>] <0,127> [U7] P2 OP(or:|)(rv32_io.cpp:L0)[UART::adjust_word]
wire       QC_685               =  CE_223 | CE_225                         ; // (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(4.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire       QC_686               =  CE_227 | QC_685                         ; // (L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(3.0)<0>] <0,1> [U1] P2 OP(or:|)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire       QC_687               =  ! QC_686                                ; // (fo8+ld[1]) [F(4.0)<0>,B(2.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire[ 7:0] DM_688          =  (QC_687) ? G__this_uart_rx_word/*prv*/ : 8'h0; // (L1.0+A8.0+fo1+ld[8:1]) [F(5.0)<1>,B(2.0)<0>] <0,255> [U8] P2 OP(sel:?)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire[ 7:0] I_adjust_word_B6_1   =  {1'b0,O_786} | DM_688                   ; // (L1.0+A7.0+fo1+ld[1:1]) [F(6.0)<1>,B(1.0)<0>] <0,255> [U8] P2 OP(or:|)(rv32_io.cpp:L0)[UART::adjust_word]
wire[ 7:0] L_adjust_word_RET    =  I_adjust_word_B6_1                      ; // (NL) [F(6.0)<1>,B(0.0)<0>] <0,255> [U8] P2 OP(assign:=)(rv32_io.cpp:L320)[UART::adjust_word]
wire[ 7:0] I_do_rx_B20_0        =  L_adjust_word_RET/*&8'hff*/             ; // (NL) [F(6.0)<1>,B(0.0)<0>] <0,255> [U8] P2 OP(and:&)(rv32_io.cpp:L367)[UART::do_rx]
wire[25:0] I_devRead_1_B8_0     =  G__this_raddr/*prv*/[31:6]/*>>6*/       ; //  <B>(NL) [F(0.0)<1>,B(10.0)<0>] <0,67108863> [U26] P2 OP(shr:>>)(rv32_io.cpp:L618)[UART_AXI4L::devRead]
wire       I_devRead_1_B8_1     =  I_devRead_1_B8_0[0]/*&1'h1*/            ; //  <B>(NL) [F(0.0)<1>,B(10.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L618)[UART_AXI4L::devRead]
wire       MA_764          =  (CP_fsmRead_B02_F4) ? I_devRead_1_B8_1 : 1'h0; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<1>,B(10.0)<0>] <0,1> [U1] P2 OP(sel:?)(./rv32_io.h:L547)(rv32_io.cpp:L618,L636)[UART_AXI4L::step]
wire       DM_659               =  (QC_666) ? MA_764 : 1'h0                ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<1>,B(9.0)<0>] <0,1> [U1] P2 OP(sel:?)(./rv32_io.h:L547)(rv32_io.cpp:L618,L636)[UART_AXI4L::step]
wire       G__this_uart_id      =  (_p1_CM_657) ? _p1_DM_658 : DM_659      ; //  <FB>(L2.0+A2.0+fo4+ld[1:1:1]) [F(5.0)<1>,B(8.0)<0>] <0,1> [U1] P2 OP(sel:?)(./rv32_io.h:L547)(rv32_io.cpp:L618,L636)[UART_AXI4L::step]
wire[ 1:0] I_fsmUser_2_B2_3     =  {G__this_uart_id,1'b0}/*<<1*/           ; //  <FB>(NL) [F(5.0)<1>,B(6.0)<0>] <0,2> [U2] ZLB(1) P2 OP(shl:<<)(rv32_io.cpp:L642)[UART_AXI4L::fsmUser]
wire[ 1:0] I_write_command_B08_0 =  I_fsmUser_2_B2_3                       ; //  <FB>(NL) [F(5.0)<1>,B(6.0)<0>] <0,2> [U2] ZLB(1) P2 OP(assign:=)(rv32_io.cpp:L466)[UART::write_command]
wire[ 1:0] N_664                =  I_write_command_B08_0/*&2'h3*/          ; //  <FB>(NL) [F(5.0)<1>,B(6.0)<0>] <0,2> [U2] ZLB(1) P2 OP(and:&)(rv32_io.cpp:L466)[UART::write_command]
wire[ 2:0] sub_I_write_command_B07_0 = {1'b0,I_fsmUser_2_B2_3} - 3'h3     ; // I_fsmUser_2_B2_3 < 3'h3
wire       I_write_command_B07_0 = (sub_I_write_command_B07_0[2])         ; //  <FB>(L1.0+C2.0+A2.0+fo9+ld[1]+S) [F(8.0)<1>,B(4.0,6.0)<0>] <0,1> [U1] P2 OP(lt:<)(rv32_io.cpp:L466)[UART::write_command]
wire       QC_339               =  ! I_write_command_B07_0                 ; //  <FB>(fo8+ld[1]) [F(8.0)<1>,B(3.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L464,L466)[UART::write_command]
/// (printf field...) wire[ 7:0] N_679               =  (QC_339) ? _lut_G_HIDDEN_GLOBAL_59 : 8'h0; //  <FB>(L1.0+A8.0+fo1+ld[8:1]) [F(9.0)<1>,B(3.0)<0>] <0,255> [U8] P2 OP(sel:?)(rv32_io.cpp:L464,L466)[UART::write_command]
/// (printf field...) wire[ 7:0] N_680 =  (I_write_command_B07_0) ? I_write_command_B08_1 : N_679; //  <FB>(L2.0+A16.0+ld[8:1:1]) [F(11.0)<1>,B(2.0)<0>] <0,255> [U8] P2 OP(sel:?)(rv32_io.cpp:L464,L466)[UART::write_command]
wire       I_write_command_B01_4 =  ! _p1_I_write_command_B01_1            ; //  <FB>(fo1+ld[1]) [F(0.0)<0>,B(1.0)<0>] <0,1> [U1] P2 OP(not:!)(rv32_io.cpp:L453)[UART::write_command]
wire       CP_write_command_B10_F1 =  _p1_CP_fsmUser_2_B1_F1 & I_write_command_B01_4; //  <FB>(L1.0+A1.0+ld[1:1]) [F(1.0)<0>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L472)[UART::write_command]
wire[15:0] I_write_command_B13_00 =  G__this_uart_baud_period_m1           ; //  <B>(NL) [F(0.0)<1>,B(2.0,19.0)<0>] <0,65535> [U16] P2 OP(assign:=)(rv32_io.cpp:L474)[UART::write_command]
wire[16:0] I_write_command_B13_02 =  {1'b0,I_write_command_B13_00} + 17'h1 ; //  <B>(L2.0+C17.0+A51.0+ld[1]) [F(19.0,2.0)<1>,B(2.0,19.0)<0>] <1,65536> [U17] P2 OP(add:+)(rv32_io.cpp:L474)[UART::write_command]
wire[ 2:0] I_write_command_B13_03 =  G__this_uart_bit_count_m1             ; //  <B>(NL) [F(0.0)<1>,B(2.0,6.0)<0>] <0,7> [U3] P2 OP(assign:=)(rv32_io.cpp:L474)[UART::write_command]
wire[ 3:0] I_write_command_B13_05 =  {1'b0,I_write_command_B13_03} + 4'h1  ; //  <B>(L2.0+C4.0+A12.0+ld[1]) [F(6.0,2.0)<1>,B(2.0,6.0)<0>] <1,8> [U4] P2 OP(add:+)(rv32_io.cpp:L474)[UART::write_command]
wire[ 1:0] I_write_command_B13_06 =  G__this_uart_stop_count               ; //  <B>(NL) [F(0.0)<1>,B(0.0)<0>] <0,3> [U2] P2 OP(assign:=)(rv32_io.cpp:L474)[UART::write_command]
wire[ 2:0] I_write_command_B13_08 =  G__this_uart_parity_type              ; //  <B>(NL) [F(0.0)<1>,B(0.0)<0>] <0,7> [U3] P2 OP(assign:=)(rv32_io.cpp:L474)[UART::write_command]
wire       N_734                =  G__this_intr/*prv*/                     ; // (comb-Out/FFSink) (NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L549)[UART_AXI4L::step]


  //// pipe-stage(2)  : printf...

  always @ (posedge clk) if (rst_n) begin
    if (_p1_CP_fsmUser_2_B1_F1     )  if(I_write_command_B07_0) printf_gep_array_0(N_664); else if(QC_339) $write("<UART_EXT-1>");
    else ; /// printf(); --> do nothing...
 //  <B*>(fo2) [F(11.0)<1>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(rv32_io.cpp:L0)[UART::write_command]
    if (CP_write_command_B10_F1    )  $write(" (deactivate)\n"); //  <B*> [F(11.0)<1>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(rv32_io.cpp:L477)[UART::write_command]
    if (_p1_CP_write_command_B01_F2)  $write(" (activate) : baud_period(%d), bit_count(%d), stop_count(%d), parity_type(%d)\n", I_write_command_B13_02, I_write_command_B13_05, I_write_command_B13_06, I_write_command_B13_08); //  <B*> [F(19.0,11.0)<1>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(rv32_io.cpp:L473)[UART::write_command]
  end /// printfNodes


  //// pipe-stage(2) : pipe-registers...

  always @ (posedge clk or negedge rst_n) begin
  if (rst_n == 1'b0) begin
    _p2_DFB_G__this_burst_end_r/*prv*/ <= 0;
  end // (rst_n)
  else begin
    _p2_DFB_G__this_burst_end_r/*prv*/ <= (_p1_UART_AXI4L_step_pSetup) ? G__this_burst_end_r/*prv*/ : 1'h0 ; /*   1 bits */ /*feedback-wire*/
  end /*else*/
  end /*always @ ...*/


  //// pipe-stage(2)  : state-registers...

  always @ (posedge clk or negedge rst_n) begin
  if (rst_n == 1'b0) begin
    G__this_out_raddr_ready       <= 1'h0 ;
    G__this_out_rdat_data         <= 32'h0;
    G__this_out_rdat_resp         <= 1'h0 ;
    G__this_out_rdat_valid        <= 1'h0 ;
    G__this_out_rdat_last         <= 1'h0 ;
    G__this_r_state               <= 2'h0 ;
    G__this_raddr                 <= 32'h0;
    G__this_raddr_end             <= 1'h0 ;
    G__this_intr                  <= 1'h0 ;
    G__this_burst_count_r         <= 4'h0 ;
    G__this_dbg_rcount            <= 32'h0;
    G__this_uart_rx_buf_not_empty <= 1'h0 ;
    G__this_uart_rx_buf_full      <= 1'h0 ;
    G__this_uart_rx_buf_rp        <= 4'h0 ;
    G__this_uart_rx_buf_wp        <= 4'h0 ;
    G__this_uart_rx_buf_buf[0]    <= 8'h0 ;
    G__this_uart_rx_buf_buf[1]    <= 8'h0 ;
    G__this_uart_rx_buf_buf[2]    <= 8'h0 ;
    G__this_uart_rx_word          <= 8'h0 ;
    G__this_uart_rx_state         <= 2'h0 ;
    G__this_uart_rx_parity        <= 1'h0 ;
    G__this_uart_rx_error         <= 1'h0 ;
    G__this_uart_rx_bit_pos       <= 4'h0 ;
    G__this_uart_rx_tick          <= 16'h0;
    G__this_uart_rx_bit_samp      <= 1'h0 ;
    G_intr_out                    <= 1'h0 ;
  end /// (rst_n == 1'b0)
  else begin /*reg-assignments*/
    if (CM_480)  G__this_out_raddr_ready <= CP_fsmRead_B03_F2; // GRP.14 <B>(ld[1:1]+S+@) [F(3.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L141)[AXI4L::SlaveFSM::fsmRead]
    if (CM_484) begin
      G__this_out_rdat_data  <= DM_483                  ; // GRP.18 <B>(ld[32:1]+S+@) [F(10.0)<1>,B(0.0)<0>] <0,4294967295> [U32] P2 OP(clk:@)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
      G__this_out_rdat_resp  <= 1'h0                    ; // GRP.16 <B>(ld[1:1]+S+@) [F(6.0)<1>,B(0.0)<0>] <0,0> [U0] P2 OP(clk:@)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
      G__this_out_rdat_valid <= CP_fsmRead_B12_F2_B14_F2; // GRP.30 <B>(ld[1:1]+S+@) [F(6.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
      G__this_out_rdat_last  <= DM_487                  ; // GRP.17 <B>(ld[1:1]+S+@) [F(7.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
    end /// (CM_484)
    if (CM_504           )  G__this_r_state   <= DM_503                ; // GRP.30 <B>(ld[2:1]+S+@) [F(8.0)<1>,B(0.0)<0>] <0,3> [U2] P2 OP(clk:@)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
    if (CP_fsmRead_B03_F2)  G__this_raddr     <= _p1_G_axi_raddr_m_addr; // GRP.30 <B>(ld[32:1]+S+@) [F(2.0)<1>,B(0.0)<0>] <0,4294967295> [U32] P2 OP(clk:@)(rv32_io.cpp:L502)[AXI4L::SlaveFSM::fsmRead]
    if (CM_515           )  G__this_raddr_end <= CP_fsmRead_B09_F1     ; // GRP.30 <B>(ld[1:1]+S+@) [F(3.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(rv32_io.cpp:L507,L513)[AXI4L::SlaveFSM::fsmRead]
    if (ROOT_CP) begin
      G__this_intr <= G__this_nxt_intr                           ; // GRP.21(ld[1:1]+S+@) [F(1.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L288)[AXI4L::SlaveFSM::fsm]
      G_intr_out   <= (_p1_UART_AXI4L_step_pSetup) ? N_734 : 1'h0; // (comb-Out) (ld[1:1]+S+@) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L549)[UART_AXI4L::step]
    end /// (ROOT_CP)
    if (CM_541                  )  G__this_burst_count_r <= DM_542[3:0]    ; // GRP.30 <B>(ld[4:1]+S+@) [F(9.0)<1>,B(0.0)<0>] <0,15> [U4] P2 OP(clk:@)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
    if (CP_fsmRead_B12_F2_B14_F2)  G__this_dbg_rcount    <= I_fsmRead_B16_1; // GRP.15(ld[32:1]+S+@) [F(34.0)<1>,B(0.0)<0>] <0,4294967295> [U32] P2 OP(clk:@)(rv32_io.cpp:L518)[AXI4L::SlaveFSM::fsmRead]
    if (CM_553) begin
      G__this_uart_rx_buf_not_empty <= DM_552     ; // GRP.30 <B>(ld[1:1]+S+@) [F(47.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L68,L73)[UART_AXI4L::fsmUser]
      G__this_uart_rx_buf_full      <= DM_554     ; // GRP.30 <B>(ld[1:1]+S+@) [F(46.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L68,L74)[UART_AXI4L::fsmUser]
      G__this_uart_rx_buf_rp        <= DM_556[3:0]; // GRP.30 <B>(ld[4:1]+S+@) [F(41.0)<1>,B(0.0)<0>] <0,15> [U4] P2 OP(clk:@)(./rv32_io.h:L68,L75)[UART_AXI4L::fsmUser]
      G__this_uart_rx_buf_wp        <= DM_558[3:0]; // GRP.30 <B>(ld[4:1]+S+@) [F(41.0)<1>,B(0.0)<0>] <0,15> [U4] P2 OP(clk:@)(./rv32_io.h:L68,L76)[UART_AXI4L::fsmUser]
    end /// (CM_553)
    if (N_567) begin
      G__this_uart_rx_word   <= DM_564; // GRP.25(ld[8:1]+S+@) [F(38.0)<1>,B(0.0)<0>] <0,255> [U8] P2 OP(clk:@)(./rv32_io.h:L511)(rv32_io.cpp:L353)[UART::do_rx]
      G__this_uart_rx_parity <= DM_580; // GRP.26 <B>(ld[1:1]+S+@) [F(38.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L511)(rv32_io.cpp:L354)[UART::do_rx]
    end /// (N_567)
    if (CM_577         )  G__this_uart_rx_state          <= DM_578        ; // GRP.29 <B>(ld[2:1]+S+@) [F(38.0)<1>,B(0.0)<0>] <0,3> [U2] P2 OP(clk:@)(./rv32_io.h:L510,L511)(rv32_io.cpp:L356,L364,L375,L382)[UART_AXI4L::fsmUser]
    if (CM_585         )  G__this_uart_rx_error          <= DM_586        ; // GRP.27 <B>(ld[1:1]+S+@) [F(37.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L374,L379)[UART_AXI4L::fsmUser]
    if (N_594          )  G__this_uart_rx_bit_pos        <= DM_591[3:0]   ; // GRP.29 <B>(ld[4:1]+S+@) [F(38.0)<1>,B(0.0)<0>] <0,15> [U4] P2 OP(clk:@)(./rv32_io.h:L511)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
    if (CM_597         )  G__this_uart_rx_tick           <= DM_595        ; // GRP.29 <B>(ld[16:1]+S+@) [F(37.0)<1>,B(0.0)<0>] <0,65535> [U16] P2 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L349,L360)[UART_AXI4L::fsmUser]
    if (CP_do_rx_B11_F1)  G__this_uart_rx_bit_samp       <= I_do_rx_B01_09; // GRP.24 <B>(ld[1:1]+S+@) [F(35.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(rv32_io.cpp:L351)[UART::do_rx]
    if (CP_do_rx_B18_F1)  G__this_uart_rx_buf_buf[N_560] <= I_do_rx_B20_0 ; // RA.GRP.0(S+@) [F(35.0)<1>,B(0.0)<0>] <0,255> [U8] P2 OP(clk_array:[]@)(rv32_io.cpp:L367)
  end /// reg-assignments
  end /// always @ ...


  //// pipe-stage(1) : combinational-logic...

wire[ 1:0] N_008                =  G__this_w_state/*prv*/ & 2'h3           ; // GRP.28 <B>(NL) [F(0.0)<0>,B(20.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L538)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B01_F02  =  N_008 == 2'h0                           ; // GRP.28 <B>(L1.0+A1.0+fo5+ld[1]+S) [F(1.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L538)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B02_F2  =  CP_fsmWrite_B01_F02 & G_axi_waddr_m_valid; // GRP.28 <FB>(L1.0+A1.0+fo41+ld[1:1]) [F(2.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L540)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B01_F08  =  N_008 == 2'h2                           ; // GRP.28 <B>(L1.0+A1.0+fo4+ld[1]+S) [F(1.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L538)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B01_F04  =  N_008 == 2'h1                           ; // GRP.28 <B>(L1.0+A1.0+fo4+ld[1]+S) [F(1.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L538)[AXI4L::SlaveFSM::fsmWrite]
wire       AO_741              =  CP_fsmWrite_B01_F08 | CP_fsmWrite_B01_F04; // GRP.28 <B>(L1.0+A1.0+fo3+ld[1:1]) [F(2.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L545,L557,L571)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_482               =  CP_fsmWrite_B02_F2 | AO_741             ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L141)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B06_2     =  G_axi_waddr_m_len == 4'h0               ; // GRP.28 <FB>(L2.0+A3.0+fo3+ld[1]+S) [F(2.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L546)[AXI4L::SlaveFSM::fsmWrite]
wire       CE_081               =  ! I_fsmWrite_B06_2                      ; // GRP.28 <FB>(fo4+ld[1]) [F(2.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L546)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B06_F2   =  CP_fsmWrite_B02_F2 & CE_081             ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L546)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B13_F2   =  CP_fsmWrite_B01_F04 & G_axi_wdat_m_valid; // GRP.28 <FB>(L1.0+A1.0+fo8+ld[1:1]) [F(2.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L558)[AXI4L::SlaveFSM::fsmWrite]
wire       I_devWrite_1_B03_1   =  ! G__this_uart_tx_buf_full/*prv*/       ; // GRP.28 <B>(fo3+ld[1]) [F(0.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L631)[UART_AXI4L::devWrite]
wire       CP_devWrite_1_B01_F2 =  I_devWrite_1_B03_1 & G__this_uart_activated/*prv*/; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L626)[UART_AXI4L::devWrite]
wire[29:0] I_devWrite_1_B01_1   =  G__this_waddr/*prv*/[31:2]/*>>2*/       ; // GRP.28 <B>(NL) [F(0.0)<0>,B(20.0)<1>] <0,1073741823> [U30] P1 OP(shr:>>)(rv32_io.cpp:L626)[UART_AXI4L::devWrite]
wire[ 1:0] I_devWrite_1_B01_2   =  I_devWrite_1_B01_1[1:0]/*&2'h3*/        ; // GRP.28 <B>(NL) [F(0.0)<0>,B(20.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L626)[UART_AXI4L::devWrite]
wire[ 1:0] N_012                =  I_devWrite_1_B01_2 & 2'h3               ; // GRP.28 <B>(NL) [F(0.0)<0>,B(20.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L626)[UART_AXI4L::devWrite]
wire       CE_119               =  N_012 == 2'h0                           ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L626)[UART_AXI4L::devWrite]
wire       A_765                =  CP_devWrite_1_B01_F2 & CE_119           ; // GRP.28 <B>(L1.0+A1.0+fo3+ld[1:1]) [F(2.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L631)[UART_AXI4L::devWrite]
wire       CE_121               =  N_012 == 2'h1                           ; // GRP.28 <B>(L1.0+A1.0+fo3+ld[1]+S) [F(1.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L626)[UART_AXI4L::devWrite]
wire       AO_775               =  A_765 | CE_121                          ; // GRP.28 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(3.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire       CM_527               =  CP_fsmWrite_B13_F2 & AO_775             ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire       CP_fsmWrite_B22_F2   =  CP_fsmWrite_B01_F08 & G_axi_wdat_m_valid; // GRP.28 <FB>(L1.0+A1.0+fo7+ld[1:1]) [F(2.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L572)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_529               =  CP_fsmWrite_B22_F2 & AO_775             ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire       CM_531               =  CM_527 | CM_529                         ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(5.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire       CP_devWrite_1_B03_F1 =  CP_fsmWrite_B13_F2 & A_765              ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L631)[UART_AXI4L::devWrite]
wire[ 1:0] MA_767               =  (CE_121) ? 2'h2 : 2'h0                  ; // GRP.28 <B>(L1.0+A2.0+fo2+ld[2:0:1]) [F(2.0)<0>,B(19.0)<1>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire[ 1:0] DM_525               =  (CP_fsmWrite_B13_F2) ? MA_767 : 2'h0    ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(3.0)<0>,B(18.0)<1>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire[ 1:0] DM_528               =  {1'b0,CP_devWrite_1_B03_F1} | DM_525    ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(17.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire       CP_devWrite_1_1_B03_F1 =  CP_fsmWrite_B22_F2 & A_765            ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L631)[UART_AXI4L::devWrite]
wire[ 1:0] DM_526               =  (CP_fsmWrite_B22_F2) ? MA_767 : 2'h0    ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(3.0)<0>,B(18.0)<1>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire[ 1:0] DM_530               =  {1'b0,CP_devWrite_1_1_B03_F1} | DM_526  ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(17.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire[ 1:0] DM_532               =  DM_528 | DM_530                         ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[1:1]) [F(5.0)<0>,B(16.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire[ 1:0] G__this_writeFlag    =  (CM_531) ? DM_532 : 2'h0                ; // GRP.28 <FB>(L1.0+A2.0+fo3+ld[2:1]) [F(6.0)<0>,B(15.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L295)(rv32_io.cpp:L628,L633)[AXI4L::SlaveFSM::fsm]
wire       I_devWrite_1_B09_4   =  G__this_writeFlag != 2'h0               ; // GRP.28 <FB>(L1.0+A1.0+fo15+ld[1]+S) [F(7.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(ne:!=)(rv32_io.cpp:L637)[UART_AXI4L::devWrite]
wire       L_devWrite_1_RET     =  I_devWrite_1_B09_4                      ; // GRP.28 <FB>(NL) [F(7.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(assign:=)(rv32_io.cpp:L637)[UART_AXI4L::devWrite]
wire       CP_fsmWrite_B15_F2   =  CP_fsmWrite_B13_F2 & L_devWrite_1_RET   ; // GRP.28 <FB>(L1.0+A1.0+fo5+ld[1:1]) [F(8.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L558)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_489               =  CP_fsmWrite_B06_F2 | CP_fsmWrite_B15_F2 ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(9.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L169)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B25_2     =  G__this_burst_count_w/*prv*/ == 4'h0    ; // GRP.28 <B>(L2.0+A3.0+fo2+ld[1]+S) [F(2.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L575)[AXI4L::SlaveFSM::fsmWrite]
wire       A_798                =  I_fsmWrite_B25_2 & CP_fsmWrite_B22_F2   ; // GRP.28 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(3.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L575)[AXI4L::SlaveFSM::fsmWrite]
wire       L_devWrite_1_1_RET   =  I_devWrite_1_B09_4                      ; // GRP.28 <FB>(NL) [F(7.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(assign:=)(rv32_io.cpp:L637)[UART_AXI4L::devWrite]
wire       CP_fsmWrite_B25_F1   =  A_798 & L_devWrite_1_1_RET              ; // GRP.28 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(8.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L575)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B01_F10  =  N_008 == 2'h3                           ; // GRP.28 <B>(L1.0+A1.0+fo4+ld[1]+S) [F(1.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L538)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_491               =  CP_fsmWrite_B25_F1 | CP_fsmWrite_B01_F10; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L169)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_492               =  CM_489 | CM_491                         ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L169)[AXI4L::SlaveFSM::fsmWrite]
wire       A_750          =  G__this_waddr_end/*prv*/ & CP_fsmWrite_B01_F10; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B02_1     =  ! G_axi_waddr_m_valid                   ; // GRP.28 <FB>(fo4+ld[1]) [F(0.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L540)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B35_1     =  ! G__this_waddr_end/*prv*/              ; // GRP.28 <B>(fo1+ld[1]) [F(0.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       A_751                =  I_fsmWrite_B35_1 & CP_fsmWrite_B01_F10  ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       A_763                =  I_fsmWrite_B02_1 & A_751                ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       AO_773               =  A_750 | A_763                           ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L595,L595)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B34_1 =  (G_axi_wres_m_ready) ? 1'h1 : G__this_wres_end/*prv*/; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:0:1]) [F(1.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B34_3     =  I_fsmWrite_B34_1 | G_axi_wres_m_ready   ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B35_F2_B36_F1 =  AO_773 & I_fsmWrite_B34_3          ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L595,L595)[AXI4L::SlaveFSM::fsmWrite]
wire       O_813          =  CP_fsmWrite_B35_F2_B36_F1 | CP_fsmWrite_B15_F2; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(9.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_497               =  CP_fsmWrite_B25_F1 | O_813              ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       MA_796               =  (CP_fsmWrite_B13_F2) ? 1'h0 : 1'h0      ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1]) [F(3.0)<0>,B(3.0)<1>] <0,0> [U0] P1 OP(sel:?)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       DM_493               =  (L_devWrite_1_RET) ? MA_796 : 1'h0      ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(2.0)<1>] <0,0> [U0] P1 OP(sel:?)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       MA_808               =  (A_798) ? 1'h0 : 1'h0                   ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1]) [F(4.0)<0>,B(3.0)<1>] <0,0> [U0] P1 OP(sel:?)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       DM_494               =  (L_devWrite_1_1_RET) ? MA_808 : 1'h0    ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(2.0)<1>] <0,0> [U0] P1 OP(sel:?)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       DM_496               =  DM_493 | DM_494                         ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(1.0)<1>] <0,0> [U0] P1 OP(or:|)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_495               =  CP_fsmWrite_B15_F2 | CP_fsmWrite_B25_F1 ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       I_set_pin_B1_11      =  ! G__this_uart_activated/*prv*/         ; //  <B>(comb-Out) (ld[1]) [F(0.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L663)[UART::set_pin]
assign     G_uart_pin_rts       =  I_set_pin_B1_11                         ; // DS.GRP.11 <B>(comb-Out) (NL) [F(0.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(rv32_io.cpp:L663)[UART::set_pin]
wire       I_set_pin_B1_07      =  ! G__this_uart_tx_bit_n/*prv*/          ; //  <B>(comb-Out) (ld[1]) [F(0.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L662)[UART::set_pin]
assign     G_uart_pin_tx        =  I_set_pin_B1_07                         ; // DS.GRP.10 <B>(comb-Out) (NL) [F(0.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(rv32_io.cpp:L662)[UART::set_pin]
wire       I_read_status_B1_09  =  ! G__this_uart_tx_buf_not_empty/*prv*/  ; // GRP.28 <B>(fo2+ld[1]) [F(0.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L492)[UART::read_status]
wire       AO_756               =  CE_081 | I_fsmWrite_B06_2               ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_508               =  CP_fsmWrite_B02_F2 & AO_756             ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       O_822                =  CM_508 | CP_fsmWrite_B25_F1             ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_513               =  O_813 | O_822                           ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B06_F1   =  CP_fsmWrite_B02_F2 & I_fsmWrite_B06_2   ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L546)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] MA_755               =  (CP_fsmWrite_B02_F2) ? 2'h2 : 2'h0      ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(3.0)<0>,B(5.0)<1>] <0,2> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_505               =  (CE_081) ? MA_755 : 2'h0                ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(4.0)<0>,B(4.0)<1>] <0,2> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_509               =  {1'b0,CP_fsmWrite_B06_F1} | DM_505      ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(3.0)<1>] <0,3> [U2] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] MA_797               =  (CP_fsmWrite_B13_F2) ? 2'h3 : 2'h0      ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(3.0)<0>,B(4.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_506               =  (L_devWrite_1_RET) ? MA_797 : 2'h0      ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(8.0)<0>,B(3.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] O_823                =  DM_509 | DM_506                         ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[1:1]) [F(9.0)<0>,B(2.0)<1>] <0,3> [U2] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] MA_809               =  (A_798) ? 2'h3 : 2'h0                   ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(4.0)<0>,B(3.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_507               =  (L_devWrite_1_1_RET) ? MA_809 : 2'h0    ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(8.0)<0>,B(2.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_514               =  O_823 | DM_507                          ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,3> [U2] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B20_F1   =  CP_fsmWrite_B01_F08 & I_fsmWrite_B02_1  ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L571)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B11_F1   =  CP_fsmWrite_B01_F04 & I_fsmWrite_B02_1  ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L557)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_516               =  CP_fsmWrite_B02_F2 | CP_fsmWrite_B11_F1 ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L545,L557,L571)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_517               =  CP_fsmWrite_B20_F1 | CM_516             ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L545,L557,L571)[AXI4L::SlaveFSM::fsmWrite]
wire       DM_518               =  AO_741 & I_fsmWrite_B02_1               ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L545,L557,L571)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B24_F2   =  CP_fsmWrite_B22_F2 & L_devWrite_1_1_RET ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(8.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L573)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B32_F2   =  CP_fsmWrite_B01_F10 & G_axi_wres_m_ready; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(2.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L594)[AXI4L::SlaveFSM::fsmWrite]
wire       O_806                =  CP_fsmWrite_B32_F2 | CP_fsmWrite_B15_F2 ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L559,L574,L594)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_520               =  CP_fsmWrite_B24_F2 | O_806              ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L559,L574,L594)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] sub_I_do_tx_B18_2 = {1'b0,G__this_uart_tx_bit_pos/*prv*/} - {1'b0,2'b0,G__this_uart_stop_count/*prv*/}; // G__this_uart_tx_bit_pos/*prv*/ < G__this_uart_stop_count/*prv*/
wire       I_do_tx_B18_2        = (sub_I_do_tx_B18_2[4])                  ; // GRP.28 <B>(L2.0+C6.0+A12.0+fo3+ld[1:1]+S) [F(8.0)<0>,B(19.0,25.0)<1>] <0,1> [U1] P1 OP(lt:<)(rv32_io.cpp:L284)[UART::do_tx]
wire[ 1:0] N_019                =  G__this_uart_tx_state/*prv*/ & 2'h3     ; // GRP.28 <B>(NL) [F(0.0)<0>,B(19.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       CE_274               =  N_019 == 2'h3                           ; // GRP.28 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L265)[UART::do_tx]
wire       I_do_tx_B01_13       =  G__this_uart_tx_state/*prv*/ == 2'h0    ; // GRP.28 <B>(L1.0+A1.0+fo3+ld[1]+S) [F(1.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L244)[UART::do_tx]
wire       CE_249               =  ! I_do_tx_B01_13                        ; // GRP.28 <B>(fo5+ld[1]) [F(1.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L244)[UART::do_tx]
wire       A_747                =  CE_274 & CE_249                         ; // GRP.28 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(2.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       A_758                =  I_do_tx_B18_2 & A_747                   ; // GRP.28 <B>(L1.0+A1.0+fo7+ld[1:1]) [F(9.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       CE_280               =  ! I_do_tx_B18_2                         ; // GRP.28 <B>(fo2+ld[1]) [F(8.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L284)[UART::do_tx]
wire       A_759                =  CE_280 & A_747                          ; // GRP.28 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(9.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       A_771                =  I_read_status_B1_09 & A_759             ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       AO_779               =  A_758 | A_771                           ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       A_772            =  G__this_uart_tx_buf_not_empty/*prv*/ & A_759; // GRP.28 <B>(L1.0+A1.0+fo11+ld[1:1]) [F(10.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       CE_272               =  N_019 == 2'h2                           ; // GRP.28 <B>(L1.0+A1.0+fo3+ld[1]+S) [F(1.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_748                =  CE_272 & CE_249                         ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       AO_782               =  A_772 | A_748                           ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       AO_785               =  AO_779 | AO_782                         ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire[16:0] sub_I_do_tx_B05_2 = {1'b0,G__this_uart_tx_tick/*prv*/} - {1'b0,G__this_uart_baud_period_m1/*prv*/}; // G__this_uart_tx_tick/*prv*/ < G__this_uart_baud_period_m1/*prv*/
wire       I_do_tx_B05_2        = (sub_I_do_tx_B05_2[16])                 ; // GRP.28 <B>(L2.0+C32.0+A80.0+fo20+ld[1:1]+S) [F(34.0)<0>,B(15.0,47.0)<1>] <0,1> [U1] P1 OP(lt:<)(rv32_io.cpp:L256)[UART::do_tx]
wire       CE_255               =  ! I_do_tx_B05_2                         ; // GRP.28 <B>(fo33+ld[1]) [F(34.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L256)[UART::do_tx]
wire       CM_726               =  AO_785 & CE_255                         ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire[14:0] I_do_rx_B11_1 =  G__this_uart_baud_period_m1/*prv*/[15:1]/*>>1*/; // GRP.28 <B>(NL) [F(0.0)<0>,B(21.0)<1>] <0,32767> [U15] P1 OP(shr:>>)(rv32_io.cpp:L348)[UART::do_rx]
wire       I_do_tx_B09_2 =  G__this_uart_tx_tick/*prv*/ == {1'b0,I_do_rx_B11_1}; // GRP.28 <B>(L6.0+A47.0+fo1+ld[1:1]+S) [F(6.0)<0>,B(21.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L258)[UART::do_tx]
wire       I_do_tx_B06_0        =  G__this_uart_tx_state/*prv*/ == 2'h3    ; // GRP.28 <B>(L1.0+A1.0+fo3+ld[1]+S) [F(1.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L257)[UART::do_tx]
wire       I_do_tx_B07_1        =  G__this_uart_tx_bit_pos/*prv*/ == 4'h0  ; // GRP.28 <B>(L2.0+A3.0+fo1+ld[1]+S) [F(2.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L257)[UART::do_tx]
wire       CE_261               =  ! I_do_tx_B07_1                         ; // GRP.28 <B>(fo2+ld[1]) [F(2.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L257)[UART::do_tx]
wire       QC_428               =  I_do_tx_B06_0 & CE_261                  ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L256,L257,L257)[UART::do_tx]
wire       CM_713               =  QC_428 | I_do_tx_B06_0                  ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L256,L257,L257)[UART::do_tx]
wire       I_do_rx_B10_1        =  G__this_uart_stop_count/*prv*/ == 2'h3  ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L347)[UART::do_rx]
wire       MA_746               =  (I_do_tx_B06_0) ? I_do_rx_B10_1 : 1'h0  ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L256,L257,L257)[UART::do_tx]
wire       DM_714               =  (CE_261) ? MA_746 : 1'h0                ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L256,L257,L257)[UART::do_tx]
wire       DM_715               =  (CM_713) ? DM_714 : 1'h0                ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L256,L257,L257)[UART::do_tx]
wire       I_do_tx_B09_5        =  I_do_tx_B09_2 & DM_715                  ; // GRP.28 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(7.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L260)[UART::do_tx]
wire       A_777                =  I_do_tx_B09_5 & CE_249                  ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       QC_457               =  A_777 & I_do_tx_B05_2                   ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       O_790                =  CM_726 | QC_457                         ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       QC_453  =  I_do_tx_B01_13 & G__this_uart_tx_buf_not_empty/*prv*/; // GRP.28 <B>(L1.0+A1.0+fo18+ld[1:1]) [F(2.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       CE_270               =  N_019 == 2'h1                           ; // GRP.28 <B>(L1.0+A1.0+fo3+ld[1]+S) [F(1.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_749                =  CE_270 & CE_249                         ; // GRP.28 <B>(L1.0+A1.0+fo14+ld[1:1]) [F(2.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       QC_470               =  A_749 & CE_255                          ; // GRP.28 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(35.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       CM_614               =  QC_453 | QC_470                         ; // GRP.28 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(36.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire       CM_727               =  O_790 | CM_614                          ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       QC_466               =  A_772 & CE_255                          ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       DM_728               =  QC_453 | QC_466                         ; // GRP.28 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(36.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       DM_731               =  (CM_727) ? DM_728 : 1'h0                ; // GRP.28 <B>(L1.0+A1.0+fo7+ld[1:1]) [F(38.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       I_do_tx_B27_0        =  DM_731 & 1'h1                           ; // (NL) [F(38.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L309)[UART::do_tx]
wire[31:0] I_fsm_0_0_B5_3       =  G__this_cycle/*prv*/ + 32'h1            ; // GRP.12 <B>(L2.0+C32.0+A96.0+fo1+ld[1]) [F(34.0,2.0)<0>,B(2.0,34.0)<0>] <0,4294967295> [U32] P1 OP(add:+)(./rv32_io.h:L289)[AXI4L::SlaveFSM::fsm]
wire       CE_102               =  ! I_fsmWrite_B25_2                      ; // GRP.28 <B>(fo1+ld[1]) [F(2.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L575)[AXI4L::SlaveFSM::fsmWrite]
wire       A_799                =  CE_102 & CP_fsmWrite_B22_F2             ; // GRP.28 <FB>(L1.0+A1.0+fo6+ld[1:1]) [F(3.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L575)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B25_F2   =  A_799 & L_devWrite_1_1_RET              ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L575)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_545               =  CP_fsmWrite_B02_F2 | CP_fsmWrite_B25_F2 ; // GRP.28 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(9.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 3:0] MA_739       =  (G_axi_waddr_m_valid) ? G_axi_waddr_m_len : 4'h0; // GRP.28 <FB>(L1.0+A4.0+fo1+ld[4:1]) [F(1.0)<0>,B(3.0)<1>] <0,15> [U4] P1 OP(sel:?)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 3:0] DM_543               =  (CP_fsmWrite_B01_F02) ? MA_739 : 4'h0   ; // GRP.28 <FB>(L1.0+A4.0+fo1+ld[4:1]) [F(2.0)<0>,B(2.0)<1>] <0,15> [U4] P1 OP(sel:?)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] I_fsmWrite_B29_0  =  {1'b0,G__this_burst_count_w/*prv*/} + 5'h1f; // GRP.28 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<0>,B(5.0,10.0)<1>] <-1,14> [S5] P1 OP(add:+)(rv32_io.cpp:L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] MA_810               =  (A_799) ? I_fsmWrite_B29_0 : 5'h0       ; // GRP.28 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(8.0,4.0)<0>,B(3.0)<1>] <-1,14> [S5] P1 OP(sel:?)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] DM_544               =  (L_devWrite_1_1_RET) ? MA_810 : 5'h0    ; // GRP.28 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(9.0,8.0)<0>,B(2.0)<1>] <-1,14> [S5] P1 OP(sel:?)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] DM_546               =  {1'b0,DM_543} | DM_544                  ; // GRP.28 <FB>(L1.0+A4.0+fo1+ld[1:1]) [F(10.0,9.0)<0>,B(1.0)<1>] <-1,15> [S5] P1 OP(or:|)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_519               =  CP_fsmWrite_B15_F2 | CP_fsmWrite_B24_F2 ; //  <F>(L1.0+A1.0+fo64+ld[1:1]) [F(9.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L559,L574,L594)[AXI4L::SlaveFSM::fsmWrite]
wire[31:0] I_fsmWrite_B18_5     =  G__this_dbg_wcount/*prv*/ + 32'h1       ; // GRP.20(L2.0+C32.0+A96.0+fo1+ld[1]) [F(34.0,2.0)<0>,B(3.0,35.0)<0>] <0,4294967295> [U32] P1 OP(add:+)(rv32_io.cpp:L565)[AXI4L::SlaveFSM::fsmWrite]
wire[31:0] DM_551               =  (CM_519) ? I_fsmWrite_B18_5 : 32'h0     ; // GRP.20 <F>(L1.0+A32.0+fo1+ld[32:1]) [F(35.0,10.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(rv32_io.cpp:L565,L585)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmUser_2_B1_F1   =  G__this_writeFlag == 2'h2               ; // GRP.28 <FB>(L1.0+A1.0+fo7+ld[1]+S) [F(7.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L641)[UART_AXI4L::fsmUser]
wire       CP_fsmUser_2_B1_F2   =  ! CP_fsmUser_2_B1_F1                    ; // GRP.28 <FB>(fo3+ld[1]) [F(7.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L641)[UART_AXI4L::fsmUser]
wire       CP_fsmUser_2_B4_F2 =  CP_fsmUser_2_B1_F2 & G__this_uart_activated/*prv*/; // GRP.28 <FB>(L1.0+A1.0+fo9+ld[1:1]) [F(8.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L644)[UART_AXI4L::fsmUser]
wire       DM_579 =  (CP_fsmUser_2_B1_F1) ? 1'h0 : G__this_uart_rx_bit_d_n/*prv*/; //  <FB>(L1.0+A1.0+fo1+ld[1:0:1]) [F(8.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L660)[UART_AXI4L::step]
wire       I_do_rx_B18_1        =  G__this_uart_parity_type/*prv*/ == 3'h0 ; // GRP.28 <B>(L2.0+A2.0+fo2+ld[1]+S) [F(2.0)<0>,B(8.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L364)[UART::do_rx]
wire[ 1:0] I_do_rx_B18_2        =  (I_do_rx_B18_1) ? 2'h3 : 2'h2           ; // GRP.28 <B>(L1.0+A2.0+fo1+ld[2:0:1]) [F(3.0)<0>,B(6.0)<0>] <2,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L364)[UART::do_rx]
wire[ 2:0] N_018                =  G__this_uart_parity_type/*prv*/ & 3'h7  ; //  <B>(NL) [F(0.0)<0>,B(11.0)<0>] <0,7> [U3] P1 OP(and:&)(rv32_io.cpp:L217)[UART::parity_bit]
wire       CE_237               =  N_018 == 3'h5                           ; //  <B>(L2.0+A2.0+fo3+ld[1]+S) [F(2.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L217)[UART::parity_bit]
wire       CE_233               =  N_018 == 3'h1                           ; //  <B>(L2.0+A2.0+fo3+ld[1]+S) [F(2.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L217)[UART::parity_bit]
wire       CE_235               =  N_018 == 3'h3                           ; //  <B>(L2.0+A2.0+fo1+ld[1]+S) [F(2.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L217)[UART::parity_bit]
wire       QC_357               =  CE_233 | CE_235                         ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(9.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L217,L218,L374)[UART::parity_bit]
wire       QC_358               =  CE_237 | QC_357                         ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(8.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L217,L218,L374)[UART::parity_bit]
wire       QC_359               =  ! QC_358                                ; //  <B>(fo1+ld[1]) [F(4.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L217,L218,L374)[UART::parity_bit]
wire       O_783                =  CE_233 | CE_237                         ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(8.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L217,L218,L374)[UART::parity_bit]
wire       CM_697               =  QC_359 | O_783                          ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L217,L218,L374)[UART::parity_bit]
wire       I_devWrite_1_B06_1   =  G__this_writeFlag == 2'h0               ; // GRP.28 <FB>(L1.0+A1.0+fo4+ld[1]+S) [F(7.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L635)[UART_AXI4L::devWrite]
wire[ 2:0] I_fsmUser_2_B6_2     =  (I_devWrite_1_B06_1) ? 3'h0 : 3'h5      ; // GRP.28 <FB>(L1.0+A3.0+fo1+ld[3:0:1]) [F(8.0)<0>,B(13.0)<1>] <0,5> [U3] P1 OP(sel:?)(rv32_io.cpp:L646)[UART_AXI4L::fsmUser]
wire       I_do_tx_B01_05       =  I_fsmUser_2_B6_2 == 3'h5                ; // GRP.28 <FB>(L2.0+A2.0+fo2+ld[1]+S) [F(10.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L241)[UART::do_tx]
wire       I_do_tx_B01_08       =  I_do_tx_B01_05 & I_devWrite_1_B03_1     ; // GRP.28 <FB>(L1.0+A1.0+fo7+ld[1:1]) [F(11.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L241)[UART::do_tx]
wire       I_update_1_B01_2     =  I_do_tx_B01_08 | DM_731                 ; // GRP.28 <FB>(L1.0+A1.0+fo6+ld[1:1]) [F(39.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       CP_update_1_B01_F2   =  CP_fsmUser_2_B4_F2 & I_update_1_B01_2   ; // GRP.28 <FB>(L1.0+A1.0+fo8+ld[1:1]) [F(40.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       CM_599               =  CP_fsmUser_2_B1_F1 | CP_update_1_B01_F2 ; // GRP.28 <FB>(L1.0+A1.0+fo10+ld[1:1]) [F(41.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L68,L73)[UART_AXI4L::fsmUser]
wire       I_nxt_pnt_2_B1_0     =  G__this_uart_tx_buf_rp/*prv*/ == 4'h2   ; // GRP.28 <B>(L2.0+A3.0+fo5+ld[1]+S) [F(2.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_2_B1_1  =  {1'b0,G__this_uart_tx_buf_rp/*prv*/} + 5'h1; // GRP.28 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<0>,B(12.0,17.0)<1>] <1,16> [U5] P1 OP(add:+)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_2_B1_2 =  (I_nxt_pnt_2_B1_0) ? 5'h0 : I_nxt_pnt_2_B1_1; // GRP.28 <B>(L1.0+A5.0+fo1+ld[5:0:1]) [F(8.0,3.0)<0>,B(10.0)<1>] <0,16> [U5] P1 OP(sel:?)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] L_nxt_pnt_2_RET      =  I_nxt_pnt_2_B1_2                        ; // GRP.28 <B>(NL) [F(8.0,3.0)<0>,B(9.0)<1>] <0,16> [U5] P1 OP(assign:=)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] DM_732 =  (DM_731) ? L_nxt_pnt_2_RET : {1'b0,G__this_uart_tx_buf_rp/*prv*/}; // GRP.28 <B>(L2.0+A10.0+fo3+ld[5:1:1]) [F(40.0)<0>,B(9.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L71)[IOBuf<unsigned char, 8>::update]
wire       I_nxt_pnt_3_B1_0     =  G__this_uart_tx_buf_wp/*prv*/ == 4'h2   ; // GRP.28 <B>(L2.0+A3.0+fo5+ld[1]+S) [F(2.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_3_B1_1  =  {1'b0,G__this_uart_tx_buf_wp/*prv*/} + 5'h1; // GRP.28 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<0>,B(12.0,17.0)<1>] <1,16> [U5] P1 OP(add:+)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_3_B1_2 =  (I_nxt_pnt_3_B1_0) ? 5'h0 : I_nxt_pnt_3_B1_1; // GRP.28 <B>(L1.0+A5.0+fo1+ld[5:0:1]) [F(8.0,3.0)<0>,B(10.0)<1>] <0,16> [U5] P1 OP(sel:?)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] L_nxt_pnt_3_RET      =  I_nxt_pnt_3_B1_2                        ; // GRP.28 <B>(NL) [F(8.0,3.0)<0>,B(9.0)<1>] <0,16> [U5] P1 OP(assign:=)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] DM_733 =  (I_do_tx_B01_08) ? L_nxt_pnt_3_RET : {1'b0,G__this_uart_tx_buf_wp/*prv*/}; // GRP.28 <FB>(L2.0+A10.0+fo3+ld[5:1:1]) [F(13.0)<0>,B(9.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L72)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_B08_01    =  DM_732 != DM_733                        ; // GRP.28 <FB>(L5.0+A14.0+fo1+ld[1:1]+S) [F(45.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(ne:!=)(./rv32_io.h:L73)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_B08_03    =  I_update_1_B08_01 | I_do_tx_B01_08      ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(46.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L73)[IOBuf<unsigned char, 8>::update]
wire       DM_598        =  (CP_update_1_B01_F2) ? I_update_1_B08_03 : 1'h0; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(47.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L68,L73)[UART_AXI4L::fsmUser]
wire       I_update_1_B08_06    =  DM_732 == DM_733                        ; // GRP.28 <FB>(L5.0+A14.0+fo1+ld[1:1]+S) [F(45.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L74)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_B01_0     =  ! DM_731                                ; // GRP.28 <B>(fo1+ld[1]) [F(38.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       MA_833         =  (CP_update_1_B01_F2) ? I_update_1_B01_0 : 1'h0; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(41.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L68,L74)[UART_AXI4L::fsmUser]
wire       DM_600               =  I_update_1_B08_06 & MA_833              ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(46.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L68,L74)[UART_AXI4L::fsmUser]
wire[ 4:0] I_update_1_B08_10    =  DM_732 & 5'h1f                          ; // GRP.28 <B>(NL) [F(40.0)<0>,B(1.0)<0>] <0,16> [U5] P1 OP(and:&)(./rv32_io.h:L75)[IOBuf<unsigned char, 8>::update]
wire[ 4:0] DM_602        =  (CP_update_1_B01_F2) ? I_update_1_B08_10 : 5'h0; // GRP.28 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(41.0)<0>,B(1.0)<0>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L68,L75)[UART_AXI4L::fsmUser]
wire[ 4:0] I_update_1_B08_12    =  DM_733 & 5'h1f                          ; // GRP.28 <FB>(NL) [F(13.0)<0>,B(2.0)<0>] <0,16> [U5] P1 OP(and:&)(./rv32_io.h:L76)[IOBuf<unsigned char, 8>::update]
wire[ 4:0] MA_821        =  (CP_fsmUser_2_B4_F2) ? I_update_1_B08_12 : 5'h0; // GRP.28 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(14.0)<0>,B(2.0)<0>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L68,L76)[UART_AXI4L::fsmUser]
wire[ 4:0] DM_604               =  (I_update_1_B01_2) ? MA_821 : 5'h0      ; // GRP.28 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(40.0)<0>,B(1.0)<0>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L68,L76)[UART_AXI4L::fsmUser]
wire       CM_616               =  QC_470 | DM_728                         ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire       N_618                =  CM_616 & CP_fsmUser_2_B4_F2             ; //  <FB>(L1.0+A1.0+fo9+ld[1:1]) [F(38.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire[ 6:0] I_do_tx_B15_5        =  G__this_uart_tx_word/*prv*/[7:1]/*>>1*/ ; // GRP.23 <B>(NL) [F(0.0)<0>,B(3.0)<0>] <0,127> [U7] P1 OP(shr:>>)(rv32_io.cpp:L277)[UART::do_tx]
wire[ 6:0] MA_760               =  (A_749) ? I_do_tx_B15_5 : 7'h0          ; // GRP.23 <B>(L1.0+A7.0+fo1+ld[7:1]) [F(3.0)<0>,B(3.0)<0>] <0,127> [U7] P1 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire[ 6:0] DM_612               =  (CE_255) ? MA_760 : 7'h0                ; // GRP.23 <B>(L1.0+A7.0+fo1+ld[7:1]) [F(35.0)<0>,B(2.0)<0>] <0,127> [U7] P1 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire       A_800          =  I_do_tx_B01_13 & G__this_uart_activated/*prv*/; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(13.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244)[UART::do_tx]
wire       A_811            =  G__this_uart_tx_buf_not_empty/*prv*/ & A_800; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L245)[UART::do_tx]
wire       CP_do_tx_B02_F2      =  A_811 & CP_fsmUser_2_B1_F2              ; // GRP.28 <FB>(L1.0+A1.0+fo5+ld[1:1]) [F(8.0)<0>,B(11.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L245)[UART::do_tx]
wire[ 1:0] N_607             =  G__this_uart_tx_buf_rp/*prv*/[1:0]/*&2'h3*/; //  <B>(NL) [F(0.0)<0>,B(10.0)<0>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L247)[UART::do_tx]
wire[ 1:0] N_610                =  (CP_do_tx_B02_F2) ? N_607 : N_607       ; //  <FB>(L2.0+A4.0+fo3+ld[2:1:1]) [F(10.0)<0>,B(10.0)<0>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L247,L291)[UART_AXI4L::step]
wire[ 7:0] AD_16               =  G__this_uart_tx_buf_buf/*prv*/ [ N_610 ] ; // RA.GRP.1 <FB>(L4.0+A32.0+fo2+ld[1:3]+S) [F(14.0)<0>,B(8.0)<0>] <0,255> [U8] P1 OP(addr:[])(rv32_io.cpp:L247,L291)[UART_AXI4L::step]
wire[ 7:0] I_activate_2_B1_0    =  AD_16 & 8'hff                           ; //  <FB>(NL) [F(14.0)<0>,B(4.0)<0>] <0,255> [U8] P1 OP(and:&)(./rv32_io.h:L511)[UART_PORT::activate]
wire[ 7:0] MA_844               =  (A_772) ? I_activate_2_B1_0 : 8'h0      ; //  <FB>(L1.0+A8.0+fo1+ld[8:1]) [F(15.0)<0>,B(4.0)<0>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire[ 7:0] DM_613               =  (CE_255) ? MA_844 : 8'h0                ; //  <FB>(L1.0+A8.0+fo1+ld[8:1]) [F(35.0)<0>,B(3.0)<0>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire[15:0] MA_843               =  (QC_453) ? 16'hffff : 16'h0             ; //  <B>(L1.0+A16.0+fo1+ld[16:0:1]) [F(3.0)<0>,B(4.0)<0>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire[ 7:0] DM_611               =  AD_16 & MA_843[7:0]                     ; //  <FB>(L1.0+A8.0+fo1+ld[1:1]) [F(15.0)<0>,B(3.0)<0>] <0,255> [U8] P1 OP(and:&)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire[ 7:0] O_878                =  DM_613 | DM_611                         ; //  <FB>(L1.0+A8.0+fo1+ld[1:1]) [F(36.0)<0>,B(2.0)<0>] <0,255> [U8] P1 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire[ 7:0] DM_617               =  {1'b0,DM_612} | O_878                   ; // GRP.23 <FB>(L1.0+A7.0+fo1+ld[1:1]) [F(37.0)<0>,B(1.0)<0>] <0,255> [U8] P1 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
wire       A_801                =  CE_249 & G__this_uart_activated/*prv*/  ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244)[UART::do_tx]
wire       CP_do_tx_B01_F2      =  A_801 & CP_fsmUser_2_B1_F2              ; // GRP.28 <FB>(L1.0+A1.0+fo23+ld[1:1]) [F(8.0)<0>,B(9.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244)[UART::do_tx]
wire       A_819                =  CE_274 & CP_do_tx_B01_F2                ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(9.0)<0>,B(8.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_831                =  CE_280 & A_819                          ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(10.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L284)[UART::do_tx]
wire       A_837            =  G__this_uart_tx_buf_not_empty/*prv*/ & A_831; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L289)[UART::do_tx]
wire       CP_do_tx_B20_F2      =  A_837 & CE_255                          ; // GRP.28 <FB>(L1.0+A1.0+fo3+ld[1:1]) [F(35.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L289)[UART::do_tx]
wire       CM_621               =  CP_fsmUser_2_B1_F1 | CP_do_tx_B02_F2    ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire       CM_624               =  CP_do_tx_B20_F2 | CM_621                ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(36.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire       A_818                =  CE_272 & CP_do_tx_B01_F2                ; // GRP.28 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(9.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_836                =  I_read_status_B1_09 & A_831             ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(11.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L289)[UART::do_tx]
wire       AO_846               =  A_818 | A_836                           ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire       CM_623               =  AO_846 & CE_255                         ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire       A_816                =  I_do_tx_B09_5 & CP_do_tx_B01_F2         ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L260)[UART::do_tx]
wire       CP_do_tx_B09_F1      =  A_816 & I_do_tx_B05_2                   ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L260)[UART::do_tx]
wire       O_860                =  CM_623 | CP_do_tx_B09_F1                ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire       I_do_tx_B12_4 =  G__this_uart_tx_bit_pos/*prv*/ == {1'b0,G__this_uart_bit_count_m1/*prv*/}; // GRP.28 <B>(L4.0+A11.0+fo2+ld[1:1]+S) [F(4.0)<0>,B(10.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L269)[UART::do_tx]
wire       A_817                =  CE_270 & CP_do_tx_B01_F2                ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(9.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_825                =  I_do_tx_B12_4 & A_817                   ; // GRP.28 <FB>(L1.0+A1.0+fo3+ld[1:1]) [F(10.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L269)[UART::do_tx]
wire       CP_do_tx_B12_F1      =  A_825 & CE_255                          ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L269)[UART::do_tx]
wire       CM_626               =  O_860 | CP_do_tx_B12_F1                 ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire       CM_628               =  CM_624 | CM_626                         ; // GRP.28 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(38.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire[ 1:0] MA_834               =  (A_825) ? I_do_rx_B18_2 : 2'h0          ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(11.0)<0>,B(5.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire[ 1:0] MA_826               =  (A_818) ? 2'h3 : 2'h0                   ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(10.0)<0>,B(5.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire[ 1:0] MAO_845              =  MA_834 | MA_826                         ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[1:1]) [F(12.0)<0>,B(4.0)<0>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire[ 1:0] DM_627               =  (CE_255) ? MAO_845 : 2'h0               ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(35.0)<0>,B(3.0)<0>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire[ 1:0] O_862                =  DM_627 | {1'b0,CP_do_tx_B02_F2}         ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<0>,B(2.0)<0>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire[ 1:0] DM_629               =  O_862 | {1'b0,CP_do_tx_B20_F2}          ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<0>,B(1.0)<0>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire       AO_829               =  CE_270 | CE_272                         ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       AO_828               =  AO_829 & CP_do_tx_B01_F2                ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       A_830                =  I_do_tx_B18_2 & A_819                   ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L284)[UART::do_tx]
wire       AO_847               =  A_830 | A_836                           ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       AO_861               =  AO_828 | AO_847                         ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(13.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       CM_638               =  AO_861 & CE_255                         ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       CM_639               =  CM_624 | CM_638                         ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       DM_625               =  CP_do_tx_B20_F2 | CP_do_tx_B02_F2       ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
wire[ 7:0] I_do_tx_B11_1        =  G__this_uart_tx_word/*prv*//*&8'hff*/   ; //  <B>(NL) [F(0.0)<0>,B(4.0)<0>] <0,255> [U8] P1 OP(and:&)(rv32_io.cpp:L263)[UART::do_tx]
wire       I_do_tx_B11_2        =  I_do_tx_B11_1[0]/*&1'h1*/               ; //  <B>(NL) [F(0.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L263)[UART::do_tx]
wire       I_do_tx_B12_0        =  ! I_do_tx_B11_2                         ; //  <B>(fo1+ld[1]) [F(0.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L267)[UART::do_tx]
wire       MA_824               =  (A_817) ? I_do_tx_B12_0 : 1'h0          ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       I_parity_bit_1_B3_0  =  ! G__this_uart_tx_parity/*prv*/         ; //  <B>(fo1+ld[1]) [F(0.0)<0>,B(8.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L218)[UART::parity_bit]
wire       DM_717               =  (CE_233) ? I_parity_bit_1_B3_0 : 1'h0   ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(8.0)<0>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L217,L218,L280)[UART::parity_bit]
wire       DM_720               =  DM_717 | CE_237                         ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L217,L218,L280)[UART::parity_bit]
wire       L_parity_bit_1_RET =  (CM_697) ? DM_720 : G__this_uart_tx_parity/*prv*/; //  <B>(L2.0+A2.0+fo1+ld[1:1:1]) [F(7.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L223)[UART::parity_bit]
wire       I_do_tx_B17_0        =  ! L_parity_bit_1_RET                    ; //  <B>(fo1+ld[1]) [F(7.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L280)[UART::do_tx]
wire       MA_827               =  (A_818) ? I_do_tx_B17_0 : 1'h0          ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       MAO_835              =  MA_824 | MA_827                         ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       DM_634               =  (CE_255) ? MAO_835 : 1'h0               ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       DM_640               =  DM_625 | DM_634                         ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
wire       I_do_tx_B15_3   =  G__this_uart_tx_parity/*prv*/ ^ I_do_tx_B11_2; // GRP.19 <B>(L2.0+A2.0+fo1+ld[1:1]) [F(2.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(xor:^)(rv32_io.cpp:L276)[UART::do_tx]
wire       MA_761               =  (A_749) ? I_do_tx_B15_3 : 1'h0          ; // GRP.19 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L276)[UART::do_tx]
wire       DM_641               =  (CE_255) ? MA_761 : 1'h0                ; // GRP.19 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L276)[UART::do_tx]
wire       AO_781               =  A_758 | A_772                           ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L0,L286)[UART::do_tx]
wire       CM_648               =  AO_781 & CE_255                         ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L511)(rv32_io.cpp:L0,L286)[UART::do_tx]
wire       CM_649               =  CM_614 | CM_648                         ; // GRP.28 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(37.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L0,L286)[UART::do_tx]
wire       N_651                =  CM_649 & CP_fsmUser_2_B4_F2             ; // GRP.28 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(38.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L511)(rv32_io.cpp:L0,L286)[UART::do_tx]
wire       CE_277               =  ! I_do_tx_B12_4                         ; // GRP.28 <B>(fo5+ld[1]) [F(4.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L269)[UART::do_tx]
wire[ 4:0] I_do_tx_B14_0    =  {1'b0,G__this_uart_tx_bit_pos/*prv*/} + 5'h1; // GRP.28 <B>(L2.0+C5.0+A15.0+fo2+ld[1]) [F(7.0,2.0)<0>,B(6.0,11.0)<0>] <1,16> [U5] P1 OP(add:+)(rv32_io.cpp:L274)[UART::do_tx]
wire[ 4:0] DM_716               =  (CE_277) ? I_do_tx_B14_0 : 5'h0         ; // GRP.28 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(8.0,5.0)<0>,B(4.0)<0>] <0,16> [U5] P1 OP(sel:?)(rv32_io.cpp:L269,L274)[UART::do_tx]
wire[ 4:0] MA_762               =  (A_749) ? DM_716 : 5'h0                 ; // GRP.28 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(9.0,6.0)<0>,B(3.0)<0>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L0,L286)[UART::do_tx]
wire[ 4:0] MA_770               =  (A_758) ? I_do_tx_B14_0 : 5'h0          ; // GRP.28 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(10.0)<0>,B(3.0)<0>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L0,L286)[UART::do_tx]
wire[ 4:0] MAO_778              =  MA_762 | MA_770                         ; // GRP.28 <B>(L1.0+A5.0+fo1+ld[1:1]) [F(11.0)<0>,B(2.0)<0>] <0,31> [U5] P1 OP(or:|)(./rv32_io.h:L511)(rv32_io.cpp:L0,L286)[UART::do_tx]
wire[ 4:0] DM_650               =  (CE_255) ? MAO_778 : 5'h0               ; // GRP.28 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(35.0)<0>,B(1.0)<0>] <0,31> [U5] P1 OP(sel:?)(./rv32_io.h:L511)(rv32_io.cpp:L0,L286)[UART::do_tx]
wire       CP_do_tx_B05_F2      =  CP_do_tx_B01_F2 & CE_255                ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L256)[UART::do_tx]
wire       CP_do_tx_B05_F1      =  CP_do_tx_B01_F2 & I_do_tx_B05_2         ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L256)[UART::do_tx]
wire       CM_653               =  CP_fsmUser_2_B1_F1 | CP_do_tx_B05_F1    ; // GRP.28 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L259,L264)[UART_AXI4L::fsmUser]
wire       CM_654               =  CP_do_tx_B05_F2 | CM_653                ; // GRP.28 <FB>(L1.0+A1.0+fo16+ld[1:1]) [F(37.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L259,L264)[UART_AXI4L::fsmUser]
wire[15:0] I_do_tx_B09_3        =  G__this_uart_tx_tick/*prv*/ + 16'h1     ; // GRP.28 <B>(L2.0+C16.0+A48.0+fo1+ld[1]) [F(18.0,2.0)<0>,B(4.0,20.0)<0>] <0,65535> [U16] P1 OP(add:+)(rv32_io.cpp:L259)[UART::do_tx]
wire[15:0] MA_815              =  (CP_do_tx_B01_F2) ? I_do_tx_B09_3 : 16'h0; // GRP.28 <FB>(L1.0+A16.0+fo1+ld[16:1]) [F(19.0,9.0)<0>,B(2.0)<0>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L259,L264)[UART_AXI4L::fsmUser]
wire[15:0] DM_652               =  (I_do_tx_B05_2) ? MA_815 : 16'h0        ; // GRP.28 <FB>(L1.0+A16.0+fo1+ld[16:1]) [F(35.0)<0>,B(1.0)<0>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L259,L264)[UART_AXI4L::fsmUser]
wire       CM_657               =  AO_741 & G_axi_wdat_m_valid             ; // GRP.28 <FB>(L1.0+A1.0+fo33+ld[1:1]) [F(3.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L547)(rv32_io.cpp:L618,L636)[UART_AXI4L::step]
wire       CE_130               =  ! I_devWrite_1_B06_1                    ; // GRP.28 <FB>(fo33+ld[1]) [F(7.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L635)[UART_AXI4L::devWrite]
wire       CM_536               =  CM_657 & CE_130                         ; // GRP.28 <FB>(L1.0+A1.0+fo32+ld[1:1]) [F(8.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L115,L295)[AXI4L::SlaveFSM::fsm]
wire[31:0] MAO_802              =  (CM_657) ? G_axi_wdat_m_data : 32'h0    ; // GRP.28 <FB>(L1.0+A32.0+fo1+ld[32:1]) [F(4.0)<0>,B(11.0)<1>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L115,L295)[AXI4L::SlaveFSM::fsm]
wire[31:0] DM_537               =  (CE_130) ? MAO_802 : 32'h0              ; // GRP.28 <FB>(L1.0+A32.0+fo1+ld[32:1]) [F(8.0)<0>,B(10.0)<1>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L115,L295)[AXI4L::SlaveFSM::fsm]
wire[31:0] G__this_writeData    =  (CM_536) ? DM_537 : 32'h0               ; // GRP.28 <FB>(L1.0+A32.0+fo30+ld[32:1]) [F(9.0)<0>,B(9.0)<1>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L115,L295)[AXI4L::SlaveFSM::fsm]
wire[15:0] I_fsmUser_2_B2_1     =  G__this_writeData[15:0]/*&16'hffff*/    ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(8.0)<1>] <0,65535> [U16] P1 OP(and:&)(rv32_io.cpp:L642)[UART_AXI4L::fsmUser]
wire       I_write_command_B01_1 =  I_fsmUser_2_B2_1[0]/*&1'h1*/           ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L451)[UART::write_command]
wire       I_write_command_B01_2 =  I_write_command_B01_1 & 1'h1           ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L452)[UART::write_command]
wire       I_set_pin_B1_03      =  ! G_uart_pin_rx                         ; //  <FB>(fo1+ld[1]) [F(0.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L661)[UART::set_pin]
wire       A_805                =  CP_fsmUser_2_B4_F2 & I_devWrite_1_B03_1 ; //  <F>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L307)[UART::do_tx]
wire       CP_do_tx_B24_F1      =  I_do_tx_B01_05 & A_805                  ; //  <F>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L307)[UART::do_tx]
wire[ 1:0] N_606             =  G__this_uart_tx_buf_wp/*prv*/[1:0]/*&2'h3*/; // (NL) [F(0.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L307)[UART::do_tx]
wire[ 7:0] I_do_tx_B25_0        =  G__this_writeData[7:0]/*&8'hff*/        ; //  <F>(NL) [F(9.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(and:&)(rv32_io.cpp:L307)[UART::do_tx]
wire[25:0] I_devWrite_1_B09_0   =  G__this_waddr/*prv*/[31:6]/*>>6*/       ; //  <B>(NL) [F(0.0)<0>,B(3.0)<0>] <0,67108863> [U26] P1 OP(shr:>>)(rv32_io.cpp:L636)[UART_AXI4L::devWrite]
wire       I_devWrite_1_B09_1   =  I_devWrite_1_B09_0[0]/*&1'h1*/          ; //  <B>(NL) [F(0.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L636)[UART_AXI4L::devWrite]
wire       MA_740       =  (G_axi_wdat_m_valid) ? I_devWrite_1_B09_1 : 1'h0; //  <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(1.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L547)(rv32_io.cpp:L618,L636)[UART_AXI4L::step]
wire       DM_655               =  (CP_fsmWrite_B01_F04) ? MA_740 : 1'h0   ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L547)(rv32_io.cpp:L618,L636)[UART_AXI4L::step]
wire       DM_656               =  (CP_fsmWrite_B01_F08) ? MA_740 : 1'h0   ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L547)(rv32_io.cpp:L618,L636)[UART_AXI4L::step]
wire       DM_658               =  DM_655 | DM_656                         ; //  <FB>(L1.0+A1.0+ld[1:1]) [F(3.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L547)(rv32_io.cpp:L618,L636)[UART_AXI4L::step]
wire       CP_write_command_B01_F2 =  I_fsmUser_2_B2_1[0] & CP_fsmUser_2_B1_F1; // GRP.28 <FB>(L1.0+A1.0+fo24+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L453)[UART::write_command]
wire[19:0] G_uart_baud_period_0 =  20'hf423f                               ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_1 =  20'h28b09                               ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_2 =  20'ha2c1                                ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_3 =  20'h5160                                ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_4 =  20'h28af                                ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_5 =  20'h1457                                ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_6 =  20'ha2b                                 ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_7 =  20'h515                                 ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_8 =  20'h363                                 ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_9 =  20'h1b1                                 ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_10 =  20'hd8                                 ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_11 =  20'h6b                                 ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_12 =  20'h63                                 ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_13 =  20'h55                                 ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_14 =  20'h35                                 ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[19:0] G_uart_baud_period_15 =  20'h1                                  ; // GRP.28 <B>(NL) [F(0.0)<0>,B(8.0)<1>] <1,999999> [U20] P1 OP(assign:=)[UART_AXI4L::step]
wire[14:0] I_write_command_B02_00 =  I_fsmUser_2_B2_1[15:1]/*>>1*/         ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(8.0)<1>] <0,32767> [U15] P1 OP(shr:>>)(rv32_io.cpp:L454)[UART::write_command]
wire[ 3:0] I_write_command_B02_01 =  I_write_command_B02_00[3:0]/*&4'hf*/  ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(8.0)<1>] <0,15> [U4] P1 OP(and:&)(rv32_io.cpp:L454)[UART::write_command]
wire[ 3:0] I_write_command_B02_05 =  I_write_command_B02_01                ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(8.0)<1>] <0,15> [U4] P1 OP(assign:=)[UART::write_command]
wire[ 3:0] N_661                =  I_write_command_B02_05/*&4'hf*/         ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(8.0)<1>] <0,15> [U4] P1 OP(and:&)(rv32_io.cpp:L459)[UART::write_command]
wire[19:0] AD_7 = _WIRE_ARRAY_20_16( N_661,
                                     G_uart_baud_period_0,
                                     G_uart_baud_period_1,
                                     G_uart_baud_period_2,
                                     G_uart_baud_period_3,
                                     G_uart_baud_period_4,
                                     G_uart_baud_period_5,
                                     G_uart_baud_period_6,
                                     G_uart_baud_period_7,
                                     G_uart_baud_period_8,
                                     G_uart_baud_period_9,
                                     G_uart_baud_period_10,
                                     G_uart_baud_period_11,
                                     G_uart_baud_period_12,
                                     G_uart_baud_period_13,
                                     G_uart_baud_period_14,
                                     G_uart_baud_period_15); // GRP.28 <FB>(L8.0+A600.0+fo1+ld[1:16]+S) [F(17.0)<0>,B(8.0)<1>] <00001,f423f> [U20] P1 OP(addr:[])(rv32_io.cpp:L459)[UART::write_command]
wire[15:0] I_write_command_B02_07 =  AD_7[15:0]/*&16'hffff*/               ; // GRP.28 <FB>(NL) [F(17.0)<0>,B(0.0)<1>] <0,65535> [U16] P1 OP(and:&)(rv32_io.cpp:L459)[UART::write_command]
wire[ 2:0] G_uart_data_length_0 =  3'h4                                    ; // GRP.28 <B>(NL) [F(0.0)<0>,B(4.0)<1>] <4,7> [U3] P1 OP(assign:=)[UART_AXI4L::step]
wire[ 2:0] G_uart_data_length_1 =  3'h5                                    ; // GRP.28 <B>(NL) [F(0.0)<0>,B(4.0)<1>] <4,7> [U3] P1 OP(assign:=)[UART_AXI4L::step]
wire[ 2:0] G_uart_data_length_2 =  3'h6                                    ; // GRP.28 <B>(NL) [F(0.0)<0>,B(4.0)<1>] <4,7> [U3] P1 OP(assign:=)[UART_AXI4L::step]
wire[ 2:0] G_uart_data_length_3 =  3'h7                                    ; // GRP.28 <B>(NL) [F(0.0)<0>,B(4.0)<1>] <4,7> [U3] P1 OP(assign:=)[UART_AXI4L::step]
wire[10:0] I_write_command_B02_02 =  I_fsmUser_2_B2_1[15:5]/*>>5*/         ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(5.0)<1>] <0,2047> [U11] P1 OP(shr:>>)(rv32_io.cpp:L455)[UART::write_command]
wire[ 1:0] I_write_command_B02_03 =  I_write_command_B02_02[1:0]/*&2'h3*/  ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(5.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L455)[UART::write_command]
wire[ 1:0] I_write_command_B02_09 =  I_write_command_B02_03                ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(5.0)<1>] <0,3> [U2] P1 OP(assign:=)[UART::write_command]
wire[ 1:0] N_662                =  I_write_command_B02_09/*&2'h3*/         ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(5.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L460)[UART::write_command]
wire[ 2:0] AD_8 = _WIRE_ARRAY_3_4( N_662,
                                   G_uart_data_length_0,
                                   G_uart_data_length_1,
                                   G_uart_data_length_2,
                                   G_uart_data_length_3); // GRP.28 <FB>(L4.0+A18.0+fo1+ld[1:4]+S) [F(13.0)<0>,B(4.0)<1>] <4,7> [U3] P1 OP(addr:[])(rv32_io.cpp:L460)[UART::write_command]
wire[ 2:0] I_write_command_B02_11 =  AD_8 & 3'h7                           ; // GRP.28 <FB>(NL) [F(13.0)<0>,B(0.0)<1>] <0,7> [U3] P1 OP(and:&)(rv32_io.cpp:L460)[UART::write_command]
wire[ 7:0] I_write_command_B02_13 =  I_fsmUser_2_B2_1[7:0]/*&8'hff*/       ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(and:&)(rv32_io.cpp:L461)[UART::write_command]
wire       I_write_command_B02_14 = !I_write_command_B02_13[7]         ; // GRP.28 <FB>(fo1+S) [F(9.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(gt:>)(rv32_io.cpp:L461)[UART::write_command]
wire       CE_156               =  ! I_write_command_B02_14                ; // GRP.28 <FB>(fo2+ld[1]) [F(9.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L461)[UART::write_command]
wire[ 1:0] G_uart_stop_length_0 =  2'h3                                    ; // GRP.28 <B>(NL) [F(0.0)<0>,B(5.0)<1>] <2,3> [U2] P1 OP(assign:=)[UART_AXI4L::step]
wire[ 1:0] G_uart_stop_length_1 =  2'h2                                    ; // GRP.28 <B>(NL) [F(0.0)<0>,B(5.0)<1>] <2,3> [U2] P1 OP(assign:=)[UART_AXI4L::step]
wire[ 1:0] G_uart_stop_length_2 =  2'h2                                    ; // GRP.28 <B>(NL) [F(0.0)<0>,B(5.0)<1>] <2,3> [U2] P1 OP(assign:=)[UART_AXI4L::step]
wire[ 1:0] G_uart_stop_length_3 =  2'h2                                    ; // GRP.28 <B>(NL) [F(0.0)<0>,B(5.0)<1>] <2,3> [U2] P1 OP(assign:=)[UART_AXI4L::step]
wire[ 1:0] AD_9 = _WIRE_ARRAY_2_4( N_662,
                                   G_uart_stop_length_0,
                                   G_uart_stop_length_1,
                                   G_uart_stop_length_2,
                                   G_uart_stop_length_3); // GRP.28 <FB>(L4.0+A12.0+fo1+ld[1:4]+S) [F(13.0)<0>,B(5.0)<1>] <2,3> [U2] P1 OP(addr:[])(rv32_io.cpp:L461)[UART::write_command]
wire[ 1:0] I_write_command_B03_1 =  AD_9 & 2'h3                            ; // GRP.28 <FB>(NL) [F(13.0)<0>,B(1.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L461)[UART::write_command]
wire[ 1:0] DM_678               =  (CE_156) ? I_write_command_B03_1 : 2'h1 ; // GRP.28 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(14.0)<0>,B(1.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L453,L461)[UART::write_command]
wire[ 8:0] I_write_command_B04_2 =  I_fsmUser_2_B2_1[8:0] & 9'h100         ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(5.0)<1>] <0,256> [U9] P1 OP(and:&)(rv32_io.cpp:L462)[UART::write_command]
wire       I_write_command_B04_3 =  I_write_command_B04_2 == 9'h0          ; // GRP.28 <FB>(L4.0+A8.0+fo3+ld[1]+S) [F(13.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L462)[UART::write_command]
wire[ 7:0] I_write_command_B02_04 =  I_fsmUser_2_B2_1[15:8]/*>>8*/         ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(shr:>>)(rv32_io.cpp:L457)[UART::write_command]
wire[ 7:0] I_write_command_B04_4 =  I_write_command_B02_04/*&8'hff*/       ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(and:&)(rv32_io.cpp:L462)[UART::write_command]
wire[ 2:0] I_write_command_B04_5 =  I_write_command_B04_4[2:0]/*&3'h7*/    ; // GRP.28 <FB>(NL) [F(9.0)<0>,B(1.0)<1>] <0,7> [U3] P1 OP(and:&)(rv32_io.cpp:L462)[UART::write_command]
wire[ 2:0] I_write_command_B04_6 =  (I_write_command_B04_3) ? 3'h0 : I_write_command_B04_5; // GRP.28 <FB>(L1.0+A3.0+fo1+ld[3:0:1]) [F(14.0)<0>,B(1.0)<1>] <0,7> [U3] P1 OP(sel:?)(rv32_io.cpp:L462)[UART::write_command]


  //// pipe-stage(1)  : printf...

  always @ (posedge clk) if (rst_n) begin
    if (CP_fsmUser_2_B1_F1)  $write("[%6d] ", G__this_cycle/*prv*/); //  <B*>(fo3) [F(7.0)<0>,B(0.0)<0>] <0,0> [U0] ZLB(64) P1(rv32_io.cpp:L465)[UART::write_command]
  end /// printfNodes


  //// pipe-stage(1) : pipe-registers...

  always @ (posedge clk or negedge rst_n) begin
  if (rst_n == 1'b0) begin
    _p1_CE_233                                 <= 0;
    _p1_CE_237                                 <= 0;
    _p1_CM_657                                 <= 0;
    _p1_CM_697                                 <= 0;
    _p1_CP_fsmUser_2_B1_F1                     <= 0;
    _p1_CP_fsmUser_2_B1_F2                     <= 0;
    _p1_CP_fsmUser_2_B4_F2                     <= 0;
    _p1_CP_write_command_B01_F2                <= 0;
    _p1_DM_658                                 <= 0;
    _p1_G_axi_raddr_m_valid                    <= 0;
    _p1_G_axi_rdat_m_ready                     <= 0;
    _p1_I_do_rx_B10_1                          <= 0;
    _p1_I_do_tx_B27_0                          <= 0;
    _p1_I_read_status_B1_09                    <= 0;
    _p1_I_write_command_B01_1                  <= 0;
    _p1_UART_AXI4L_step_pSetup                 <= 0;
    _p1_DFB_G__this_uart_activated/*prv*/      <= 0;
    _p1_DFB_G__this_uart_tx_buf_full/*prv*/    <= 0;
    _p1_I_do_rx_B18_2                          <= 0;
    _p1_DFB_G__this_uart_tx_state/*prv*/       <= 0;
    _p1_DFB_G__this_uart_bit_count_m1/*prv*/   <= 0;
    _p1_G_axi_raddr_m_len                      <= 0;
    _p1_I_do_rx_B11_1                          <= 0;
    _p1_DFB_G__this_uart_baud_period_m1/*prv*/ <= 0;
    _p1_G_axi_raddr_m_addr                     <= 0;
  end // (rst_n)
  else begin
    _p1_CE_233                                 <= CE_233                             ; /*   1 bits */
    _p1_CE_237                                 <= CE_237                             ; /*   1 bits */
    _p1_CM_657                                 <= CM_657                             ; /*   1 bits */
    _p1_CM_697                                 <= CM_697                             ; /*   1 bits */
    _p1_CP_fsmUser_2_B1_F1                     <= CP_fsmUser_2_B1_F1                 ; /*   1 bits */
    _p1_CP_fsmUser_2_B1_F2                     <= CP_fsmUser_2_B1_F2                 ; /*   1 bits */
    _p1_CP_fsmUser_2_B4_F2                     <= CP_fsmUser_2_B4_F2                 ; /*   1 bits */
    _p1_CP_write_command_B01_F2                <= CP_write_command_B01_F2            ; /*   1 bits */
    _p1_DM_658                                 <= DM_658                             ; /*   1 bits */
    _p1_G_axi_raddr_m_valid                    <= G_axi_raddr_m_valid                ; /*   1 bits */
    _p1_G_axi_rdat_m_ready                     <= G_axi_rdat_m_ready                 ; /*   1 bits */
    _p1_I_do_rx_B10_1                          <= I_do_rx_B10_1                      ; /*   1 bits */
    _p1_I_do_tx_B27_0                          <= I_do_tx_B27_0                      ; /*   1 bits */
    _p1_I_read_status_B1_09                    <= I_read_status_B1_09                ; /*   1 bits */
    _p1_I_write_command_B01_1                  <= I_write_command_B01_1              ; /*   1 bits */
    _p1_UART_AXI4L_step_pSetup                 <= ROOT_CP                            ; /*   0 bits */
    _p1_DFB_G__this_uart_activated/*prv*/      <= G__this_uart_activated/*prv*/      ; /*   1 bits */ /*feedback-wire*/
    _p1_DFB_G__this_uart_tx_buf_full/*prv*/    <= G__this_uart_tx_buf_full/*prv*/    ; /*   1 bits */ /*feedback-wire*/
    _p1_I_do_rx_B18_2                          <= I_do_rx_B18_2                      ; /*   2 bits */
    _p1_DFB_G__this_uart_tx_state/*prv*/       <= G__this_uart_tx_state/*prv*/       ; /*   2 bits */ /*feedback-wire*/
    _p1_DFB_G__this_uart_bit_count_m1/*prv*/   <= G__this_uart_bit_count_m1/*prv*/   ; /*   3 bits */ /*feedback-wire*/
    _p1_G_axi_raddr_m_len                      <= G_axi_raddr_m_len                  ; /*   4 bits */
    _p1_I_do_rx_B11_1                          <= I_do_rx_B11_1                      ; /*  15 bits */
    _p1_DFB_G__this_uart_baud_period_m1/*prv*/ <= G__this_uart_baud_period_m1/*prv*/ ; /*  16 bits */ /*feedback-wire*/
    _p1_G_axi_raddr_m_addr                     <= G_axi_raddr_m_addr                 ; /*  32 bits */
  end /*else*/
  end /*always @ ...*/


  //// pipe-stage(1)  : state-registers...

  always @ (posedge clk or negedge rst_n) begin
  if (rst_n == 1'b0) begin
    G__this_out_waddr_ready       <= 1'h0 ;
    G__this_out_wdat_ready        <= 1'h0 ;
    G__this_out_wres_resp         <= 1'h0 ;
    G__this_out_wres_valid        <= 1'h0 ;
    G__this_uart_cts              <= 1'h0 ;
    G__this_w_state               <= 2'h0 ;
    G__this_waddr                 <= 32'h0;
    G__this_waddr_end             <= 1'h0 ;
    G__this_wres_end              <= 1'h0 ;
    G__this_cycle                 <= 32'h0;
    G__this_burst_count_w         <= 4'h0 ;
    G__this_dbg_wcount            <= 32'h0;
    G__this_uart_rx_bit_n         <= 1'h0 ;
    G__this_uart_tx_buf_not_empty <= 1'h0 ;
    G__this_uart_tx_buf_full      <= 1'h0 ;
    G__this_uart_tx_buf_rp        <= 4'h0 ;
    G__this_uart_tx_buf_wp        <= 4'h0 ;
    G__this_uart_tx_buf_buf[0]    <= 8'h0 ;
    G__this_uart_tx_buf_buf[1]    <= 8'h0 ;
    G__this_uart_tx_buf_buf[2]    <= 8'h0 ;
    G__this_uart_tx_word          <= 8'h0 ;
    G__this_uart_tx_state         <= 2'h0 ;
    G__this_uart_tx_bit_n         <= 1'h0 ;
    G__this_uart_tx_parity        <= 1'h0 ;
    G__this_uart_tx_bit_pos       <= 4'h0 ;
    G__this_uart_tx_tick          <= 16'h0;
    G__this_uart_activated        <= 1'h0 ;
    G__this_uart_rx_bit_d_n       <= 1'h0 ;
    G__this_uart_baud_period_m1   <= 16'h0;
    G__this_uart_bit_count_m1     <= 3'h0 ;
    G__this_uart_stop_count       <= 2'h0 ;
    G__this_uart_parity_type      <= 3'h0 ;
  end /// (rst_n == 1'b0)
  else begin /*reg-assignments*/
    if (CM_482)  G__this_out_waddr_ready <= CP_fsmWrite_B02_F2; // GRP.28 <B>(ld[1:1]+S+@) [F(3.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L141)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_492)  G__this_out_wdat_ready  <= CM_489            ; // GRP.28 <B>(ld[1:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L169)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_497) begin
      G__this_out_wres_resp  <= DM_496; // GRP.28 <B>(ld[1:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,0> [U0] P1 OP(clk:@)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
      G__this_out_wres_valid <= CM_495; // GRP.28 <B>(ld[1:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
    end /// (CM_497)
    if (ROOT_CP) begin
      G__this_uart_cts        <= G_uart_pin_cts ; //  <B>(ld[1:1]+S+@) [F(0.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(clk:@)(rv32_io.cpp:L664)[UART::set_pin]
      G__this_cycle           <= I_fsm_0_0_B5_3 ; // GRP.12 <B>(ld[32:1]+S+@) [F(34.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(./rv32_io.h:L289)[AXI4L::SlaveFSM::fsm]
      G__this_uart_rx_bit_n   <= DM_579         ; //  <B>(ld[1:1]+S+@) [F(8.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L660)[UART_AXI4L::step]
      G__this_uart_rx_bit_d_n <= I_set_pin_B1_03; // GRP.13 <B>(ld[1:1]+S+@) [F(0.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(rv32_io.cpp:L661)[UART::set_pin]
    end /// (ROOT_CP)
    if (CM_513            )  G__this_w_state       <= DM_514            ; // GRP.28 <B>(ld[2:1]+S+@) [F(10.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(clk:@)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
    if (CP_fsmWrite_B02_F2)  G__this_waddr         <= G_axi_waddr_m_addr; // GRP.28 <B>(ld[32:1]+S+@) [F(2.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(rv32_io.cpp:L541)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_517            )  G__this_waddr_end     <= DM_518            ; // GRP.28 <B>(ld[1:1]+S+@) [F(4.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(rv32_io.cpp:L545,L557,L571)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_520            )  G__this_wres_end      <= CP_fsmWrite_B32_F2; // GRP.28 <B>(ld[1:1]+S+@) [F(10.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(rv32_io.cpp:L559,L574,L594)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_545            )  G__this_burst_count_w <= DM_546[3:0]       ; // GRP.28 <B>(ld[4:1]+S+@) [F(10.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_519            )  G__this_dbg_wcount    <= DM_551            ; // GRP.20(ld[32:1]+S+@) [F(35.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(rv32_io.cpp:L565,L585)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_599) begin
      G__this_uart_tx_buf_not_empty <= DM_598     ; // GRP.28 <B>(ld[1:1]+S+@) [F(47.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L68,L73)[UART_AXI4L::fsmUser]
      G__this_uart_tx_buf_full      <= DM_600     ; // GRP.28 <B>(ld[1:1]+S+@) [F(46.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L68,L74)[UART_AXI4L::fsmUser]
      G__this_uart_tx_buf_rp        <= DM_602[3:0]; // GRP.28 <B>(ld[4:1]+S+@) [F(41.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(./rv32_io.h:L68,L75)[UART_AXI4L::fsmUser]
      G__this_uart_tx_buf_wp        <= DM_604[3:0]; // GRP.28 <B>(ld[4:1]+S+@) [F(41.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(./rv32_io.h:L68,L76)[UART_AXI4L::fsmUser]
    end /// (CM_599)
    if (N_618) begin
      G__this_uart_tx_word   <= DM_617; // GRP.23 <B>(ld[8:1]+S+@) [F(38.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L511)(rv32_io.cpp:L277)[UART::do_tx]
      G__this_uart_tx_parity <= DM_641; // GRP.19 <B>(ld[1:1]+S+@) [F(38.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L511)(rv32_io.cpp:L276)[UART::do_tx]
    end /// (N_618)
    if (CM_628            )  G__this_uart_tx_state          <= DM_629               ; // GRP.28 <B>(ld[2:1]+S+@) [F(38.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(clk:@)(./rv32_io.h:L510,L511)(rv32_io.cpp:L260,L270,L281,L299)[UART_AXI4L::fsmUser]
    if (CM_639            )  G__this_uart_tx_bit_n          <= DM_640               ; // GRP.22 <B>(ld[1:1]+S+@) [F(37.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[UART_AXI4L::fsmUser]
    if (N_651             )  G__this_uart_tx_bit_pos        <= DM_650[3:0]          ; // GRP.28 <B>(ld[4:1]+S+@) [F(38.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(./rv32_io.h:L511)(rv32_io.cpp:L0,L286)[UART::do_tx]
    if (CM_654            )  G__this_uart_tx_tick           <= DM_652               ; // GRP.28 <B>(ld[16:1]+S+@) [F(37.0)<0>,B(0.0)<0>] <0,65535> [U16] P1 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L259,L264)[UART_AXI4L::fsmUser]
    if (CP_fsmUser_2_B1_F1)  G__this_uart_activated         <= I_write_command_B01_2; // GRP.28 <B>(ld[1:1]+S+@) [F(9.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(rv32_io.cpp:L452)[UART::write_command]
    if (CP_do_tx_B24_F1   )  G__this_uart_tx_buf_buf[N_606] <= I_do_tx_B25_0        ; // RA.GRP.1(S+@) [F(11.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(clk_array:[]@)(rv32_io.cpp:L307)
    if (CP_write_command_B01_F2) begin
      G__this_uart_baud_period_m1 <= I_write_command_B02_07; // GRP.28 <B>(fo2+ld[16:1]+S+@) [F(17.0)<0>,B(0.0)<1>] <0,65535> [U16] P1 OP(clk:@)(rv32_io.cpp:L459)[UART::write_command]
      G__this_uart_bit_count_m1   <= I_write_command_B02_11; // GRP.28 <B>(fo1+ld[3:1]+S+@) [F(13.0)<0>,B(0.0)<1>] <0,7> [U3] P1 OP(clk:@)(rv32_io.cpp:L460)[UART::write_command]
      G__this_uart_stop_count     <= DM_678                ; // GRP.28 <B>(fo2+ld[2:1]+S+@) [F(14.0)<0>,B(0.0)<1>] <0,3> [U2] P1 OP(clk:@)(rv32_io.cpp:L461)[UART::write_command]
      G__this_uart_parity_type    <= I_write_command_B04_6 ; // GRP.28 <B>(fo4+ld[3:1]+S+@) [F(14.0)<0>,B(0.0)<1>] <0,7> [U3] P1 OP(clk:@)(rv32_io.cpp:L462)[UART::write_command]
    end /// (CP_write_command_B01_F2)
  end /// reg-assignments
  end /// always @ ...

  /*probe assignments*/
  assign _prb_UART_AXI4L_step_pSetup = _p1_UART_AXI4L_step_pSetup;

endmodule // UART_AXI4L_step_no_mem

