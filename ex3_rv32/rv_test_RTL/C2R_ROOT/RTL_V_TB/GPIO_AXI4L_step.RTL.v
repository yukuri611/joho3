/////////////////////////////////////////////////////////////////
//////          Auto-generated by C2RTL+LLVM.11.0.0        //////
//////             C2RTL.ver.4.4.0 (10.02.2025)            //////
//////               All rights reserved                   //////
////// (C)2016-2025, New System Vision R&D Institute (NSV) //////
//////           CURRENT TIME 09:02:02 02.04.2025          //////
/////////////////////////////////////////////////////////////////


/*******************************************************
OPT_DisableStdErrOutput                           : 1
OPT_SilenceMsg                                    : 1
OPT_DisableTopCallerPointToLink                   : 0
OPT_DisableTopCallerArrayConversion               : 1
OPT_RangePrintMode                                : 0
OPT_RTLUsePipeFunction                            : 0
OPT_RTLUsePipeStackCompression                    : 0
OPT_RTLUsePipeWorkspace                           : 0
OPT_RTLMaxPipeFunctionSize                        : 0
OPT_RTLExpandUnmatchedBWLeafArray                 : 1
OPT_RTLDisableBaseClassName                       : 1
OPT_RTLShowLLVM_Inst                              : 0
OPT_RTLPipeRegAsyncReset                          : 1
OPT_RTL_FPGA_Mode                                 : 0
OPT_RTL_DualPortMemoryWrite1st                    : 0
OPT_RTL_RAM_INIT                                  : 0
OPT_RTL_DISABLE_VECTOR_DISPLAY                    : 1
OPT_RTL_DISABLE_VCD_DUMP                          : 1
OPT_DisableArrayLoadDecomposition                 : 1
OPT_RegArrayAddrPos                               : 1
OPT_DBG_ReduceArrayIndexLoad                      : 0
OPT_DBG_ComputeDist                               : 0
OPT_PrintRangeBits                                : 1
OPT_PrintExpandNodeAddr                           : 0
OPT_DBG_Range                                     : 0
OPT_DBG_RangeTruncate                             : 0
OPT_DBG_AssignPropagation                         : 1
OPT_ConstPrintMode                                : 1
OPT_InitializeWireRangeFromBitWidth               : 1
OPT_ForcePrintRangeUpdate                         : 0
OPT_PrintAllData                                  : 0
OPT_PrintAddDefNode                               : 0
OPT_DBG_Connectivity                              : 0
OPT_DBG_SplitDefUseChain                          : 0
OPT_DBG_IsReachable                               : 0
OPT_DBG_IsReachableInternal                       : 0
OPT_DBG_PipeDist                                  : 0
OPT_PrintPipeDist                                 : 0
OPT_DBG_PipeStageInitialize                       : 0
OPT_DBG_ShowLLVMTypeValue                         : 0
OPT_DBG_getContiguousData                         : 0
OPT_DBG_BWReachableNodes                          : 0
OPT_DBG_FWReachableNodes                          : 0
OPT_DBG_PipeDistUpdate                            : 0
OPT_HidePrintGateDist                             : 0
OPT_DefaultPipeStageCount                         : 8
OPT_OverridePipeStageCount                        : 0
OPT_PrintPipeStageCreate                          : 3
OPT_ShowRange                                     : 1
OPT_ShowGateCost                                  : 1
OPT_ShowBlockAddressInPathName                    : 0
OPT_ShowPathLevelsInPathName                      : 0
OPT_PrintCFGConnectivity                          : 1
OPT_ShowMiscFlag                                  : 0
OPT_SplitDefUseChainPending                       : 0
OPT_DBG_createIODistHeap                          : 0
OPT_EnableSelectionPropagation                    : 1
OPT_RelaxSelectionPropagationConstraint           : 1
OPT_DataLeafElementMaxCount                       : 100000
OPT_LoopUnrollMaxTripCount                        : 10000
OPT_EnableExternalRangeCap                        : 1
OPT_MergeMultipleArrayWrites                      : 1
OPT_MergeMultipleArrayReads                       : 1
OPT_PrintPipeGateStat                             : 0
OPT_PrintAreaProfile                              : 0
OPT_PrintCriticalPathInfo                         : 1
OPT_PrintControlPathsOnly                         : 0
OPT_PrintPhiBBCond                                : 0
OPT_EnableLLVMPatchOnShortProductSumBug           : 1
OPT_PrintInternalGlobals                          : 2
OPT_PrintCreateC2RType                            : 0
OPT_EnableCarryComputationMerge                   : 1
OPT_EnableAndOrRetiming                           : 1
OPT_RestrictAndOrRetimingOnTrees                  : 0
OPT_EnableOrRestructuring                         : 1
OPT_MultType                                      : 0
OPT_MultReduceRatio                               : 0
OPT_EnableXorTreeReduction                        : 1
OPT_MuxTreeReductionMinHeight                     : 0
OPT_PrintTreeHeightReductionDetail                : 0
OPT_EnableMuxQualifierReduction                   : 1
OPT_RestrictCreateMuxQualifier                    : 0
OPT_MuxQualifierNodeCountThreshold                : 5
OPT_EnableInternalNodeProbes                      : 0
OPT_PrintCFGConnection                            : 2
OPT_ClassMethodInstanceCount                      : 1
OPT_PIPE_OPT_UseRegCountAnnealing                 : 0
OPT_PIPE_OPT_AnnealingInitTempFactor              : 1000
OPT_PIPE_OPT_AnnealingCoolingTempFactor           : 990
OPT_PIPE_OPT_UseDistSlope                         : 0
OPT_PIPE_OPT_SelectMaxDist                        : 1
OPT_PIPE_OPT_SelectRandDistProb                   : 0
OPT_PIPE_OPT_RandSeed                             : 0
OPT_PIPE_OPT_distIterNodeCountRatio               : 0
OPT_PIPE_OPT_distIterCount                        : 500
OPT_PIPE_OPT_distRetryCount                       : 20
OPT_PIPE_OPT_regIterCount                         : 100
OPT_PIPE_OPT_regRetryCount                        : 30
OPT_PIPE_OPT_enableLateInsertion                  : 1
OPT_PIPE_OPT_assignDirectPathPipeStage            : 1
OPT_PIPE_OPT_minPipeDistCost                      : 5
OPT_PIPE_OPT_minimizePipeDistSquared              : 1
OPT_RTL_RAM_Exclusive_RW_NoChange                 : 1
OPT_PrintRangeTrucationException                  : 2
OPT_PrintSkipDependenceInputs                     : 0
OPT_SynchronizeDirectSignalPath                   : 1
OPT_DisableRelocateFeedbackPath                   : 0
OPT_DisableIncompatibleDirectPath                 : 0
OPT_SynchronizeStructMemberFeedbackWires          : 0
OPT_DefaultBitPreciseRTLC                         : 1
OPT_DisableRTLComments                            : 0
OPT_EnableVOBFS                                   : 0
OPT_DBG_NodeInst                                  : 0
OPT_Enable_printAllocaNodeMap                     : 0
OPT_Enable_printBlockInfo                         : 0
OPT_Enable_printReachablePaths                    : 0
OPT_RTL_NoTestVectorReturnValue                   : 0
OPT_RTL_ForceOutputPortOnTopArg                   : 1
OPT_DBG_GetCreateType                             : 0
OPT_DBG_INTERNAL_GLOBALS                          : 0
OPT_DBG_adjustDirectPathNodes                     : 0
OPT_EnableAndMaskReduction                        : 1
OPT_PrintCriticalPathMsg                          : 0
OPT_EnableLogFileOpenMsg                          : 0
OPT_MultDelayFactor                               : 0
OPT_CarryDelayFactor                              : 0
OPT_UseCheckSumTestVector                         : 0
OPT_TestVectorMaxSize                             : 0
OPT_EnableRTLCCollapsing                          : 0
OPT_EnableRTLCLogicalCollapsing                   : 0
OPT_EnablePrvStateCopy                            : 0
OPT_MaxFanoutRTLCCollapsing                       : 1
OPT_MaxAccFanoutRTLCCollapsing                    : 1
OPT_EnableRegArrayIndexWrite                      : 1
OPT_DBGPipeRelocate                               : 0
OPT_DisableMethodNameBinding                      : 0
OPT_EnableVarIndexAccessOnArrayStruct             : 1
OPT_DisableVarIndexAccessOnArrayStructWires       : 1
OPT_RTL_OmitPipeStageInfoInRTLLog                 : 0
OPT_TestBenchFineGrainLogThreshold                : 100000
OPT_EnableGateFanoutModel                         : 0
OPT_GateModel_EG_area                             : 1000
OPT_GateModel_EG_delay                            : 1000
OPT_GateModel_CG_area                             : 2000
OPT_GateModel_CG_delay                            : 2000
OPT_GateModel_FO_factor                           : 500
OPT_CriticalPathFOFactorSweepCount                : 10
OPT_CriticalPathSortType                          : 0
OPT_SlackHistogramSize                            : 20
OPT_EnableRedirectPipDistAlignedWireFeedbackUsers : 1
OPT_IgnoreUnassignedArrayReference                : 0
OPT_PatchRTLC_varIndexEnabled                     : 0
OPT_IgnoreUnmatchedBWLeafArray                    : 0
OPT_DisableDivDecompsition                        : 0
OPT_EnableUseSystemOutputSV                       : 1
OPT_EnablePipeRegBitWidthZLB                      : 1
OPT_EnablePipeRegBitWidthUsrTruncate              : 1
OPT_EnableInitRegWriter                           : 0
OPT_SplitRegFeedbackOnMaxStateDepth               : 0
OPT_EnableSplitRegFeedback                        : 0
OPT_DBGEnableSplitRegFeedback                     : 0
OPT_DBGStateGraphDepth                            : 0
OPT_EnableErrorOnUncleanSplitRegFeedback          : 0
OPT_DBGVarIndexGroup                              : 0
OPT_DBGMergeGroup                                 : 0
OPT_RTL_EnableMemWrapperAtSystemLevel             : 0
OPT_EnableMemoryByteAddress                       : 0
OPT_ExtractMemoryPortPaths                        : 0
OPT_ShowAllFWCombPaths                            : 0
OPT_ShowFWCombPathsWithWireFeedback               : 1
OPT_ShowPipeLockedNodes                           : 0
OPT_UseImplicitClockGating                        : 1
OPT_EnablePipeRegClockGating                      : 0
OPT_EnablePipeRegClockGatingMonitor               : 0
OPT_EnableMemoryClockGating                       : 0
OPT_DBGcomputePipeDistBW                          : 0
OPT_RTL_USE_MEMORY_INIT_FILE_MACRO                : 1
*******************************************************/
/*-------------------------------------------------------------------------------------------------------------
final pipe layout
P( 1): 303 nodes,   1567.0 gates,  179 pipeRegs (  107 pipes,  354 states, 1 FBs), IO(  0, 32),GIO( 5, 0),D(  35.0),pd( 0, 0)
------------------------------------------ explicit pipe boundary -------------------------------------------
P( 2):  84 nodes,    732.0 gates,    0 pipeRegs (    0 pipes,   72 states, 0 FBs), IO(  9,  0),GIO( 1, 3),D(  25.0),pd( 0, 1)
-------------------------------------------------------------------------------------------------------------
Total: 387 nodes,   2299.0 gates,  179 pipeRegs (  107 pipes,  426 states, 1 FBs), I(  9),O( 32),D(  60.0),maxD(  35.0 :   35.0)
Total    5770.0 gates (combined) :   2299.0 (comb-gates) +  534 (reg-bits) * 6.50 (gates/FF) + 0 memBits
-------------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------------
[TOTAL] 387 nodes, 5,770 totalGates, 2,299 combGates, 534 regBits, 0 memBits, 0 totalMemBits
    OP(+) : U32 x 4 (384 gates), S5 x 2 (30 gates), U4 x 1 (12 gates)
----- OP(+) : total 426 gates, 7 ops -----
    OP(<<) : U8 x 1 (6 gates)
----- OP(<<) : total 6 gates, 1 ops -----
    OP(>>) : U32 x 3 (960 gates)
----- OP(>>) : total 960 gates, 3 ops -----
    OP(&) : U8 x 1 (8 gates), U1 x 41 (41 gates)
----- OP(&) : total 49 gates, 42 ops -----
    OP(|) : U32 x 2 (36 gates), U8 x 2 (14 gates), U7 x 2 (14 gates), U5 x 1 (5 gates), S5 x 2 (8 gates)
    OP(|) : U2 x 4 (6 gates), U1 x 30 (30 gates)
----- OP(|) : total 113 gates, 43 ops -----
    OP(==) : U1 x 17 (48 gates)
----- OP(==) : total 48 gates, 17 ops -----
    OP(!=) : U1 x 1 (4 gates)
----- OP(!=) : total 4 gates, 1 ops -----
    OP(<) : U1 x 3 (13 gates)
----- OP(<) : total 13 gates, 3 ops -----
    OP(?) : U32 x 8 (288 gates), U8 x 1 (8 gates), U7 x 6 (42 gates), U5 x 3 (15 gates), S5 x 2 (10 gates)
    OP(?) : U4 x 6 (28 gates), U2 x 10 (22 gates), U1 x 7 (7 gates)
----- OP(?) : total 420 gates, 43 ops -----
    OP([]) : U32 x 1 (64 gates), U7 x 1 (196 gates)
----- OP([]) : total 260 gates, 2 ops -----
========= ALL : 2,299 gates =========
-------------------------------------------------------------------------------------------------------------*/

/*
+++++++++++++++++++++++++++++++ criticalPath info +++++++++++++++++++++++++++++++
foFactor = 0.000, maxD = 35.000, src = P1 : area(   64.0,   32.0),latency(    1.0,    1.0),carry(   32.0,    0.0),foSum(    2.000,   2.000,   2.000,    0),foAve(0.667,0.667,0.667,0.000),foStd(0.272,0.272,0.272),foNormL2(   1.414),nodeCount(     3)
====================== (src: P1) =======================
0 : P1 : dfw(  0.000) dbw( 35.000) slack(  0.000) (NL)[(nop)] G.prv._(*this).dbg_wcount 
1 : P1 : dfw( 34.000) dbw(  1.000) slack(  0.000) (L2.0+C32.0+A96.0+fo1+ld[1])[+] I.fsmWrite.B18.5 = G.prv._(*this).dbg_wcount + 1 (rv32_io.cpp:L565)     
2 : P1 : dfw( 35.000) dbw(  0.000) slack(  0.000) (L1.0+A32.0+fo1+ld[32:1])[?] DM.199 = (MAO.255) ? I.fsmWrite.B18.5 : 0 (rv32_io.cpp:L565,L585)
3 : P1 : dfw( 35.000) dbw(  0.000) slack(  0.000) (ld[32:1]+S+@)[@] G._(*this).dbg_wcount = G._(*this).writeFlag @ DM.199 (rv32_io.cpp:L565,L585)
CriticalPath : D(35.000), DC(35.000)
************** slack histogram (shsize = 20, totalDelayNodeCount = 210) ************** 
(  0) [  0.000 -   1.750] : area(  160.0,  128.0),latency(    1.0,    4.0),carry(  128.0,    0.0),foSum(    5.000,   5.000,   5.000,    0),foAve(0.556,0.556,0.556,0.000),foStd(0.166,0.166,0.166),foNormL2(   2.236),nodeCount(     9)
(  1) [  1.750 -   3.500] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  2) [  3.500 -   5.250] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  3) [  5.250 -   7.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  4) [  7.000 -   8.750] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  5) [  8.750 -  10.500] : area(   35.0,  262.0),latency(    5.0,   10.0),carry(    0.0,    0.0),foSum(   24.000,  11.701,   9.986,    0),foAve(2.667,1.300,1.110,0.000),foStd(1.466,0.329,0.198),foNormL2(  15.427),nodeCount(     9)
(  6) [ 10.500 -  12.250] : area(   32.0,    2.0),latency(   10.0,    1.0),carry(    0.0,    0.0),foSum(   22.000,  12.828,  11.187,    0),foAve(2.444,1.425,1.243,0.000),foStd(0.833,0.214,0.117),foNormL2(  10.488),nodeCount(     9)
(  7) [ 12.250 -  14.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  8) [ 14.000 -  15.750] : area(   15.0,    0.0),latency(    3.0,    0.0),carry(    8.0,    0.0),foSum(   25.000,   9.474,   6.993,    0),foAve(6.250,2.369,1.748,0.000),foStd(1.556,0.400,0.218),foNormL2(  13.964),nodeCount(     4)
(  9) [ 15.750 -  17.500] : area(    4.0,  196.0),latency(    0.0,    7.0),carry(    4.0,    0.0),foSum(   73.000,  10.482,   5.792,    0),foAve(24.333,3.494,1.931,0.000),foStd(17.866,2.010,0.966),foNormL2(  68.184),nodeCount(     3)
( 10) [ 17.500 -  19.250] : area(    0.0,  160.0),latency(    0.0,    5.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     1)
( 11) [ 19.250 -  21.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 12) [ 21.000 -  22.750] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    1.000,   1.000,   1.000,    0),foAve(1.000,1.000,1.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   1.000),nodeCount(     1)
( 13) [ 22.750 -  24.500] : area(   18.0,    3.0),latency(    4.0,    3.0),carry(    0.0,    0.0),foSum(   20.000,   9.657,   8.000,    0),foAve(2.857,1.380,1.143,0.000),foStd(1.236,0.369,0.241),foNormL2(  11.489),nodeCount(     7)
( 14) [ 24.500 -  26.250] : area(   79.0,   10.0),latency(   26.0,    2.0),carry(   15.0,    0.0),foSum(  150.000,  44.078,  33.761,    0),foAve(5.357,1.574,1.206,0.000),foStd(2.194,0.321,0.165),foNormL2(  67.661),nodeCount(    28)
( 15) [ 26.250 -  28.000] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
( 16) [ 28.000 -  29.750] : area(   58.0,    0.0),latency(   46.0,    0.0),carry(    0.0,    0.0),foSum(  220.000,  77.591,  61.336,    0),foAve(4.231,1.492,1.180,0.000),foStd(1.231,0.196,0.108),foNormL2(  70.908),nodeCount(    52)
( 17) [ 29.750 -  31.500] : area(  213.0,    0.0),latency(   48.0,    0.0),carry(    0.0,    0.0),foSum(  238.000,  84.092,  67.899,    0),foAve(4.175,1.475,1.191,0.000),foStd(1.443,0.187,0.096),foNormL2(  88.102),nodeCount(    57)
( 18) [ 31.500 -  33.250] : area(   98.0,   32.0),latency(   18.0,    1.0),carry(    0.0,    0.0),foSum(   52.000,  24.485,  21.695,    0),foAve(2.000,0.942,0.834,0.000),foStd(1.182,0.207,0.128),foNormL2(  32.373),nodeCount(    26)
( 19) [ 33.250 -  35.000] : area(    1.0,    0.0),latency(    1.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     4)
*/

/**********************************************************
GPIO_AXI4L_step : _ZN10GPIO_AXI4L4stepEPN5AXI4L2CHEP7GPIOPinP14DebugInterface         : root function
GPIO_AXI4L.0    : _ZN10GPIO_AXI4LC2Ev                                                 : root function
SlaveFSM.0      : _ZN5AXI4L8SlaveFSMC2Ev                                              : called @  ./rv32_io.h:L576 
update_refresh  : _ZN10GPIO_AXI4L14update_refreshEv                                   : called @  ./rv32_io.h:L685 
hex2seg7.0      : _ZN10GPIO_AXI4L8hex2seg7Eh                                          : called @  ./rv32_io.h:L647 
hex2seg7.1      : _ZN10GPIO_AXI4L8hex2seg7Eh                                          : called @  ./rv32_io.h:L650 
fsm_0.0         : _ZN5AXI4L8SlaveFSM3fsmEPNS_2CHE                                     : called @  ./rv32_io.h:L690 
preFsmUser      : _ZN5AXI4L8SlaveFSM10preFsmUserEv                                    : called @  ./rv32_io.h:L284 
fsmRead         : _ZN5AXI4L8SlaveFSM7fsmReadEPNS_2CHE                                 : called @  ./rv32_io.h:L285 
setSLRead_1     : _ZN5AXI4L2CH9setSLReadERNS0_4ADDR2SLERNS0_4RDAT2SLE                 : called @  rv32_io.cpp:L498 
set_0.0         : _ZN5AXI4L2CH4ADDR2SL3setERS2_                                       : called @  ./rv32_io.h:L196 
set_5.0         : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  ./rv32_io.h:L142 
set_13.0        : _ZN5AXI4L2CH4RDAT2SL3setERS2_                                       : called @  ./rv32_io.h:L196 
set_14.0        : _ZN5AXI4L2CH4RDAT2SL3setEjhhh                                       : called @  ./rv32_io.h:L156 
devReadSetup    : _ZN5AXI4L8SlaveFSM12devReadSetupEjj                                 : called @  rv32_io.cpp:L501 
set_5.1         : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  rv32_io.cpp:L506 
reset_2.0       : _ZN5AXI4L2CH4ADDR2SL5resetEv                                        : called @  rv32_io.cpp:L512 
set_5.2         : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  ./rv32_io.h:L143 
devRead_0       : _ZN10GPIO_AXI4L7devReadEPjjh                                        : called @  rv32_io.cpp:L515 
set_14.1        : _ZN5AXI4L2CH4RDAT2SL3setEjhhh                                       : called @  rv32_io.cpp:L516 
reset_5.0       : _ZN5AXI4L2CH4RDAT2SL5resetEv                                        : called @  rv32_io.cpp:L531 
set_14.2        : _ZN5AXI4L2CH4RDAT2SL3setEjhhh                                       : called @  ./rv32_io.h:L157 
fsmWrite        : _ZN5AXI4L8SlaveFSM8fsmWriteEPNS_2CHE                                : called @  ./rv32_io.h:L286 
devWriteSetup   : _ZN5AXI4L8SlaveFSM13devWriteSetupEj                                 : called @  rv32_io.cpp:L540 
set_5.3         : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  rv32_io.cpp:L544 
set_4.0         : _ZN5AXI4L2CH4WDAT2SL3setEh                                          : called @  rv32_io.cpp:L547 
reset_2.1       : _ZN5AXI4L2CH4ADDR2SL5resetEv                                        : called @  rv32_io.cpp:L556 
set_5.4         : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  ./rv32_io.h:L143 
devWrite_0      : _ZN10GPIO_AXI4L8devWriteEjjh                                        : called @  rv32_io.cpp:L558 
set_4.1         : _ZN5AXI4L2CH4WDAT2SL3setEh                                          : called @  rv32_io.cpp:L560 
set_3.0         : _ZN5AXI4L2CH4WRES2SL3setEhh                                         : called @  rv32_io.cpp:L562 
reset_2.2       : _ZN5AXI4L2CH4ADDR2SL5resetEv                                        : called @  rv32_io.cpp:L570 
set_5.5         : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  ./rv32_io.h:L143 
devWrite_0.1    : _ZN10GPIO_AXI4L8devWriteEjjh                                        : called @  rv32_io.cpp:L573 
reset_3.0       : _ZN5AXI4L2CH4WDAT2SL5resetEv                                        : called @  rv32_io.cpp:L576 
set_4.2         : _ZN5AXI4L2CH4WDAT2SL3setEh                                          : called @  ./rv32_io.h:L171 
set_3.1         : _ZN5AXI4L2CH4WRES2SL3setEhh                                         : called @  rv32_io.cpp:L578 
reset_3.1       : _ZN5AXI4L2CH4WDAT2SL5resetEv                                        : called @  rv32_io.cpp:L591 
set_4.3         : _ZN5AXI4L2CH4WDAT2SL3setEh                                          : called @  ./rv32_io.h:L171 
reset_4.0       : _ZN5AXI4L2CH4WRES2SL5resetEv                                        : called @  rv32_io.cpp:L596 
set_3.2         : _ZN5AXI4L2CH4WRES2SL3setEhh                                         : called @  ./rv32_io.h:L185 
setSLWrite_1    : _ZN5AXI4L2CH10setSLWriteERNS0_4ADDR2SLERNS0_4WDAT2SLERNS0_4WRES2SLE : called @  rv32_io.cpp:L602 
set_0.1         : _ZN5AXI4L2CH4ADDR2SL3setERS2_                                       : called @  ./rv32_io.h:L197 
set_5.6         : _ZN5AXI4L2CH4ADDR2SL3setEh                                          : called @  ./rv32_io.h:L142 
set_1.0         : _ZN5AXI4L2CH4WDAT2SL3setERS2_                                       : called @  ./rv32_io.h:L197 
set_4.4         : _ZN5AXI4L2CH4WDAT2SL3setEh                                          : called @  ./rv32_io.h:L170 
set_2.0         : _ZN5AXI4L2CH4WRES2SL3setERS2_                                       : called @  ./rv32_io.h:L197 
set_3.3         : _ZN5AXI4L2CH4WRES2SL3setEhh                                         : called @  ./rv32_io.h:L184 
fsmUser_1       : _ZN10GPIO_AXI4L7fsmUserEv                                           : called @  ./rv32_io.h:L287 
-----------------------------------------------------------
there are 27 unowned nodes...
(0:G.prv._(*this).burst_end_r)(1:G.prv._(*this).wres_end)(2:G.prv._(*this).burst_count_w)(3:G.prv._(*this).w_state)
(4:G.prv._(*this).waddr_end)(5:G.prv._(*this).cycle)(6:G.prv._(*this).clk)(7:G.prv._(*this).din)
(8:G.prv._(*this).waddr)(9:G.prv._(*this).digit_active)(10:G.prv._(*this).dbg_wcount)(11:G.prv._(*this).out.rdat.valid)
(12:G.prv._(*this).burst_count_r)(13:G.prv._(*this).r_state)(14:G.prv._(*this).raddr_end)(15:G.prv._(*this).out.rdat.data)
(16:G.prv._(*this).dbg_rcount)(17:G.prv._(*this).out.rdat.resp)(18:G.prv._(*this).out.raddr.ready)(19:G.prv._(*this).digit_idx)
(20:G.prv._(*this).out.rdat.last)(21:G.prv._(*this).an)(22:G.prv._(*this).digit_mode)(23:G.prv._(*this).dout)
(24:G.prv._(*this).dout_7seg)(25:G.prv._(*this).dout_led)(26:G.prv._(*this).digit)
(unownedNodeStats : 6.5 gates, 27 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 1 FBBits
(_GPIO_AXI4L_step : 5763.5 gates, 360 nodes) : 2299.0 comb-gates + 107 pipeBits + 426 stateBits + 0 FBBits
  (excl.sub-modules : 1520.5 gates, 142 nodes) : 526.0 comb-gates + 57 pipeBits + 96 stateBits + 0 FBBits
  (_1_GPIO_AXI4L : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_1_1_SlaveFSM : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_2_update_refresh : 1518.0 gates, 44 nodes) : 1141.0 comb-gates + 39 pipeBits + 19 stateBits + 0 FBBits
    (excl.sub-modules : 1467.0 gates, 31 nodes) : 1090.0 comb-gates + 39 pipeBits + 19 stateBits + 0 FBBits
    (_2_1_hex2seg7 : 26.0 gates, 7 nodes) : 26.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_2_2_hex2seg7 : 25.0 gates, 6 nodes) : 25.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_3_fsm_0 : 2725.0 gates, 174 nodes) : 632.0 comb-gates + 11 pipeBits + 311 stateBits + 0 FBBits
    (excl.sub-modules : 305.0 gates, 3 nodes) : 97.0 comb-gates + 0 pipeBits + 32 stateBits + 0 FBBits
    (_3_1_preFsmUser : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_3_2_fsmRead : 767.0 gates, 62 nodes) : 260.0 comb-gates + 4 pipeBits + 74 stateBits + 0 FBBits
      (excl.sub-modules : 767.0 gates, 56 nodes) : 260.0 comb-gates + 4 pipeBits + 74 stateBits + 0 FBBits
      (_3_2_1_setSLRead_1 : 0.0 gates, 5 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_2_1_1_set_0 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_2_1_1_1_set_5 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_2_1_2_set_13 : 0.0 gates, 4 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_2_1_2_1_set_14 : 0.0 gates, 4 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_2_devReadSetup : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_3_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_4_reset_2 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_2_4_1_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_5_devRead_0 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_6_set_14 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_2_7_reset_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_2_7_1_set_14 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_3_3_fsmWrite : 779.0 gates, 88 nodes) : 246.0 comb-gates + 7 pipeBits + 75 stateBits + 0 FBBits
      (excl.sub-modules : 746.5 gates, 80 nodes) : 246.0 comb-gates + 2 pipeBits + 75 stateBits + 0 FBBits
      (_3_3_1_devWriteSetup : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_2_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_3_set_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_4_reset_2 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_4_1_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_5_devWrite_0 : 32.5 gates, 3 nodes) : 0.0 comb-gates + 5 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 32.5 gates, 3 nodes) : 0.0 comb-gates + 5 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_6_set_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_7_set_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_8_reset_2 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_8_1_set_5 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_9_devWrite_0 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_10_reset_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_10_1_set_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_11_set_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_12_reset_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_12_1_set_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_13_reset_4 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_13_1_set_3 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_3_3_14_setSLWrite_1 : 0.0 gates, 4 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_14_1_set_0 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_3_14_1_1_set_5 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_14_2_set_1 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_3_14_2_1_set_4 : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
        (_3_3_14_3_set_2 : 0.0 gates, 2 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
          (_3_3_14_3_1_set_3 : 0.0 gates, 2 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_3_4_fsmUser_1 : 874.0 gates, 21 nodes) : 29.0 comb-gates + 0 pipeBits + 130 stateBits + 0 FBBits
*********************************************************
    _GPIO_AXI4L_step :    1520.5 gates(acc:  26.38%),     526.0 comb-gates +   57 pipeBits +  96 stateBits +   0 FBBits
   _2_update_refresh :    1467.0 gates(acc:  51.83%),    1090.0 comb-gates +   39 pipeBits +  19 stateBits +   0 FBBits
      _3_4_fsmUser_1 :     874.0 gates(acc:  67.00%),      29.0 comb-gates +    0 pipeBits + 130 stateBits +   0 FBBits
        _3_2_fsmRead :     767.0 gates(acc:  80.31%),     260.0 comb-gates +    4 pipeBits +  74 stateBits +   0 FBBits
       _3_3_fsmWrite :     746.5 gates(acc:  93.26%),     246.0 comb-gates +    2 pipeBits +  75 stateBits +   0 FBBits
**********************************************************/



module GPIO_AXI4L_step   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_axi_raddr_m_valid, G_axi_raddr_m_len, G_axi_waddr_m_addr, G_axi_waddr_m_valid, 
    G_axi_waddr_m_len, G_axi_rdat_m_ready, G_axi_wdat_m_data, G_axi_wdat_m_valid, 
    G_axi_wres_m_ready, G_gpio_pin_sw_in, G_dbg_data, G_dbg_rv_state, G_dbg_wfi, 

    /* outputs */
    G_axi_raddr_s_ready, G_axi_waddr_s_ready, G_axi_rdat_s_data, G_axi_rdat_s_resp, 
    G_axi_rdat_s_valid, G_axi_rdat_s_last, G_axi_wdat_s_ready, G_axi_wres_s_resp, 
    G_axi_wres_s_valid, G_gpio_pin_seg7_dout, G_gpio_pin_seg7_an, G_gpio_pin_led_out, 
    G_dbg_idx

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input        G_axi_raddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_raddr_m_len  ; /// <0,15> [U4]         ;
  input [31:0] G_axi_waddr_m_addr ; /// <0,4294967295> [U32];
  input        G_axi_waddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_waddr_m_len  ; /// <0,15> [U4]         ;
  input        G_axi_rdat_m_ready ; /// <0,1> [U1]          ;
  input [31:0] G_axi_wdat_m_data  ; /// <0,4294967295> [U32];
  input        G_axi_wdat_m_valid ; /// <0,1> [U1]          ;
  input        G_axi_wres_m_ready ; /// <0,1> [U1]          ;
  input [15:0] G_gpio_pin_sw_in   ; /// <0,65535> [U16]     ;
  input [31:0] G_dbg_data         ; /// <0,4294967295> [U32];
  input [ 3:0] G_dbg_rv_state     ; /// <0,15> [U4]         ;
  input        G_dbg_wfi          ; /// <0,1> [U1]          ;

  /*output ports*/
  output       G_axi_raddr_s_ready ; /// <0,1> [U1]          ;
  output       G_axi_waddr_s_ready ; /// <0,1> [U1]          ;
  output[31:0] G_axi_rdat_s_data   ; /// <0,4294967295> [U32];
  output       G_axi_rdat_s_resp   ; /// <0,0> [U0]          ;
  output       G_axi_rdat_s_valid  ; /// <0,1> [U1]          ;
  output       G_axi_rdat_s_last   ; /// <0,1> [U1]          ;
  output       G_axi_wdat_s_ready  ; /// <0,1> [U1]          ;
  output       G_axi_wres_s_resp   ; /// <0,0> [U0]          ;
  output       G_axi_wres_s_valid  ; /// <0,1> [U1]          ;
  output[ 7:0] G_gpio_pin_seg7_dout; /// <0,255> [U8]        ;
  output[ 7:0] G_gpio_pin_seg7_an  ; /// <0,255> [U8]        ;
  output[14:0] G_gpio_pin_led_out  ; /// <0,32767> [U15]     ;
  output[15:0] G_dbg_idx           ; /// <0,65535> [U16]     ;

  /*probe ports*/
  wire         _prb_GPIO_AXI4L_step_pSetup;

  GPIO_AXI4L_step_probed #(M_ID) M0   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_axi_raddr_m_valid, G_axi_raddr_m_len, G_axi_waddr_m_addr, G_axi_waddr_m_valid, 
    G_axi_waddr_m_len, G_axi_rdat_m_ready, G_axi_wdat_m_data, G_axi_wdat_m_valid, 
    G_axi_wres_m_ready, G_gpio_pin_sw_in, G_dbg_data, G_dbg_rv_state, G_dbg_wfi, 

    /* outputs */
    G_axi_raddr_s_ready, G_axi_waddr_s_ready, G_axi_rdat_s_data, G_axi_rdat_s_resp, 
    G_axi_rdat_s_valid, G_axi_rdat_s_last, G_axi_wdat_s_ready, G_axi_wres_s_resp, 
    G_axi_wres_s_valid, G_gpio_pin_seg7_dout, G_gpio_pin_seg7_an, G_gpio_pin_led_out, 
    G_dbg_idx, 

    /*probes*/
    _prb_GPIO_AXI4L_step_pSetup

  );

endmodule // GPIO_AXI4L_step

module GPIO_AXI4L_step_probed   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_axi_raddr_m_valid, G_axi_raddr_m_len, G_axi_waddr_m_addr, G_axi_waddr_m_valid, 
    G_axi_waddr_m_len, G_axi_rdat_m_ready, G_axi_wdat_m_data, G_axi_wdat_m_valid, 
    G_axi_wres_m_ready, G_gpio_pin_sw_in, G_dbg_data, G_dbg_rv_state, G_dbg_wfi, 

    /* outputs */
    G_axi_raddr_s_ready, G_axi_waddr_s_ready, G_axi_rdat_s_data, G_axi_rdat_s_resp, 
    G_axi_rdat_s_valid, G_axi_rdat_s_last, G_axi_wdat_s_ready, G_axi_wres_s_resp, 
    G_axi_wres_s_valid, G_gpio_pin_seg7_dout, G_gpio_pin_seg7_an, G_gpio_pin_led_out, 
    G_dbg_idx, 

    /*probes*/
    _prb_GPIO_AXI4L_step_pSetup

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input        G_axi_raddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_raddr_m_len  ; /// <0,15> [U4]         ;
  input [31:0] G_axi_waddr_m_addr ; /// <0,4294967295> [U32];
  input        G_axi_waddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_waddr_m_len  ; /// <0,15> [U4]         ;
  input        G_axi_rdat_m_ready ; /// <0,1> [U1]          ;
  input [31:0] G_axi_wdat_m_data  ; /// <0,4294967295> [U32];
  input        G_axi_wdat_m_valid ; /// <0,1> [U1]          ;
  input        G_axi_wres_m_ready ; /// <0,1> [U1]          ;
  input [15:0] G_gpio_pin_sw_in   ; /// <0,65535> [U16]     ;
  input [31:0] G_dbg_data         ; /// <0,4294967295> [U32];
  input [ 3:0] G_dbg_rv_state     ; /// <0,15> [U4]         ;
  input        G_dbg_wfi          ; /// <0,1> [U1]          ;

  /*output ports*/
  output       G_axi_raddr_s_ready ; /// <0,1> [U1]          ;
  output       G_axi_waddr_s_ready ; /// <0,1> [U1]          ;
  output[31:0] G_axi_rdat_s_data   ; /// <0,4294967295> [U32];
  output       G_axi_rdat_s_resp   ; /// <0,0> [U0]          ;
  output       G_axi_rdat_s_valid  ; /// <0,1> [U1]          ;
  output       G_axi_rdat_s_last   ; /// <0,1> [U1]          ;
  output       G_axi_wdat_s_ready  ; /// <0,1> [U1]          ;
  output       G_axi_wres_s_resp   ; /// <0,0> [U0]          ;
  output       G_axi_wres_s_valid  ; /// <0,1> [U1]          ;
  output[ 7:0] G_gpio_pin_seg7_dout; /// <0,255> [U8]        ;
  output[ 7:0] G_gpio_pin_seg7_an  ; /// <0,255> [U8]        ;
  output[14:0] G_gpio_pin_led_out  ; /// <0,32767> [U15]     ;
  output[15:0] G_dbg_idx           ; /// <0,65535> [U16]     ;

  /*probe ports*/
  output       _prb_GPIO_AXI4L_step_pSetup;

  GPIO_AXI4L_step_no_mem #(M_ID) M0   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_axi_raddr_m_valid, G_axi_raddr_m_len, G_axi_waddr_m_addr, G_axi_waddr_m_valid, 
    G_axi_waddr_m_len, G_axi_rdat_m_ready, G_axi_wdat_m_data, G_axi_wdat_m_valid, 
    G_axi_wres_m_ready, G_gpio_pin_sw_in, G_dbg_data, G_dbg_rv_state, G_dbg_wfi, 

    /* outputs */
    G_axi_raddr_s_ready, G_axi_waddr_s_ready, G_axi_rdat_s_data, G_axi_rdat_s_resp, 
    G_axi_rdat_s_valid, G_axi_rdat_s_last, G_axi_wdat_s_ready, G_axi_wres_s_resp, 
    G_axi_wres_s_valid, G_gpio_pin_seg7_dout, G_gpio_pin_seg7_an, G_gpio_pin_led_out, 
    G_dbg_idx, 

    /*probes*/
    _prb_GPIO_AXI4L_step_pSetup

  );

endmodule // GPIO_AXI4L_step_probed

/// skipped memWrapper...

module GPIO_AXI4L_step_no_mem   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_axi_raddr_m_valid, G_axi_raddr_m_len, G_axi_waddr_m_addr, G_axi_waddr_m_valid, 
    G_axi_waddr_m_len, G_axi_rdat_m_ready, G_axi_wdat_m_data, G_axi_wdat_m_valid, 
    G_axi_wres_m_ready, G_gpio_pin_sw_in, G_dbg_data, G_dbg_rv_state, G_dbg_wfi, 

    /* outputs */
    G_axi_raddr_s_ready, G_axi_waddr_s_ready, G_axi_rdat_s_data, G_axi_rdat_s_resp, 
    G_axi_rdat_s_valid, G_axi_rdat_s_last, G_axi_wdat_s_ready, G_axi_wres_s_resp, 
    G_axi_wres_s_valid, G_gpio_pin_seg7_dout, G_gpio_pin_seg7_an, G_gpio_pin_led_out, 
    G_dbg_idx, 

    /*probes*/
    _prb_GPIO_AXI4L_step_pSetup

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input        G_axi_raddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_raddr_m_len  ; /// <0,15> [U4]         ;
  input [31:0] G_axi_waddr_m_addr ; /// <0,4294967295> [U32];
  input        G_axi_waddr_m_valid; /// <0,1> [U1]          ;
  input [ 3:0] G_axi_waddr_m_len  ; /// <0,15> [U4]         ;
  input        G_axi_rdat_m_ready ; /// <0,1> [U1]          ;
  input [31:0] G_axi_wdat_m_data  ; /// <0,4294967295> [U32];
  input        G_axi_wdat_m_valid ; /// <0,1> [U1]          ;
  input        G_axi_wres_m_ready ; /// <0,1> [U1]          ;
  input [15:0] G_gpio_pin_sw_in   ; /// <0,65535> [U16]     ;
  input [31:0] G_dbg_data         ; /// <0,4294967295> [U32];
  input [ 3:0] G_dbg_rv_state     ; /// <0,15> [U4]         ;
  input        G_dbg_wfi          ; /// <0,1> [U1]          ;

  /*output ports*/
  output       G_axi_raddr_s_ready ; /// <0,1> [U1]          ;
  output       G_axi_waddr_s_ready ; /// <0,1> [U1]          ;
  output[31:0] G_axi_rdat_s_data   ; /// <0,4294967295> [U32];
  output       G_axi_rdat_s_resp   ; /// <0,0> [U0]          ;
  output       G_axi_rdat_s_valid  ; /// <0,1> [U1]          ;
  output       G_axi_rdat_s_last   ; /// <0,1> [U1]          ;
  output       G_axi_wdat_s_ready  ; /// <0,1> [U1]          ;
  output       G_axi_wres_s_resp   ; /// <0,0> [U0]          ;
  output       G_axi_wres_s_valid  ; /// <0,1> [U1]          ;
  output[ 7:0] G_gpio_pin_seg7_dout; /// <0,255> [U8]        ;
  output[ 7:0] G_gpio_pin_seg7_an  ; /// <0,255> [U8]        ;
  output[14:0] G_gpio_pin_led_out  ; /// <0,32767> [U15]     ;
  output[15:0] G_dbg_idx           ; /// <0,65535> [U16]     ;
  reg   [15:0] G_dbg_idx           ;

  /*probe ports*/
  output       _prb_GPIO_AXI4L_step_pSetup;

  wire      ROOT_CP = 1'b1; /// root control path (always active)

  reg       G__this_out_raddr_ready;
  reg       G__this_out_waddr_ready;
  reg[31:0] G__this_out_rdat_data;
  reg       G__this_out_rdat_resp, G__this_out_rdat_valid, G__this_out_rdat_last;
  reg       G__this_out_wdat_ready;
  reg       G__this_out_wres_resp, G__this_out_wres_valid;
  reg[ 1:0] G__this_r_state, G__this_w_state;
  reg[31:0] G__this_waddr;
  reg       G__this_raddr_end, G__this_waddr_end, G__this_wres_end;
  reg[31:0] G__this_cycle;
  reg[ 3:0] G__this_burst_count_r, G__this_burst_count_w;
  reg[31:0] G__this_dbg_rcount, G__this_dbg_wcount;
  reg[31:0] G__this_dout, G__this_dbg_dout;
  reg[31:0] G__this_dout_7seg[0:1];
  reg[31:0] G__this_dout_led;
  reg[15:0] G__this_din;
  reg[31:0] G__this_clk;
  reg[ 2:0] G__this_digit_idx;
  reg[ 7:0] G__this_an, G__this_digit;
  reg       G__this_digit_active, G__this_digit_mode;
  reg       _p1_CM_143, _p1_CP_GPIO_AXI4L_step_B08_F1, _p1_CP_fsmRead_B02_F4, 
    _p1_CP_fsmRead_B12_F2_B14_F2, _p1_CP_fsmWrite_B13_F2, _p1_CP_fsmWrite_B22_F2, 
    _p1_G_dbg_wfi, _p1_GPIO_AXI4L_step_pSetup, _p1_QC_231;
  reg[ 3:0] _p1_I_update_refresh_B3_5;
  reg[ 4:0] _p1_I_devWrite_0_B1_1, _p1_I_update_refresh_B3_1;
  reg[ 7:0] _p1_I_GPIO_AXI4L_step_B02_1;
  reg[14:0] _p1_I_GPIO_AXI4L_step_B05_2;
  reg[31:0] _p1_G_axi_wdat_m_data, _p1_I_update_refresh_B2_6;
  reg       _p1_DFB_G__this_burst_end_r/*prv*/, _p1_DFB_G__this_digit_mode/*prv*/, 
    _p1_DFB_G__this_out_raddr_ready/*prv*/, _p1_DFB_G__this_out_rdat_last/*prv*/, 
    _p1_DFB_G__this_out_rdat_resp/*prv*/, _p1_DFB_G__this_out_rdat_valid/*prv*/;
  reg[31:0] _p1_DFB_G__this_clk/*prv*/;


function[ 6:0] _WIRE_ARRAY_7_15;
  input[ 3:0] idx0;
  input[ 6:0] din00,din01,din02,din03,din04,din05,din06,din07;
  input[ 6:0] din08,din09,din10,din11,din12,din13,din14;
  case(idx0)
    4'd0  : _WIRE_ARRAY_7_15 = din00;
    4'd1  : _WIRE_ARRAY_7_15 = din01;
    4'd2  : _WIRE_ARRAY_7_15 = din02;
    4'd3  : _WIRE_ARRAY_7_15 = din03;
    4'd4  : _WIRE_ARRAY_7_15 = din04;
    4'd5  : _WIRE_ARRAY_7_15 = din05;
    4'd6  : _WIRE_ARRAY_7_15 = din06;
    4'd7  : _WIRE_ARRAY_7_15 = din07;
    4'd8  : _WIRE_ARRAY_7_15 = din08;
    4'd9  : _WIRE_ARRAY_7_15 = din09;
    4'd10 : _WIRE_ARRAY_7_15 = din10;
    4'd11 : _WIRE_ARRAY_7_15 = din11;
    4'd12 : _WIRE_ARRAY_7_15 = din12;
    4'd13 : _WIRE_ARRAY_7_15 = din13;
    4'd14 : _WIRE_ARRAY_7_15 = din14;
    default : _WIRE_ARRAY_7_15 = 7'hx;
  endcase
endfunction /*_WIRE_ARRAY_7_15*/



  //// pipe-stage(2) : combinational-logic...

assign     G_axi_raddr_s_ready  =  _p1_DFB_G__this_out_raddr_ready/*prv*/  ; // DSO.GRP.5 <B>(comb-Out) (NL) [F(0.0)<0>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L141)[AXI4L::CH::ADDR::SL::set]
assign     G_axi_rdat_s_last    =  _p1_DFB_G__this_out_rdat_last/*prv*/    ; // DSO.GRP.5 <B>(comb-Out) (NL) [F(0.0)<0>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CH::RDAT::SL::set]
assign     G_axi_rdat_s_resp    =  _p1_DFB_G__this_out_rdat_resp/*prv*/    ; // DSO.GRP.5 <B>(comb-Out) (NL) [F(0.0)<0>,B(0.0)<0>] <0,0> [U0] P2 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CH::RDAT::SL::set]
assign     G_axi_rdat_s_valid   =  _p1_DFB_G__this_out_rdat_valid/*prv*/   ; // DSO.GRP.5 <B>(comb-Out) (NL) [F(0.0)<0>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CH::RDAT::SL::set]
assign     G_axi_waddr_s_ready  =  G__this_out_waddr_ready                 ; // DSO.GRP.5 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L141)[AXI4L::CH::ADDR::SL::set]
assign     G_axi_wdat_s_ready   =  G__this_out_wdat_ready                  ; // DSO.GRP.5 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L169)[AXI4L::CH::WDAT::SL::set]
assign     G_axi_wres_s_resp    =  G__this_out_wres_resp                   ; // DSO.GRP.5 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,0> [U0] P2 OP(assign:=)(./rv32_io.h:L183)[AXI4L::CH::WRES::SL::set]
assign     G_axi_wres_s_valid   =  G__this_out_wres_valid                  ; // DSO.GRP.5 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(./rv32_io.h:L183)[AXI4L::CH::WRES::SL::set]
assign     G_gpio_pin_seg7_an   =  _p1_I_GPIO_AXI4L_step_B02_1             ; // DSO.GRP.6 <B>(comb-Out) (NL) [F(0.0)<0>,B(0.0)<0>] <0,255> [U8] P2 OP(assign:=)(./rv32_io.h:L663)[GPIO_AXI4L::step]
wire[ 7:0] I_GPIO_AXI4L_step_B02_4 =  G__this_digit/*prv*/ ^ 8'hff         ; //  <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,255> [U8] P2 OP(xor:^)(./rv32_io.h:L664)[GPIO_AXI4L::step]
assign     G_gpio_pin_seg7_dout =  I_GPIO_AXI4L_step_B02_4                 ; // DSO.GRP.6 <B>(comb-Out) (NL) [F(0.0)<1>,B(0.0)<0>] <0,255> [U8] P2 OP(assign:=)(./rv32_io.h:L664)[GPIO_AXI4L::step]
assign     G_gpio_pin_led_out   =  _p1_I_GPIO_AXI4L_step_B05_2             ; // DSO.GRP.6 <B>(comb-Out) (NL) [F(0.0)<0>,B(0.0)<0>] <0,32767> [U15] P2 OP(assign:=)(./rv32_io.h:L665)[GPIO_AXI4L::step]
assign     G_axi_rdat_s_data    =  G__this_out_rdat_data/*prv*/            ; // DSO.GRP.5 <B>(comb-Out) (NL) [F(0.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P2 OP(assign:=)(./rv32_io.h:L155)[AXI4L::CH::RDAT::SL::set]
wire[31:0] L_fsmRead_alc3 =  (_p1_QC_231) ? {16'b0,G__this_din/*prv*/} : G__this_out_rdat_data/*prv*/; // GRP.17 <FB>(L2.0+A64.0+fo1+ld[32:1:1]) [F(2.0)<0>,B(3.0)<0>] <0,4294967295> [U32] P2 OP(sel:?)(./rv32_io.h:L595)(rv32_io.cpp:L514)[AXI4L::SlaveFSM::fsmRead]
wire[31:0] DM_142 =  (_p1_CP_fsmRead_B12_F2_B14_F2) ? L_fsmRead_alc3 : 32'h0; // GRP.17 <FB>(L1.0+A32.0+fo1+ld[32:1]) [F(3.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P2 OP(sel:?)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
wire[ 6:0] G_HIDDEN_GLOBAL_48_0 =  7'h3f                                   ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_1 =  7'h6                                    ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_2 =  7'h5b                                   ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_3 =  7'h4f                                   ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_4 =  7'h66                                   ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_5 =  7'h6d                                   ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_6 =  7'h7d                                   ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_7 =  7'h27                                   ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_8 =  7'h7f                                   ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_9 =  7'h6f                                   ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_10 =  7'h77                                  ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_11 =  7'h7c                                  ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_12 =  7'h39                                  ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_13 =  7'h5e                                  ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] G_HIDDEN_GLOBAL_48_14 =  7'h79                                  ; // WA.GRP.3 <B>(NL) [F(0.0)<0>,B(13.0)<0>] <6,127> [U7] P2 OP(assign:=)[GPIO_AXI4L::step]
wire[ 6:0] I_GPIO_AXI4L_step_B06_1 =  G_gpio_pin_sw_in[6:0] & 7'h40        ; //  <FB>(NL) [F(0.0)<0>,B(24.0)<0>] <0,64> [U7] P2 OP(and:&)(./rv32_io.h:L669)[GPIO_AXI4L::step]
wire       I_GPIO_AXI4L_step_B06_2 =  I_GPIO_AXI4L_step_B06_1 == 7'h0      ; //  <FB>(L3.0+A6.0+fo2+ld[1]+S) [F(3.0)<0>,B(24.0)<0>] <0,1> [U1] P2 OP(eq:==)(./rv32_io.h:L669)[GPIO_AXI4L::step]
wire[ 1:0] I_GPIO_AXI4L_step_B06_3 =  (I_GPIO_AXI4L_step_B06_2) ? 2'h2 : {1'b0,_p1_DFB_G__this_digit_mode/*prv*/}; //  <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(4.0)<0>,B(21.0)<0>] <0,2> [U2] P2 OP(sel:?)(./rv32_io.h:L669)[GPIO_AXI4L::step]
wire[ 1:0] G__this_cur_digit_mode =  (_p1_G_dbg_wfi) ? I_GPIO_AXI4L_step_B06_3 : {1'b0,_p1_DFB_G__this_digit_mode/*prv*/}; //  <FB>(L2.0+A4.0+fo2+ld[2:1:1]) [F(6.0)<0>,B(20.0)<0>] <0,2> [U2] P2 OP(sel:?)(./rv32_io.h:L667,L669)[GPIO_AXI4L::step]
wire[ 1:0] N_002                =  G__this_cur_digit_mode & 2'h3           ; //  <FB>(NL) [F(6.0)<0>,B(18.0)<0>] <0,2> [U2] P2 OP(and:&)(./rv32_io.h:L646)[GPIO_AXI4L::update_refresh]
wire       CE_022               =  N_002 == 2'h0                           ; //  <FB>(L1.0+A1.0+fo9+ld[1]+S) [F(7.0)<0>,B(18.0)<0>] <0,1> [U1] P2 OP(eq:==)(./rv32_io.h:L646)[GPIO_AXI4L::update_refresh]
wire       CP_update_refresh_B1_F2 =  _p1_CP_GPIO_AXI4L_step_B08_F1 & CE_022; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(17.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L646)[GPIO_AXI4L::update_refresh]
wire[ 4:0] sub_I_hex2seg7_0_B1_0 = {1'b0,_p1_I_update_refresh_B3_5} - 5'hf; // _p1_I_update_refresh_B3_5 < 5'hf
wire       I_hex2seg7_0_B1_0    = (sub_I_hex2seg7_0_B1_0[4])              ; //  <B>(L1.0+C4.0+A4.0+fo9+ld[1]+S) [F(5.0)<0>,B(17.0,21.0)<0>] <0,1> [U1] P2 OP(lt:<)(./rv32_io.h:L625)[GPIO_AXI4L::hex2seg7]
wire       CP_hex2seg7_0_B1_F1 =  CP_update_refresh_B1_F2 & I_hex2seg7_0_B1_0; //  <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(9.0)<0>,B(16.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L625)[GPIO_AXI4L::hex2seg7]
wire[ 3:0] N_210                =  _p1_I_update_refresh_B3_5/*&4'hf*/      ; //  <B>(NL) [F(0.0)<0>,B(15.0)<0>] <0,15> [U4] P2 OP(and:&)(./rv32_io.h:L625)[GPIO_AXI4L::hex2seg7]
wire[31:0] I_update_refresh_B5_3 =  G__this_dbg_dout >> {27'b0,_p1_I_update_refresh_B3_1}; //  <B>(L10.0+A320.0+fo2+ld[5:32]+S) [F(10.0)<1>,B(25.0)<0>] <0,4294967295> [U32] P2 OP(shr:>>)(./rv32_io.h:L650)[GPIO_AXI4L::update_refresh]
wire[ 7:0] I_update_refresh_B5_4 =  I_update_refresh_B5_3[7:0]/*&8'hff*/   ; //  <B>(NL) [F(10.0)<1>,B(15.0)<0>] <0,255> [U8] P2 OP(and:&)(./rv32_io.h:L650)[GPIO_AXI4L::update_refresh]
wire[ 3:0] I_update_refresh_B5_5 =  I_update_refresh_B5_4[3:0]/*&4'hf*/    ; //  <B>(NL) [F(10.0)<1>,B(15.0)<0>] <0,15> [U4] P2 OP(and:&)(./rv32_io.h:L650)[GPIO_AXI4L::update_refresh]
wire[ 3:0] N_211                =  I_update_refresh_B5_5/*&4'hf*/          ; //  <B>(NL) [F(10.0)<1>,B(15.0)<0>] <0,15> [U4] P2 OP(and:&)(./rv32_io.h:L625)[GPIO_AXI4L::hex2seg7]
wire[ 3:0] N_213                =  (CP_hex2seg7_0_B1_F1) ? N_210 : N_211   ; //  <FB>(L2.0+A8.0+fo15+ld[4:1:1]) [F(12.0)<1>,B(15.0)<0>] <0,15> [U4] P2 OP(sel:?)(./rv32_io.h:L625)[GPIO_AXI4L::step]
wire[ 6:0] AD_9 = _WIRE_ARRAY_7_15( N_213,
                                    G_HIDDEN_GLOBAL_48_0,
                                    G_HIDDEN_GLOBAL_48_1,
                                    G_HIDDEN_GLOBAL_48_2,
                                    G_HIDDEN_GLOBAL_48_3,
                                    G_HIDDEN_GLOBAL_48_4,
                                    G_HIDDEN_GLOBAL_48_5,
                                    G_HIDDEN_GLOBAL_48_6,
                                    G_HIDDEN_GLOBAL_48_7,
                                    G_HIDDEN_GLOBAL_48_8,
                                    G_HIDDEN_GLOBAL_48_9,
                                    G_HIDDEN_GLOBAL_48_10,
                                    G_HIDDEN_GLOBAL_48_11,
                                    G_HIDDEN_GLOBAL_48_12,
                                    G_HIDDEN_GLOBAL_48_13,
                                    G_HIDDEN_GLOBAL_48_14); // WA.GRP.3 <FB>(L8.0+A196.0+fo2+ld[1:15]+S) [F(20.0)<1>,B(13.0)<0>] <06,7f> [U7] P2 OP(addr:[])(./rv32_io.h:L625)[GPIO_AXI4L::step]
wire[ 6:0] DM_217               =  (I_hex2seg7_0_B1_0) ? AD_9 : 7'h0       ; //  <FB>(L1.0+A7.0+fo1+ld[7:1]) [F(21.0)<1>,B(4.0)<0>] <0,127> [U7] P2 OP(sel:?)(./rv32_io.h:L625,L643)[GPIO_AXI4L::hex2seg7]
wire       CE_027               =  ! I_hex2seg7_0_B1_0                     ; //  <B>(fo7+ld[1]) [F(5.0)<0>,B(4.0)<0>] <0,1> [U1] P2 OP(not:!)(./rv32_io.h:L625)[GPIO_AXI4L::hex2seg7]
wire[ 6:0] DM_218               =  (CE_027) ? 7'h71 : 7'h0                 ; //  <B>(L1.0+A7.0+fo1+ld[7:0:1]) [F(6.0)<0>,B(4.0)<0>] <0,113> [U7] P2 OP(sel:?)(./rv32_io.h:L625,L643)[GPIO_AXI4L::hex2seg7]
wire[ 6:0] L_hex2seg7_0_RET     =  DM_217 | DM_218                         ; //  <FB>(L1.0+A7.0+fo1+ld[1:1]) [F(22.0)<1>,B(3.0)<0>] <0,127> [U7] P2 OP(or:|)(./rv32_io.h:L625,L643)[GPIO_AXI4L::hex2seg7]
wire[ 6:0] DM_227               =  (CE_022) ? L_hex2seg7_0_RET : 7'h0      ; //  <FB>(L1.0+A7.0+fo1+ld[7:1]) [F(23.0)<1>,B(2.0)<0>] <0,127> [U7] P2 OP(sel:?)(./rv32_io.h:L647,L650,L655)[GPIO_AXI4L::update_refresh]
wire       CE_024               =  N_002 == 2'h2                           ; //  <FB>(L1.0+A1.0+fo8+ld[1]+S) [F(7.0)<0>,B(6.0)<0>] <0,1> [U1] P2 OP(eq:==)(./rv32_io.h:L646)[GPIO_AXI4L::update_refresh]
wire[ 4:0] sub_I_hex2seg7_1_B1_0 = {1'b0,I_update_refresh_B5_5} - 5'hf    ; // I_update_refresh_B5_5 < 5'hf
wire       I_hex2seg7_1_B1_0    = (sub_I_hex2seg7_1_B1_0[4])              ; //  <B>(L1.0+C4.0+A4.0+fo8+ld[1]+S) [F(15.0)<1>,B(6.0,10.0)<0>] <0,1> [U1] P2 OP(lt:<)(./rv32_io.h:L625)[GPIO_AXI4L::hex2seg7]
wire[ 6:0] DM_220               =  (I_hex2seg7_1_B1_0) ? AD_9 : 7'h0       ; //  <FB>(L1.0+A7.0+fo1+ld[7:1]) [F(21.0)<1>,B(5.0)<0>] <0,127> [U7] P2 OP(sel:?)(./rv32_io.h:L625,L643)[GPIO_AXI4L::hex2seg7]
wire       CE_030               =  ! I_hex2seg7_1_B1_0                     ; //  <B>(fo7+ld[1]) [F(15.0)<1>,B(5.0)<0>] <0,1> [U1] P2 OP(not:!)(./rv32_io.h:L625)[GPIO_AXI4L::hex2seg7]
wire[ 6:0] DM_221               =  (CE_030) ? 7'h71 : 7'h0                 ; //  <B>(L1.0+A7.0+fo1+ld[7:0:1]) [F(16.0)<1>,B(5.0)<0>] <0,113> [U7] P2 OP(sel:?)(./rv32_io.h:L625,L643)[GPIO_AXI4L::hex2seg7]
wire[ 6:0] L_hex2seg7_1_RET     =  DM_220 | DM_221                         ; //  <FB>(L1.0+A7.0+fo1+ld[1:1]) [F(22.0)<1>,B(4.0)<0>] <0,127> [U7] P2 OP(or:|)(./rv32_io.h:L625,L643)[GPIO_AXI4L::hex2seg7]
wire[ 6:0] DM_225               =  (CE_024) ? L_hex2seg7_1_RET : 7'h0      ; //  <FB>(L1.0+A7.0+fo1+ld[7:1]) [F(23.0)<1>,B(3.0)<0>] <0,127> [U7] P2 OP(sel:?)(./rv32_io.h:L647,L650,L655)[GPIO_AXI4L::update_refresh]
wire       QC_223               =  CE_022 | CE_024                         ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(5.0)<0>] <0,1> [U1] P2 OP(or:|)(./rv32_io.h:L647,L650,L655)[GPIO_AXI4L::update_refresh]
wire       QC_224               =  ! QC_223                                ; //  <FB>(fo8+ld[1]) [F(8.0)<0>,B(4.0)<0>] <0,1> [U1] P2 OP(not:!)(./rv32_io.h:L647,L650,L655)[GPIO_AXI4L::update_refresh]
wire[ 7:0] MA_269               =  (QC_224) ? 8'hff : 8'h0                 ; //  <FB>(L1.0+A8.0+fo1+ld[8:0:1]) [F(9.0)<0>,B(4.0)<0>] <0,255> [U8] P2 OP(sel:?)(./rv32_io.h:L647,L650,L655)[GPIO_AXI4L::update_refresh]
wire[ 7:0] DM_226               =  _p1_I_update_refresh_B2_6[7:0] & MA_269 ; //  <FB>(L1.0+A8.0+fo1+ld[1:1]) [F(10.0)<0>,B(3.0)<0>] <0,255> [U8] P2 OP(and:&)(./rv32_io.h:L647,L650,L655)[GPIO_AXI4L::update_refresh]
wire[ 7:0] DM_228               =  {1'b0,DM_225} | DM_226                  ; //  <FB>(L1.0+A7.0+fo1+ld[1:1]) [F(24.0)<1>,B(2.0)<0>] <0,255> [U8] P2 OP(or:|)(./rv32_io.h:L647,L650,L655)[GPIO_AXI4L::update_refresh]
wire[ 7:0] DM_229               =  {1'b0,DM_227} | DM_228                  ; //  <FB>(L1.0+A7.0+fo1+ld[1:1]) [F(25.0)<1>,B(1.0)<0>] <0,255> [U8] P2 OP(or:|)(./rv32_io.h:L647,L650,L655)[GPIO_AXI4L::update_refresh]
wire       CP_fsmRead_B11_F1_B12_F1 =  _p1_CP_fsmRead_B02_F4 & _p1_QC_231  ; //  <FB>(L1.0+A1.0+ld[1:1]) [F(1.0)<0>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(rv32_io.cpp:L515,L515)[AXI4L::SlaveFSM::fsmRead]
wire[15:0] N_234                =  G__this_din/*prv*/                      ; // (comb-Out/FFSink) (NL) [F(0.0)<0>,B(0.0)<0>] <0,65535> [U16] P2 OP(assign:=)(./rv32_io.h:L671)[GPIO_AXI4L::step]


  //// pipe-stage(2)  : printf...

  always @ (posedge clk) if (rst_n) begin
    if (CP_fsmRead_B11_F1_B12_F1)  /// format string conversion : ("[%6d] gpio.din = (%08x)\n") --> ("[%6d] gpio.din = (%08h)\n")
$write("[%6d] gpio.din = (%08h)\n", _p1_DFB_G__this_clk/*prv*/, G__this_din/*prv*/); //  <B*>(fo2) [F(1.0)<0>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(./rv32_io.h:L597)[GPIO_AXI4L::devRead]
    if (_p1_CP_fsmWrite_B13_F2  )  /// format string conversion : ("[%6d] gpio.dout[%d] = (%08x)\n") --> ("[%6d] gpio.dout[%d] = (%08h)\n")
$write("[%6d] gpio.dout[%d] = (%08h)\n", _p1_DFB_G__this_clk/*prv*/, _p1_I_devWrite_0_B1_1, _p1_G_axi_wdat_m_data); //  <B*> [F(1.0)<0>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(./rv32_io.h:L606)[GPIO_AXI4L::devWrite]
    if (_p1_CP_fsmWrite_B22_F2  )  /// format string conversion : ("[%6d] gpio.dout[%d] = (%08x)\n") --> ("[%6d] gpio.dout[%d] = (%08h)\n")
$write("[%6d] gpio.dout[%d] = (%08h)\n", _p1_DFB_G__this_clk/*prv*/, _p1_I_devWrite_0_B1_1, _p1_G_axi_wdat_m_data); //  <B*> [F(1.0)<0>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(./rv32_io.h:L606)[GPIO_AXI4L::devWrite]
  end /// printfNodes


  //// pipe-stage(2)  : state-registers...

  always @ (posedge clk or negedge rst_n) begin
  if (rst_n == 1'b0) begin
    G__this_out_rdat_data <= 32'h0;
    G__this_din           <= 16'h0;
    G__this_digit         <= 8'h0 ;
    G_dbg_idx             <= 16'h0;
  end /// (rst_n == 1'b0)
  else begin /*reg-assignments*/
    if (_p1_CM_143)  G__this_out_rdat_data <= DM_142; // GRP.17 <B>(ld[32:1]+S+@) [F(3.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P2 OP(clk:@)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
    if (ROOT_CP) begin
      G__this_din <= G_gpio_pin_sw_in                            ; // GRP.7 <B>(ld[16:1]+S+@) [F(0.0)<0>,B(0.0)<0>] <0,65535> [U16] P2 OP(clk:@)(./rv32_io.h:L691)[GPIO_AXI4L::step]
      G_dbg_idx   <= (_p1_GPIO_AXI4L_step_pSetup) ? N_234 : 16'h0; // (comb-Out) (ld[16:1]+S+@) [F(0.0)<0>,B(0.0)<0>] <0,65535> [U16] P2 OP(clk:@)(./rv32_io.h:L671)[GPIO_AXI4L::step]
    end /// (ROOT_CP)
    if (_p1_CP_GPIO_AXI4L_step_B08_F1)  G__this_digit <= DM_229; // GRP.23 <B>(ld[8:1]+S+@) [F(25.0)<1>,B(0.0)<0>] <0,255> [U8] P2 OP(clk:@)(./rv32_io.h:L0)[GPIO_AXI4L::update_refresh]
  end /// reg-assignments
  end /// always @ ...


  //// pipe-stage(1) : combinational-logic...

wire[ 1:0] N_008                =  G__this_w_state/*prv*/ & 2'h3           ; // GRP.24 <B>(NL) [F(0.0)<0>,B(10.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L538)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B01_F02  =  N_008 == 2'h0                           ; // GRP.24 <B>(L1.0+A1.0+fo5+ld[1]+S) [F(1.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L538)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B02_F2  =  CP_fsmWrite_B01_F02 & G_axi_waddr_m_valid; // GRP.24 <FB>(L1.0+A1.0+fo41+ld[1:1]) [F(2.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L540)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B01_F08  =  N_008 == 2'h2                           ; // GRP.24 <B>(L1.0+A1.0+fo40+ld[1]+S) [F(1.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L538)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B01_F04  =  N_008 == 2'h1                           ; // GRP.24 <B>(L1.0+A1.0+fo43+ld[1]+S) [F(1.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L538)[AXI4L::SlaveFSM::fsmWrite]
wire       AO_244              =  CP_fsmWrite_B01_F08 | CP_fsmWrite_B01_F04; // GRP.24 <B>(L1.0+A1.0+fo4+ld[1:1]) [F(2.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L545,L557,L571)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_141               =  CP_fsmWrite_B02_F2 | AO_244             ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L141)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B06_2     =  G_axi_waddr_m_len == 4'h0               ; // GRP.24 <FB>(L2.0+A3.0+fo3+ld[1]+S) [F(2.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L546)[AXI4L::SlaveFSM::fsmWrite]
wire       CE_083               =  ! I_fsmWrite_B06_2                      ; // GRP.24 <FB>(fo4+ld[1]) [F(2.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L546)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B06_F2   =  CP_fsmWrite_B02_F2 & CE_083             ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L546)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B13_F2   =  CP_fsmWrite_B01_F04 & G_axi_wdat_m_valid; // GRP.24 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(2.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L558)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_148               =  CP_fsmWrite_B06_F2 | CP_fsmWrite_B13_F2 ; // GRP.24 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(4.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L169)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B22_F2   =  CP_fsmWrite_B01_F08 & G_axi_wdat_m_valid; // GRP.24 <FB>(L1.0+A1.0+fo5+ld[1:1]) [F(2.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L572)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B25_2     =  G__this_burst_count_w/*prv*/ == 4'h0    ; // GRP.24 <B>(L2.0+A3.0+fo5+ld[1]+S) [F(2.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L575)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B25_F1   =  CP_fsmWrite_B22_F2 & I_fsmWrite_B25_2   ; // GRP.24 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(3.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L575)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B01_F10  =  N_008 == 2'h3                           ; // GRP.24 <B>(L1.0+A1.0+fo4+ld[1]+S) [F(1.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L538)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_150               =  CP_fsmWrite_B25_F1 | CP_fsmWrite_B01_F10; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L169)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_151               =  CM_148 | CM_150                         ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L169)[AXI4L::SlaveFSM::fsmWrite]
wire       A_248          =  G__this_waddr_end/*prv*/ & CP_fsmWrite_B01_F10; // GRP.24 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B02_1     =  ! G_axi_waddr_m_valid                   ; // GRP.24 <FB>(fo4+ld[1]) [F(0.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L540)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B35_1     =  ! G__this_waddr_end/*prv*/              ; // GRP.24 <B>(fo1+ld[1]) [F(0.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       A_249                =  I_fsmWrite_B35_1 & CP_fsmWrite_B01_F10  ; // GRP.24 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       A_259                =  I_fsmWrite_B02_1 & A_249                ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       AO_261               =  A_248 | A_259                           ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L595,L595)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B34_1 =  (G_axi_wres_m_ready) ? 1'h1 : G__this_wres_end/*prv*/; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:0:1]) [F(1.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmWrite_B34_3     =  I_fsmWrite_B34_1 | G_axi_wres_m_ready   ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L595)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B35_F2_B36_F1 =  AO_261 & I_fsmWrite_B34_3          ; // GRP.24 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L595,L595)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_154               =  CP_fsmWrite_B13_F2 | CP_fsmWrite_B25_F1 ; // GRP.24 <FB>(L1.0+A1.0+fo3+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_156               =  CP_fsmWrite_B35_F2_B36_F1 | CM_154      ; // GRP.24 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(6.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       MA_242               =  (G_axi_wdat_m_valid) ? 1'h0 : 1'h0      ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1]) [F(1.0)<0>,B(3.0)<1>] <0,0> [U0] P1 OP(sel:?)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       DM_152               =  (CP_fsmWrite_B01_F04) ? MA_242 : 1'h0   ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(2.0)<1>] <0,0> [U0] P1 OP(sel:?)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       MA_257               =  (CP_fsmWrite_B22_F2) ? 1'h0 : 1'h0      ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1]) [F(3.0)<0>,B(3.0)<1>] <0,0> [U0] P1 OP(sel:?)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       DM_153               =  (I_fsmWrite_B25_2) ? MA_257 : 1'h0      ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(2.0)<1>] <0,0> [U0] P1 OP(sel:?)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       DM_155               =  DM_152 | DM_153                         ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(1.0)<1>] <0,0> [U0] P1 OP(or:|)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
wire       I_fsmRead_B15_2      =  G__this_burst_count_r/*prv*/ == 4'h0    ; // GRP.25 <B>(L2.0+A3.0+fo3+ld[1]+S) [F(2.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L516)[AXI4L::SlaveFSM::fsmRead]
wire[ 1:0] N_004                =  G__this_r_state/*prv*/ & 2'h3           ; // GRP.25 <B>(NL) [F(0.0)<0>,B(5.0)<0>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L499)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B02_F4    =  N_004 == 2'h1                           ; // GRP.25 <B>(L1.0+A1.0+fo6+ld[1]+S) [F(1.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L499)[AXI4L::SlaveFSM::fsmRead]
wire       A_263                =  I_fsmRead_B15_2 & CP_fsmRead_B02_F4     ; // GRP.25 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(3.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L520)[AXI4L::SlaveFSM::fsmRead]
wire       A_237 =  _p1_DFB_G__this_burst_end_r/*prv*/ & G__this_out_rdat_valid/*prv*/; // GRP.25 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L515)[AXI4L::SlaveFSM::fsmRead]
wire       I_fsmRead_B11_3      =  ! G__this_out_rdat_valid/*prv*/         ; // GRP.25 <B>(fo1+ld[1]) [F(0.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L515)[AXI4L::SlaveFSM::fsmRead]
wire       I_fsmRead_B12_1      =  ! _p1_DFB_G__this_burst_end_r/*prv*/    ; //  <FB+*>(fo1+ld[1]) [F(0.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L515)[AXI4L::SlaveFSM::fsmRead]
wire       QC_230        =  G__this_out_rdat_valid/*prv*/ & I_fsmRead_B12_1; // GRP.25 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L595)(rv32_io.cpp:L514)[AXI4L::SlaveFSM::fsmRead]
wire       QC_231               =  I_fsmRead_B11_3 | QC_230                ; // GRP.25 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L595)(rv32_io.cpp:L514)[AXI4L::SlaveFSM::fsmRead]
wire       AO_260               =  A_237 | QC_231                          ; // GRP.25 <FB>(L1.0+A1.0+fo7+ld[1:1]) [F(3.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L515,L515)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B16_F1    =  A_263 & AO_260                          ; //  <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(4.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L520)[AXI4L::SlaveFSM::fsmRead]
wire       G__this_burst_end_r  =  CP_fsmRead_B16_F1                       ; //  <B-*>(NL) [F(4.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(assign:=)(rv32_io.cpp:L505,L522)[AXI4L::SlaveFSM::fsmRead]
wire[ 7:0] I_GPIO_AXI4L_step_B02_1 =  G__this_an/*prv*/ ^ 8'hff            ; //  <B>(NL) [F(0.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(xor:^)(./rv32_io.h:L663)[GPIO_AXI4L::step]
wire[ 3:0] DM_214               =  (G_dbg_wfi) ? G_dbg_rv_state : 4'h0     ; //  <B>(L1.0+A4.0+fo1+ld[4:1]) [F(1.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L665)[GPIO_AXI4L::step]
wire       CP_GPIO_AXI4L_step_B02_F1 =  ! G_dbg_wfi                        ; //  <B>(fo32+ld[1]) [F(0.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L665)[GPIO_AXI4L::step]
wire[31:0] DM_215 =  (CP_GPIO_AXI4L_step_B02_F1) ? G__this_dout_led/*prv*/ : 32'h0; //  <B>(L1.0+A32.0+fo1+ld[32:1]) [F(1.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L665)[GPIO_AXI4L::step]
wire[31:0] DM_216               =  {28'b0,DM_214} | DM_215                 ; //  <B>(L1.0+A4.0+ld[1:1]) [F(2.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(or:|)(./rv32_io.h:L665)[GPIO_AXI4L::step]
wire[15:0] I_GPIO_AXI4L_step_B05_1 =  DM_216[15:0]/*&16'hffff*/            ; //  <B>(NL) [F(2.0)<0>,B(0.0)<0>] <0,65535> [U16] P1 OP(and:&)(./rv32_io.h:L665)[GPIO_AXI4L::step]
wire[14:0] I_GPIO_AXI4L_step_B05_2 =  I_GPIO_AXI4L_step_B05_1[14:0]/*&15'h7fff*/; //  <B>(NL) [F(2.0)<0>,B(0.0)<0>] <0,32767> [U15] P1 OP(and:&)(./rv32_io.h:L665)[GPIO_AXI4L::step]
wire       CP_fsmRead_B02_F2    =  N_004 == 2'h0                           ; // GRP.25 <B>(L1.0+A1.0+fo5+ld[1]+S) [F(1.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L499)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B03_F2    =  CP_fsmRead_B02_F2 & G_axi_raddr_m_valid ; // GRP.25 <FB>(L1.0+A1.0+fo6+ld[1:1]) [F(2.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L501)[AXI4L::SlaveFSM::fsmRead]
wire       CM_139               =  CP_fsmRead_B03_F2 | CP_fsmRead_B02_F4   ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L141)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B12_F2_B14_F2 =  AO_260 & CP_fsmRead_B02_F4          ; // GRP.25 <FB>(L1.0+A1.0+fo34+ld[1:1]) [F(4.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L515,L515)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B02_F8    =  N_004 == 2'h2                           ; // GRP.25 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L499)[AXI4L::SlaveFSM::fsmRead]
wire       CM_143           =  CP_fsmRead_B12_F2_B14_F2 | CP_fsmRead_B02_F8; // GRP.25 <FB>(L1.0+A1.0+fo3+ld[1:1]) [F(5.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
wire       MA_262           =  (CP_fsmRead_B02_F4) ? I_fsmRead_B15_2 : 1'h0; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
wire       DM_146               =  (AO_260) ? MA_262 : 1'h0                ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
wire       A_265                =  G_axi_rdat_m_ready & A_263              ; // GRP.25 <FB>(L1.0+A1.0+fo3+ld[1:1]) [F(4.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L521)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B17_F2    =  A_265 & AO_260                          ; // GRP.25 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L521)[AXI4L::SlaveFSM::fsmRead]
wire       I_fsmRead_B03_1      =  ! G_axi_raddr_m_valid                   ; //  <FB>(fo2+ld[1]) [F(0.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L501)[AXI4L::SlaveFSM::fsmRead]
wire       I_fsmRead_B23_1      =  ! G__this_raddr_end/*prv*/              ; // GRP.25 <B>(fo1+ld[1]) [F(0.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L532)[AXI4L::SlaveFSM::fsmRead]
wire       A_238                =  I_fsmRead_B03_1 & I_fsmRead_B23_1       ; // GRP.25 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L532)[AXI4L::SlaveFSM::fsmRead]
wire       AO_251               =  G__this_raddr_end/*prv*/ | A_238        ; // GRP.25 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L532,L532)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B23_F2_B24_F1 =  CP_fsmRead_B02_F8 & AO_251          ; // GRP.25 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L532,L532)[AXI4L::SlaveFSM::fsmRead]
wire       O_270            =  CP_fsmRead_B23_F2_B24_F1 | CP_fsmRead_B03_F2; // GRP.25 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
wire       CM_163               =  CP_fsmRead_B17_F2 | O_270               ; // GRP.25 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(6.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
wire[ 1:0] MA_267               =  (AO_260) ? 2'h2 : 2'h0                  ; // GRP.25 <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(4.0)<0>,B(3.0)<0>] <0,2> [U2] P1 OP(sel:?)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
wire[ 1:0] DM_160               =  (A_265) ? MA_267 : 2'h0                 ; // GRP.25 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(5.0)<0>,B(2.0)<0>] <0,2> [U2] P1 OP(sel:?)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
wire[ 1:0] DM_162               =  {1'b0,CP_fsmRead_B03_F2} | DM_160       ; // GRP.25 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(6.0)<0>,B(1.0)<0>] <0,3> [U2] P1 OP(or:|)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
wire       AO_254               =  CE_083 | I_fsmWrite_B06_2               ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_167               =  CP_fsmWrite_B02_F2 & AO_254             ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       O_266                =  CM_167 | CM_154                         ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_172               =  CP_fsmWrite_B35_F2_B36_F1 | O_266       ; // GRP.24 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(6.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] MA_243               =  (G_axi_wdat_m_valid) ? 2'h3 : 2'h0      ; // GRP.24 <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(1.0)<0>,B(4.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_165               =  (CP_fsmWrite_B01_F04) ? MA_243 : 2'h0   ; // GRP.24 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(2.0)<0>,B(3.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] MA_258               =  (CP_fsmWrite_B22_F2) ? 2'h3 : 2'h0      ; // GRP.24 <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(3.0)<0>,B(4.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_166               =  (I_fsmWrite_B25_2) ? MA_258 : 2'h0      ; // GRP.24 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(4.0)<0>,B(3.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_170               =  DM_165 | DM_166                         ; // GRP.24 <FB>(L1.0+A2.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,3> [U2] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B06_F1   =  CP_fsmWrite_B02_F2 & I_fsmWrite_B06_2   ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L546)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] MA_253               =  (CP_fsmWrite_B02_F2) ? 2'h2 : 2'h0      ; // GRP.24 <FB>(L1.0+A2.0+fo1+ld[2:0:1]) [F(3.0)<0>,B(4.0)<1>] <0,2> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_164               =  (CE_083) ? MA_253 : 2'h0                ; // GRP.24 <FB>(L1.0+A2.0+fo1+ld[2:1]) [F(4.0)<0>,B(3.0)<1>] <0,2> [U2] P1 OP(sel:?)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_168               =  {1'b0,CP_fsmWrite_B06_F1} | DM_164      ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,3> [U2] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire[ 1:0] DM_173               =  DM_170 | DM_168                         ; // GRP.24 <FB>(L1.0+A2.0+fo1+ld[1:1]) [F(6.0)<0>,B(1.0)<1>] <0,3> [U2] P1 OP(or:|)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmRead_B09_F1    =  CP_fsmRead_B02_F4 & I_fsmRead_B03_1     ; // GRP.25 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(2.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L513)[AXI4L::SlaveFSM::fsmRead]
wire       CM_174               =  CP_fsmRead_B03_F2 | CP_fsmRead_B09_F1   ; // GRP.25 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L507,L513)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmWrite_B20_F1   =  CP_fsmWrite_B01_F08 & I_fsmWrite_B02_1  ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L571)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B11_F1   =  CP_fsmWrite_B01_F04 & I_fsmWrite_B02_1  ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L557)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_175               =  CP_fsmWrite_B02_F2 | CP_fsmWrite_B11_F1 ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L545,L557,L571)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_176               =  CP_fsmWrite_B20_F1 | CM_175             ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L545,L557,L571)[AXI4L::SlaveFSM::fsmWrite]
wire       DM_177               =  AO_244 & I_fsmWrite_B02_1               ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L545,L557,L571)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B32_F2   =  CP_fsmWrite_B01_F10 & G_axi_wres_m_ready; // GRP.24 <FB>(L1.0+A1.0+fo2+ld[1:1]) [F(2.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L594)[AXI4L::SlaveFSM::fsmWrite]
wire       G__this_writeFlag    =  AO_244 & G_axi_wdat_m_valid             ; // GRP.24 <FB>(L1.0+A1.0+fo72+ld[1:1]) [F(3.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L295,L603)[AXI4L::SlaveFSM::fsm]
wire       CM_179               =  CP_fsmWrite_B32_F2 | G__this_writeFlag  ; // GRP.24 <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L559,L574,L594)[AXI4L::SlaveFSM::fsmWrite]
wire[31:0] I_fsm_0_0_B5_3       =  G__this_cycle/*prv*/ + 32'h1            ; // GRP.8(L2.0+C32.0+A96.0+fo1+ld[1]) [F(34.0,2.0)<0>,B(2.0,34.0)<0>] <0,4294967295> [U32] P1 OP(add:+)(./rv32_io.h:L289)[AXI4L::SlaveFSM::fsm]
wire       CE_057               =  ! I_fsmRead_B15_2                       ; // GRP.25 <B>(fo1+ld[1]) [F(2.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L520)[AXI4L::SlaveFSM::fsmRead]
wire       A_264                =  CE_057 & CP_fsmRead_B02_F4              ; // GRP.25 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L520)[AXI4L::SlaveFSM::fsmRead]
wire       CP_fsmRead_B16_F2    =  A_264 & AO_260                          ; // GRP.25 <FB>(L1.0+A1.0+fo6+ld[1:1]) [F(4.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L520)[AXI4L::SlaveFSM::fsmRead]
wire       CM_189               =  CP_fsmRead_B03_F2 | CP_fsmRead_B16_F2   ; // GRP.25 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(5.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
wire[ 3:0] MA_235       =  (G_axi_raddr_m_valid) ? G_axi_raddr_m_len : 4'h0; //  <FB>(L1.0+A4.0+fo1+ld[4:1]) [F(1.0)<0>,B(3.0)<0>] <0,15> [U4] P1 OP(sel:?)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
wire[ 3:0] DM_187               =  (CP_fsmRead_B02_F2) ? MA_235 : 4'h0     ; // GRP.25 <FB>(L1.0+A4.0+fo1+ld[4:1]) [F(2.0)<0>,B(2.0)<0>] <0,15> [U4] P1 OP(sel:?)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
wire[ 4:0] I_fsmRead_B20_0   =  {1'b0,G__this_burst_count_r/*prv*/} + 5'h1f; // GRP.25 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<0>,B(4.0,9.0)<0>] <-1,14> [S5] P1 OP(add:+)(rv32_io.cpp:L525)[AXI4L::SlaveFSM::fsmRead]
wire[ 4:0] DM_188           =  (CP_fsmRead_B16_F2) ? I_fsmRead_B20_0 : 5'h0; // GRP.25 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(8.0,5.0)<0>,B(2.0)<0>] <-1,14> [S5] P1 OP(sel:?)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
wire[ 4:0] DM_190               =  {1'b0,DM_187} | DM_188                  ; // GRP.25 <FB>(L1.0+A4.0+fo1+ld[1:1]) [F(9.0,6.0)<0>,B(1.0)<0>] <-1,15> [S5] P1 OP(or:|)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
wire       CE_104               =  ! I_fsmWrite_B25_2                      ; // GRP.24 <B>(fo1+ld[1]) [F(2.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L575)[AXI4L::SlaveFSM::fsmWrite]
wire       CP_fsmWrite_B25_F2   =  CP_fsmWrite_B22_F2 & CE_104             ; // GRP.24 <FB>(L1.0+A1.0+fo6+ld[1:1]) [F(3.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L575)[AXI4L::SlaveFSM::fsmWrite]
wire       CM_193               =  CP_fsmWrite_B02_F2 | CP_fsmWrite_B25_F2 ; // GRP.24 <FB>(L1.0+A1.0+fo4+ld[1:1]) [F(4.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 3:0] MA_239       =  (G_axi_waddr_m_valid) ? G_axi_waddr_m_len : 4'h0; // GRP.24 <FB>(L1.0+A4.0+fo1+ld[4:1]) [F(1.0)<0>,B(3.0)<1>] <0,15> [U4] P1 OP(sel:?)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 3:0] DM_191               =  (CP_fsmWrite_B01_F02) ? MA_239 : 4'h0   ; // GRP.24 <FB>(L1.0+A4.0+fo1+ld[4:1]) [F(2.0)<0>,B(2.0)<1>] <0,15> [U4] P1 OP(sel:?)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] I_fsmWrite_B29_0  =  {1'b0,G__this_burst_count_w/*prv*/} + 5'h1f; // GRP.24 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<0>,B(4.0,9.0)<1>] <-1,14> [S5] P1 OP(add:+)(rv32_io.cpp:L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] DM_192         =  (CP_fsmWrite_B25_F2) ? I_fsmWrite_B29_0 : 5'h0; // GRP.24 <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(8.0,4.0)<0>,B(2.0)<1>] <-1,14> [S5] P1 OP(sel:?)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] DM_194               =  {1'b0,DM_191} | DM_192                  ; // GRP.24 <FB>(L1.0+A4.0+fo1+ld[1:1]) [F(9.0,5.0)<0>,B(1.0)<1>] <-1,15> [S5] P1 OP(or:|)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
wire[31:0] I_fsmRead_B16_1      =  G__this_dbg_rcount/*prv*/ + 32'h1       ; // GRP.16(L2.0+C32.0+A96.0+fo1+ld[1]) [F(34.0,2.0)<0>,B(2.0,34.0)<0>] <0,4294967295> [U32] P1 OP(add:+)(rv32_io.cpp:L518)[AXI4L::SlaveFSM::fsmRead]
wire       MAO_255              =  AO_244 & G_axi_wdat_m_valid             ; //  <F>(L1.0+A1.0+fo32+ld[1:1]) [F(3.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L565,L585)[AXI4L::SlaveFSM::fsmWrite]
wire[31:0] I_fsmWrite_B18_5     =  G__this_dbg_wcount/*prv*/ + 32'h1       ; // GRP.15(L2.0+C32.0+A96.0+fo1+ld[1]) [F(34.0,2.0)<0>,B(3.0,35.0)<0>] <0,4294967295> [U32] P1 OP(add:+)(rv32_io.cpp:L565)[AXI4L::SlaveFSM::fsmWrite]
wire[31:0] DM_199               =  (MAO_255) ? I_fsmWrite_B18_5 : 32'h0    ; // GRP.15 <F>(L1.0+A32.0+fo1+ld[32:1]) [F(35.0,4.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(rv32_io.cpp:L565,L585)[AXI4L::SlaveFSM::fsmWrite]
wire[29:0] I_devWrite_0_B1_0    =  G__this_waddr/*prv*/[31:2]/*>>2*/       ; //  <B>(NL) [F(0.0)<0>,B(10.0)<0>] <0,1073741823> [U30] P1 OP(shr:>>)(./rv32_io.h:L602)[GPIO_AXI4L::devWrite]
wire[ 4:0] I_devWrite_0_B1_1    =  I_devWrite_0_B1_0[4:0]/*&5'h1f*/        ; //  <B>(NL) [F(0.0)<0>,B(10.0)<0>] <0,31> [U5] P1 OP(and:&)(./rv32_io.h:L602)[GPIO_AXI4L::devWrite]
wire[ 4:0] MA_241        =  (G_axi_wdat_m_valid) ? I_devWrite_0_B1_1 : 5'h0; //  <FB>(L1.0+A5.0+fo2+ld[5:1]) [F(1.0)<0>,B(10.0)<0>] <0,31> [U5] P1 OP(sel:?)(./rv32_io.h:L602)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] DM_207               =  (CP_fsmWrite_B01_F04) ? MA_241 : 5'h0   ; //  <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(2.0)<0>,B(9.0)<0>] <0,31> [U5] P1 OP(sel:?)(./rv32_io.h:L602)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] DM_208               =  (CP_fsmWrite_B01_F08) ? MA_241 : 5'h0   ; //  <FB>(L1.0+A5.0+fo1+ld[5:1]) [F(2.0)<0>,B(9.0)<0>] <0,31> [U5] P1 OP(sel:?)(./rv32_io.h:L602)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] G__this_mode         =  DM_207 | DM_208                         ; //  <FB>(L1.0+A5.0+fo5+ld[1:1]) [F(3.0)<0>,B(8.0)<0>] <0,31> [U5] P1 OP(or:|)(./rv32_io.h:L602)[AXI4L::SlaveFSM::fsmWrite]
wire[ 4:0] N_012                =  G__this_mode & 5'h1f                    ; //  <FB>(NL) [F(3.0)<0>,B(7.0)<0>] <0,31> [U5] P1 OP(and:&)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire       CE_123               =  N_012 == 5'h0                           ; //  <FB>(L3.0+A4.0+fo2+ld[1]+S) [F(6.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire       CP_fsmUser_1_B02_F2  =  G__this_writeFlag & CE_123              ; //  <FB>(L1.0+A1.0+fo32+ld[1:1]) [F(7.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire[31:0] MA_240       =  (G_axi_wdat_m_valid) ? G_axi_wdat_m_data : 32'h0; //  <FB>(L1.0+A32.0+fo2+ld[32:1]) [F(1.0)<0>,B(4.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L604,L689)[GPIO_AXI4L::step]
wire[31:0] DM_201               =  (CP_fsmWrite_B01_F04) ? MA_240 : 32'h0  ; //  <FB>(L1.0+A32.0+fo1+ld[32:1]) [F(2.0)<0>,B(3.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L604,L689)[GPIO_AXI4L::step]
wire[31:0] DM_202               =  (CP_fsmWrite_B01_F08) ? MA_240 : 32'h0  ; //  <FB>(L1.0+A32.0+fo1+ld[32:1]) [F(2.0)<0>,B(3.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L604,L689)[GPIO_AXI4L::step]
wire[31:0] DM_204               =  DM_201 | DM_202                         ; //  <FB>(L1.0+A32.0+fo1+ld[1:1]) [F(3.0)<0>,B(2.0)<0>] <0,4294967295> [U32] P1 OP(or:|)(./rv32_io.h:L604,L689)[GPIO_AXI4L::step]
wire[31:0] G__this_writeDataGPIO =  (G__this_writeFlag) ? DM_204 : 32'h0   ; //  <FB>(L1.0+A32.0+fo4+ld[32:1]) [F(4.0)<0>,B(1.0)<0>] <0,4294967295> [U32] P1 OP(sel:?)(./rv32_io.h:L604,L689)[GPIO_AXI4L::step]
wire       CE_125               =  N_012 == 5'h1                           ; //  <FB>(L3.0+A4.0+fo2+ld[1]+S) [F(6.0)<0>,B(7.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire       CP_fsmUser_1_B02_F4  =  G__this_writeFlag & CE_125              ; //  <FB>(L1.0+A1.0+fo32+ld[1:1]) [F(7.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire       CE_127               =  N_012 == 5'h2                           ; //  <FB>(L3.0+A4.0+fo2+ld[1]+S) [F(6.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire       CP_fsmUser_1_B02_F8  =  G__this_writeFlag & CE_127              ; //  <FB>(L1.0+A1.0+fo32+ld[1:1]) [F(7.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire       AO_268               =  CE_123 | CE_125                         ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(7.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire       AO_271               =  CE_127 | AO_268                         ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire       CE_120               =  G__this_writeFlag & AO_271              ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire       CE_121               =  ! CE_120                                ; //  <FB>(fo1+ld[1]) [F(9.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire       CP_fsmUser_1_B02_F1  =  G__this_writeFlag & CE_121              ; //  <FB>(L1.0+A1.0+fo32+ld[1:1]) [F(10.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L612)[GPIO_AXI4L::fsmUser]
wire[31:0] I_GPIO_AXI4L_step_B12_3 =  G__this_clk/*prv*/ + 32'h1           ; // GRP.9 <B>(L2.0+C32.0+A96.0+fo1+ld[1]) [F(34.0,2.0)<0>,B(2.0,34.0)<0>] <0,4294967295> [U32] P1 OP(add:+)(./rv32_io.h:L692)[GPIO_AXI4L::step]
wire       CP_GPIO_AXI4L_step_B07_F1 =  G__this_digit_active/*prv*/ | G_dbg_wfi; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L685)[GPIO_AXI4L::step]
wire[12:0] I_GPIO_AXI4L_step_B08_1 =  G__this_clk/*prv*/[12:0]/*&13'h1fff*/; //  <B>(NL) [F(0.0)<0>,B(5.0)<0>] <0,8191> [U13] P1 OP(and:&)(./rv32_io.h:L685)[GPIO_AXI4L::step]
wire       I_GPIO_AXI4L_step_B08_2 =  I_GPIO_AXI4L_step_B08_1 == 13'h0     ; //  <B>(L4.0+A12.0+fo1+ld[1]+S) [F(4.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L685)[GPIO_AXI4L::step]
wire       CP_GPIO_AXI4L_step_B08_F1 =  CP_GPIO_AXI4L_step_B07_F1 & I_GPIO_AXI4L_step_B08_2; //  <B>(L1.0+A1.0+fo11+ld[1:1]) [F(5.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L685)[GPIO_AXI4L::step]
wire[ 3:0] I_update_refresh_B1_1 =  {1'b0,G__this_digit_idx/*prv*/} + 4'h1 ; // GRP.11 <B>(L2.0+C4.0+A12.0+fo68+ld[1]) [F(6.0,2.0)<0>,B(14.0,18.0)<0>] <1,8> [U4] P1 OP(add:+)(./rv32_io.h:L645)[GPIO_AXI4L::update_refresh]
wire[ 2:0] I_update_refresh_B1_2 =  I_update_refresh_B1_1[2:0]/*&3'h7*/    ; // GRP.11 <B>(NL) [F(6.0,2.0)<0>,B(12.0)<0>] <0,7> [U3] P1 OP(and:&)(./rv32_io.h:L645)[GPIO_AXI4L::update_refresh]
wire[ 7:0] I_update_refresh_B7_2 =  8'h1 << {5'b0,I_update_refresh_B1_2}   ; //  <B>(L6.0+A6.0+fo1+ld[3:1]+S) [F(12.0)<0>,B(6.0)<0>] <1,128> [U8] P1 OP(shl:<<)(./rv32_io.h:L657)[GPIO_AXI4L::update_refresh]
wire[ 4:0] I_update_refresh_B3_1 =  {I_update_refresh_B1_2[2:0],2'b0}/*<<2*/; //  <B>(NL) [F(6.0,2.0)<0>,B(10.0)<0>] <0,28> [U5] ZLB(2) P1 OP(shl:<<)(./rv32_io.h:L647)[GPIO_AXI4L::update_refresh]
wire[31:0] I_update_refresh_B3_3 =  G__this_dout/*prv*/ >> {27'b0,I_update_refresh_B3_1}; //  <B>(L10.0+A320.0+ld[5:32]+S) [F(16.0)<0>,B(10.0)<0>] <0,4294967295> [U32] P1 OP(shr:>>)(./rv32_io.h:L647)[GPIO_AXI4L::update_refresh]
wire[ 7:0] I_update_refresh_B3_4 =  I_update_refresh_B3_3[7:0]/*&8'hff*/   ; //  <B>(NL) [F(16.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(and:&)(./rv32_io.h:L647)[GPIO_AXI4L::update_refresh]
wire[ 3:0] I_update_refresh_B3_5 =  I_update_refresh_B3_4[3:0]/*&4'hf*/    ; //  <B>(NL) [F(16.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(and:&)(./rv32_io.h:L647)[GPIO_AXI4L::update_refresh]
wire       I_update_refresh_B2_1 =  I_update_refresh_B1_2[2]/*>>2*/        ; //  <B>(NL) [F(6.0,2.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(shr:>>)(./rv32_io.h:L653)[GPIO_AXI4L::update_refresh]
wire       I_update_refresh_B2_4 =  I_update_refresh_B2_1                  ; //  <B>(NL) [F(6.0,2.0)<0>,B(12.0)<0>] <0,1> [U1] P1 OP(assign:=)[GPIO_AXI4L::update_refresh]
wire[31:0] AD_0      =  G__this_dout_7seg/*prv*/ [ I_update_refresh_B2_4 ] ; // RA.GRP.0 <B>(L2.0+A64.0+fo5+ld[1:2]+S) [F(8.0)<0>,B(12.0)<0>] <0,4294967295> [U32] P1 OP(addr:[])(./rv32_io.h:L655)[GPIO_AXI4L::update_refresh]
wire[ 5:0] I_update_refresh_B2_2 =  {I_update_refresh_B1_2[2:0],3'b0}/*<<3*/; //  <B>(NL) [F(6.0,2.0)<0>,B(10.0)<0>] <0,56> [U6] ZLB(3) P1 OP(shl:<<)(./rv32_io.h:L654)[GPIO_AXI4L::update_refresh]
wire[ 4:0] I_update_refresh_B2_3 =  I_update_refresh_B2_2[4:0] & 5'h18     ; //  <B>(NL) [F(6.0,2.0)<0>,B(10.0)<0>] <0,24> [U5] ZLB(3) P1 OP(and:&)(./rv32_io.h:L654)[GPIO_AXI4L::update_refresh]
wire[31:0] I_update_refresh_B2_6 =  AD_0 >> {27'b0,I_update_refresh_B2_3}  ; //  <B>(L10.0+A320.0+ld[5:32]+S) [F(18.0)<0>,B(10.0)<0>] <0,4294967295> [U32] P1 OP(shr:>>)(./rv32_io.h:L655)[GPIO_AXI4L::update_refresh]
wire[ 5:0] sub_I_fsmUser_1_B07_0 = {1'b0,G__this_mode} - 6'h3             ; // G__this_mode < 6'h3
wire       I_fsmUser_1_B07_0    = (sub_I_fsmUser_1_B07_0[5])              ; //  <FB>(L1.0+C5.0+A5.0+fo1+ld[1]+S) [F(9.0)<0>,B(2.0,7.0)<0>] <0,1> [U1] P1 OP(lt:<)(./rv32_io.h:L618)[GPIO_AXI4L::fsmUser]
wire       CP_fsmUser_1_B07_F1  =  G__this_writeFlag & I_fsmUser_1_B07_0   ; //  <FB>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L618)[GPIO_AXI4L::fsmUser]
wire       I_fsmUser_1_B08_0    =  G__this_mode != 5'h0                    ; //  <FB>(L3.0+A4.0+fo1+ld[1]+S) [F(6.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(ne:!=)(./rv32_io.h:L619)[GPIO_AXI4L::fsmUser]


  //// pipe-stage(1) : pipe-registers...

  always @ (posedge clk or negedge rst_n) begin
  if (rst_n == 1'b0) begin
    _p1_CM_143                             <= 0;
    _p1_CP_GPIO_AXI4L_step_B08_F1          <= 0;
    _p1_CP_fsmRead_B02_F4                  <= 0;
    _p1_CP_fsmRead_B12_F2_B14_F2           <= 0;
    _p1_CP_fsmWrite_B13_F2                 <= 0;
    _p1_CP_fsmWrite_B22_F2                 <= 0;
    _p1_G_dbg_wfi                          <= 0;
    _p1_GPIO_AXI4L_step_pSetup             <= 0;
    _p1_QC_231                             <= 0;
    _p1_DFB_G__this_burst_end_r/*prv*/     <= 0;
    _p1_DFB_G__this_digit_mode/*prv*/      <= 0;
    _p1_DFB_G__this_out_raddr_ready/*prv*/ <= 0;
    _p1_DFB_G__this_out_rdat_last/*prv*/   <= 0;
    _p1_DFB_G__this_out_rdat_resp/*prv*/   <= 0;
    _p1_DFB_G__this_out_rdat_valid/*prv*/  <= 0;
    _p1_I_update_refresh_B3_5              <= 0;
    _p1_I_devWrite_0_B1_1                  <= 0;
    _p1_I_update_refresh_B3_1              <= 0;
    _p1_I_GPIO_AXI4L_step_B02_1            <= 0;
    _p1_I_GPIO_AXI4L_step_B05_2            <= 0;
    _p1_G_axi_wdat_m_data                  <= 0;
    _p1_I_update_refresh_B2_6              <= 0;
    _p1_DFB_G__this_clk/*prv*/             <= 0;
  end // (rst_n)
  else begin
    _p1_CM_143                             <= CM_143                         ; /*   1 bits */
    _p1_CP_GPIO_AXI4L_step_B08_F1          <= CP_GPIO_AXI4L_step_B08_F1      ; /*   1 bits */
    _p1_CP_fsmRead_B02_F4                  <= CP_fsmRead_B02_F4              ; /*   1 bits */
    _p1_CP_fsmRead_B12_F2_B14_F2           <= CP_fsmRead_B12_F2_B14_F2       ; /*   1 bits */
    _p1_CP_fsmWrite_B13_F2                 <= CP_fsmWrite_B13_F2             ; /*   1 bits */
    _p1_CP_fsmWrite_B22_F2                 <= CP_fsmWrite_B22_F2             ; /*   1 bits */
    _p1_G_dbg_wfi                          <= G_dbg_wfi                      ; /*   1 bits */
    _p1_GPIO_AXI4L_step_pSetup             <= ROOT_CP                        ; /*   0 bits */
    _p1_QC_231                             <= QC_231                         ; /*   1 bits */
    _p1_DFB_G__this_burst_end_r/*prv*/     <= G__this_burst_end_r/*prv*/     ; /*   1 bits */ /*feedback-wire*/
    _p1_DFB_G__this_digit_mode/*prv*/      <= G__this_digit_mode/*prv*/      ; /*   1 bits */ /*feedback-wire*/
    _p1_DFB_G__this_out_raddr_ready/*prv*/ <= G__this_out_raddr_ready/*prv*/ ; /*   1 bits */ /*feedback-wire*/
    _p1_DFB_G__this_out_rdat_last/*prv*/   <= G__this_out_rdat_last/*prv*/   ; /*   1 bits */ /*feedback-wire*/
    _p1_DFB_G__this_out_rdat_resp/*prv*/   <= G__this_out_rdat_resp/*prv*/   ; /*   0 bits */ /*feedback-wire*/
    _p1_DFB_G__this_out_rdat_valid/*prv*/  <= G__this_out_rdat_valid/*prv*/  ; /*   1 bits */ /*feedback-wire*/
    _p1_I_update_refresh_B3_5              <= I_update_refresh_B3_5          ; /*   4 bits */
    _p1_I_devWrite_0_B1_1                  <= I_devWrite_0_B1_1              ; /*   5 bits */
    _p1_I_update_refresh_B3_1              <= I_update_refresh_B3_1          ; /*   3 bits */
    _p1_I_GPIO_AXI4L_step_B02_1            <= I_GPIO_AXI4L_step_B02_1        ; /*   8 bits */
    _p1_I_GPIO_AXI4L_step_B05_2            <= I_GPIO_AXI4L_step_B05_2        ; /*  15 bits */
    _p1_G_axi_wdat_m_data                  <= G_axi_wdat_m_data              ; /*  32 bits */
    _p1_I_update_refresh_B2_6              <= I_update_refresh_B2_6          ; /*  32 bits */
    _p1_DFB_G__this_clk/*prv*/             <= G__this_clk/*prv*/             ; /*  32 bits */ /*feedback-wire*/
  end /*else*/
  end /*always @ ...*/


  //// pipe-stage(1)  : state-registers...

  always @ (posedge clk or negedge rst_n) begin
  if (rst_n == 1'b0) begin
    G__this_out_waddr_ready <= 1'h0 ;
    G__this_out_wdat_ready  <= 1'h0 ;
    G__this_out_wres_resp   <= 1'h0 ;
    G__this_out_wres_valid  <= 1'h0 ;
    G__this_out_raddr_ready <= 1'h0 ;
    G__this_out_rdat_resp   <= 1'h0 ;
    G__this_out_rdat_valid  <= 1'h0 ;
    G__this_out_rdat_last   <= 1'h0 ;
    G__this_r_state         <= 2'h0 ;
    G__this_w_state         <= 2'h0 ;
    G__this_waddr           <= 32'h0;
    G__this_raddr_end       <= 1'h0 ;
    G__this_waddr_end       <= 1'h0 ;
    G__this_wres_end        <= 1'h0 ;
    G__this_cycle           <= 32'h0;
    G__this_burst_count_r   <= 4'h0 ;
    G__this_burst_count_w   <= 4'h0 ;
    G__this_dbg_rcount      <= 32'h0;
    G__this_dbg_wcount      <= 32'h0;
    G__this_dout            <= 32'h0;
    G__this_dout_7seg[0]    <= 32'h0;
    G__this_dout_7seg[1]    <= 32'h0;
    G__this_dout_led        <= 32'h0;
    G__this_clk             <= 32'h0;
    G__this_digit_idx       <= 3'h0 ;
    G__this_an              <= 8'h0 ;
    G__this_dbg_dout        <= 32'h0;
    G__this_digit_active    <= 1'h0 ;
    G__this_digit_mode      <= 1'h0 ;
  end /// (rst_n == 1'b0)
  else begin /*reg-assignments*/
    if (CM_141)  G__this_out_waddr_ready <= CP_fsmWrite_B02_F2; // GRP.24 <B>(ld[1:1]+S+@) [F(3.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L141)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_151)  G__this_out_wdat_ready  <= CM_148            ; // GRP.24 <B>(ld[1:1]+S+@) [F(5.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L169)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_156) begin
      G__this_out_wres_resp  <= DM_155; // GRP.24 <B>(ld[1:1]+S+@) [F(6.0)<0>,B(0.0)<1>] <0,0> [U0] P1 OP(clk:@)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
      G__this_out_wres_valid <= CM_154; // GRP.24 <B>(ld[1:1]+S+@) [F(6.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L183)[AXI4L::SlaveFSM::fsmWrite]
    end /// (CM_156)
    if (CM_139)  G__this_out_raddr_ready <= CP_fsmRead_B03_F2; // GRP.13 <B>(ld[1:1]+S+@) [F(3.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L141)[AXI4L::SlaveFSM::fsmRead]
    if (CM_143) begin
      G__this_out_rdat_resp  <= 1'h0                    ; // GRP.18 <B>(ld[1:1]+S+@) [F(5.0)<0>,B(0.0)<0>] <0,0> [U0] P1 OP(clk:@)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
      G__this_out_rdat_valid <= CP_fsmRead_B12_F2_B14_F2; // GRP.25 <B>(ld[1:1]+S+@) [F(5.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
      G__this_out_rdat_last  <= DM_146                  ; // GRP.19 <B>(ld[1:1]+S+@) [F(5.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L155)[AXI4L::SlaveFSM::fsmRead]
    end /// (CM_143)
    if (CM_163            )  G__this_r_state   <= DM_162            ; // GRP.25 <B>(ld[2:1]+S+@) [F(6.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(clk:@)(rv32_io.cpp:L508,L521,L532)[AXI4L::SlaveFSM::fsmRead]
    if (CM_172            )  G__this_w_state   <= DM_173            ; // GRP.24 <B>(ld[2:1]+S+@) [F(6.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(clk:@)(rv32_io.cpp:L548,L551,L561,L577,L597)[AXI4L::SlaveFSM::fsmWrite]
    if (CP_fsmWrite_B02_F2)  G__this_waddr     <= G_axi_waddr_m_addr; // GRP.10 <B>(ld[32:1]+S+@) [F(2.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(rv32_io.cpp:L541)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_174            )  G__this_raddr_end <= CP_fsmRead_B09_F1 ; // GRP.25 <B>(ld[1:1]+S+@) [F(3.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(rv32_io.cpp:L507,L513)[AXI4L::SlaveFSM::fsmRead]
    if (CM_176            )  G__this_waddr_end <= DM_177            ; // GRP.24 <B>(ld[1:1]+S+@) [F(4.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(rv32_io.cpp:L545,L557,L571)[AXI4L::SlaveFSM::fsmWrite]
    if (CM_179            )  G__this_wres_end  <= CP_fsmWrite_B32_F2; // GRP.24 <B>(ld[1:1]+S+@) [F(4.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(rv32_io.cpp:L559,L574,L594)[AXI4L::SlaveFSM::fsmWrite]
    if (ROOT_CP) begin
      G__this_cycle <= I_fsm_0_0_B5_3         ; // GRP.8(ld[32:1]+S+@) [F(34.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(./rv32_io.h:L289)[AXI4L::SlaveFSM::fsm]
      G__this_clk   <= I_GPIO_AXI4L_step_B12_3; // GRP.9 <B>(ld[32:1]+S+@) [F(34.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(./rv32_io.h:L692)[GPIO_AXI4L::step]
    end /// (ROOT_CP)
    if (CM_189                  )  G__this_burst_count_r <= DM_190[3:0]    ; // GRP.25 <B>(ld[4:1]+S+@) [F(9.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(rv32_io.cpp:L504,L525)[AXI4L::SlaveFSM::fsmRead]
    if (CM_193                  )  G__this_burst_count_w <= DM_194[3:0]    ; // GRP.24 <B>(ld[4:1]+S+@) [F(9.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(rv32_io.cpp:L543,L581)[AXI4L::SlaveFSM::fsmWrite]
    if (CP_fsmRead_B12_F2_B14_F2)  G__this_dbg_rcount    <= I_fsmRead_B16_1; // GRP.16(ld[32:1]+S+@) [F(34.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(rv32_io.cpp:L518)[AXI4L::SlaveFSM::fsmRead]
    if (G__this_writeFlag) begin
      G__this_dbg_wcount   <= DM_199; // GRP.15(ld[32:1]+S+@) [F(35.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(rv32_io.cpp:L565,L585)[AXI4L::SlaveFSM::fsmWrite]
      G__this_digit_active <= 1'h1  ; // GRP.14 <B>(ld[1:1]+S+@) [F(3.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L621)[GPIO_AXI4L::fsmUser]
    end /// (G__this_writeFlag)
    if (CP_fsmUser_1_B02_F2)  G__this_dout         <= G__this_writeDataGPIO; // GRP.21 <B>(ld[32:1]+S+@) [F(7.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(./rv32_io.h:L613)[GPIO_AXI4L::fsmUser]
    if (CP_fsmUser_1_B02_F4)  G__this_dout_7seg[0] <= G__this_writeDataGPIO; // RA.GRP.0 <B>(ld[32:1]+S+@) [F(7.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(./rv32_io.h:L614)[GPIO_AXI4L::fsmUser]
    if (CP_fsmUser_1_B02_F8)  G__this_dout_7seg[1] <= G__this_writeDataGPIO; // RA.GRP.0 <B>(ld[32:1]+S+@) [F(7.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(./rv32_io.h:L615)[GPIO_AXI4L::fsmUser]
    if (CP_fsmUser_1_B02_F1)  G__this_dout_led     <= G__this_writeDataGPIO; // GRP.22 <B>(ld[32:1]+S+@) [F(10.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(./rv32_io.h:L616)[GPIO_AXI4L::fsmUser]
    if (CP_GPIO_AXI4L_step_B08_F1) begin
      G__this_digit_idx <= I_update_refresh_B1_2; // GRP.11 <B>(ld[3:1]+S+@) [F(6.0)<0>,B(0.0)<0>] <0,7> [U3] P1 OP(clk:@)(./rv32_io.h:L658)[GPIO_AXI4L::update_refresh]
      G__this_an        <= I_update_refresh_B7_2; // GRP.12 <B>(ld[8:1]+S+@) [F(12.0)<0>,B(0.0)<0>] <0,128> [U8] P1 OP(clk:@)(./rv32_io.h:L657)[GPIO_AXI4L::update_refresh]
    end /// (CP_GPIO_AXI4L_step_B08_F1)
    if (G_dbg_wfi          )  G__this_dbg_dout   <= G_dbg_data       ; //  <B>(ld[32:1]+S+@) [F(0.0)<0>,B(0.0)<1>] <0,4294967295> [U32] P1 OP(clk:@)(./rv32_io.h:L670)[GPIO_AXI4L::step]
    if (CP_fsmUser_1_B07_F1)  G__this_digit_mode <= I_fsmUser_1_B08_0; // GRP.20 <B>(ld[1:1]+S+@) [F(10.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L619)[GPIO_AXI4L::fsmUser]
  end /// reg-assignments
  end /// always @ ...

  /*probe assignments*/
  assign _prb_GPIO_AXI4L_step_pSetup = _p1_GPIO_AXI4L_step_pSetup;

endmodule // GPIO_AXI4L_step_no_mem

