/////////////////////////////////////////////////////////////////
//////          Auto-generated by C2RTL+LLVM.11.0.0        //////
//////             C2RTL.ver.4.4.0 (10.02.2025)            //////
//////               All rights reserved                   //////
////// (C)2016-2025, New System Vision R&D Institute (NSV) //////
//////           CURRENT TIME 09:51:56 11.04.2025          //////
/////////////////////////////////////////////////////////////////


/*******************************************************
OPT_DisableStdErrOutput                           : 1
OPT_SilenceMsg                                    : 1
OPT_DisableTopCallerPointToLink                   : 0
OPT_DisableTopCallerArrayConversion               : 1
OPT_RangePrintMode                                : 0
OPT_RTLUsePipeFunction                            : 0
OPT_RTLUsePipeStackCompression                    : 0
OPT_RTLUsePipeWorkspace                           : 0
OPT_RTLMaxPipeFunctionSize                        : 0
OPT_RTLExpandUnmatchedBWLeafArray                 : 1
OPT_RTLDisableBaseClassName                       : 1
OPT_RTLShowLLVM_Inst                              : 0
OPT_RTLPipeRegAsyncReset                          : 1
OPT_RTL_FPGA_Mode                                 : 0
OPT_RTL_DualPortMemoryWrite1st                    : 0
OPT_RTL_RAM_INIT                                  : 0
OPT_RTL_DISABLE_VECTOR_DISPLAY                    : 1
OPT_RTL_DISABLE_VCD_DUMP                          : 1
OPT_DisableArrayLoadDecomposition                 : 1
OPT_RegArrayAddrPos                               : 1
OPT_DBG_ReduceArrayIndexLoad                      : 0
OPT_DBG_ComputeDist                               : 0
OPT_PrintRangeBits                                : 1
OPT_PrintExpandNodeAddr                           : 0
OPT_DBG_Range                                     : 0
OPT_DBG_RangeTruncate                             : 0
OPT_DBG_AssignPropagation                         : 1
OPT_ConstPrintMode                                : 1
OPT_InitializeWireRangeFromBitWidth               : 1
OPT_ForcePrintRangeUpdate                         : 0
OPT_PrintAllData                                  : 0
OPT_PrintAddDefNode                               : 0
OPT_DBG_Connectivity                              : 0
OPT_DBG_SplitDefUseChain                          : 0
OPT_DBG_IsReachable                               : 0
OPT_DBG_IsReachableInternal                       : 0
OPT_DBG_PipeDist                                  : 0
OPT_PrintPipeDist                                 : 0
OPT_DBG_PipeStageInitialize                       : 0
OPT_DBG_ShowLLVMTypeValue                         : 0
OPT_DBG_getContiguousData                         : 0
OPT_DBG_BWReachableNodes                          : 0
OPT_DBG_FWReachableNodes                          : 0
OPT_DBG_PipeDistUpdate                            : 0
OPT_HidePrintGateDist                             : 0
OPT_DefaultPipeStageCount                         : 8
OPT_OverridePipeStageCount                        : 0
OPT_PrintPipeStageCreate                          : 3
OPT_ShowRange                                     : 1
OPT_ShowGateCost                                  : 1
OPT_ShowBlockAddressInPathName                    : 0
OPT_ShowPathLevelsInPathName                      : 0
OPT_PrintCFGConnectivity                          : 1
OPT_ShowMiscFlag                                  : 0
OPT_SplitDefUseChainPending                       : 0
OPT_DBG_createIODistHeap                          : 0
OPT_EnableSelectionPropagation                    : 1
OPT_RelaxSelectionPropagationConstraint           : 1
OPT_DataLeafElementMaxCount                       : 100000
OPT_LoopUnrollMaxTripCount                        : 10000
OPT_EnableExternalRangeCap                        : 1
OPT_MergeMultipleArrayWrites                      : 1
OPT_MergeMultipleArrayReads                       : 1
OPT_PrintPipeGateStat                             : 0
OPT_PrintAreaProfile                              : 0
OPT_PrintCriticalPathInfo                         : 1
OPT_PrintControlPathsOnly                         : 0
OPT_PrintPhiBBCond                                : 0
OPT_EnableLLVMPatchOnShortProductSumBug           : 1
OPT_PrintInternalGlobals                          : 2
OPT_PrintCreateC2RType                            : 0
OPT_EnableCarryComputationMerge                   : 1
OPT_EnableAndOrRetiming                           : 1
OPT_RestrictAndOrRetimingOnTrees                  : 0
OPT_EnableOrRestructuring                         : 1
OPT_MultType                                      : 0
OPT_MultReduceRatio                               : 0
OPT_EnableXorTreeReduction                        : 1
OPT_MuxTreeReductionMinHeight                     : 0
OPT_PrintTreeHeightReductionDetail                : 0
OPT_EnableMuxQualifierReduction                   : 1
OPT_RestrictCreateMuxQualifier                    : 0
OPT_MuxQualifierNodeCountThreshold                : 5
OPT_EnableInternalNodeProbes                      : 0
OPT_PrintCFGConnection                            : 2
OPT_ClassMethodInstanceCount                      : 1
OPT_PIPE_OPT_UseRegCountAnnealing                 : 0
OPT_PIPE_OPT_AnnealingInitTempFactor              : 1000
OPT_PIPE_OPT_AnnealingCoolingTempFactor           : 990
OPT_PIPE_OPT_UseDistSlope                         : 0
OPT_PIPE_OPT_SelectMaxDist                        : 1
OPT_PIPE_OPT_SelectRandDistProb                   : 0
OPT_PIPE_OPT_RandSeed                             : 0
OPT_PIPE_OPT_distIterNodeCountRatio               : 0
OPT_PIPE_OPT_distIterCount                        : 500
OPT_PIPE_OPT_distRetryCount                       : 20
OPT_PIPE_OPT_regIterCount                         : 100
OPT_PIPE_OPT_regRetryCount                        : 30
OPT_PIPE_OPT_enableLateInsertion                  : 1
OPT_PIPE_OPT_assignDirectPathPipeStage            : 1
OPT_PIPE_OPT_minPipeDistCost                      : 5
OPT_PIPE_OPT_minimizePipeDistSquared              : 1
OPT_RTL_RAM_Exclusive_RW_NoChange                 : 1
OPT_PrintRangeTrucationException                  : 2
OPT_PrintSkipDependenceInputs                     : 0
OPT_SynchronizeDirectSignalPath                   : 1
OPT_DisableRelocateFeedbackPath                   : 0
OPT_DisableIncompatibleDirectPath                 : 0
OPT_SynchronizeStructMemberFeedbackWires          : 0
OPT_DefaultBitPreciseRTLC                         : 1
OPT_DisableRTLComments                            : 0
OPT_EnableVOBFS                                   : 0
OPT_DBG_NodeInst                                  : 0
OPT_Enable_printAllocaNodeMap                     : 0
OPT_Enable_printBlockInfo                         : 0
OPT_Enable_printReachablePaths                    : 0
OPT_RTL_NoTestVectorReturnValue                   : 0
OPT_RTL_ForceOutputPortOnTopArg                   : 1
OPT_DBG_GetCreateType                             : 0
OPT_DBG_INTERNAL_GLOBALS                          : 0
OPT_DBG_adjustDirectPathNodes                     : 0
OPT_EnableAndMaskReduction                        : 1
OPT_PrintCriticalPathMsg                          : 0
OPT_EnableLogFileOpenMsg                          : 0
OPT_MultDelayFactor                               : 0
OPT_CarryDelayFactor                              : 0
OPT_UseCheckSumTestVector                         : 0
OPT_TestVectorMaxSize                             : 0
OPT_EnableRTLCCollapsing                          : 0
OPT_EnableRTLCLogicalCollapsing                   : 0
OPT_EnablePrvStateCopy                            : 0
OPT_MaxFanoutRTLCCollapsing                       : 1
OPT_MaxAccFanoutRTLCCollapsing                    : 1
OPT_EnableRegArrayIndexWrite                      : 1
OPT_DBGPipeRelocate                               : 0
OPT_DisableMethodNameBinding                      : 0
OPT_EnableVarIndexAccessOnArrayStruct             : 1
OPT_DisableVarIndexAccessOnArrayStructWires       : 1
OPT_RTL_OmitPipeStageInfoInRTLLog                 : 0
OPT_TestBenchFineGrainLogThreshold                : 100000
OPT_EnableGateFanoutModel                         : 0
OPT_GateModel_EG_area                             : 1000
OPT_GateModel_EG_delay                            : 1000
OPT_GateModel_CG_area                             : 2000
OPT_GateModel_CG_delay                            : 2000
OPT_GateModel_FO_factor                           : 500
OPT_CriticalPathFOFactorSweepCount                : 10
OPT_CriticalPathSortType                          : 0
OPT_SlackHistogramSize                            : 20
OPT_EnableRedirectPipDistAlignedWireFeedbackUsers : 1
OPT_IgnoreUnassignedArrayReference                : 0
OPT_PatchRTLC_varIndexEnabled                     : 0
OPT_IgnoreUnmatchedBWLeafArray                    : 0
OPT_DisableDivDecompsition                        : 0
OPT_EnableUseSystemOutputSV                       : 1
OPT_EnablePipeRegBitWidthZLB                      : 1
OPT_EnablePipeRegBitWidthUsrTruncate              : 1
OPT_EnableInitRegWriter                           : 0
OPT_SplitRegFeedbackOnMaxStateDepth               : 0
OPT_EnableSplitRegFeedback                        : 0
OPT_DBGEnableSplitRegFeedback                     : 0
OPT_DBGStateGraphDepth                            : 0
OPT_EnableErrorOnUncleanSplitRegFeedback          : 0
OPT_DBGVarIndexGroup                              : 0
OPT_DBGMergeGroup                                 : 0
OPT_RTL_EnableMemWrapperAtSystemLevel             : 0
OPT_EnableMemoryByteAddress                       : 0
OPT_ExtractMemoryPortPaths                        : 0
OPT_ShowAllFWCombPaths                            : 0
OPT_ShowFWCombPathsWithWireFeedback               : 1
OPT_ShowPipeLockedNodes                           : 0
OPT_UseImplicitClockGating                        : 1
OPT_EnablePipeRegClockGating                      : 0
OPT_EnablePipeRegClockGatingMonitor               : 0
OPT_EnableMemoryClockGating                       : 0
OPT_DBGcomputePipeDistBW                          : 0
OPT_RTL_USE_MEMORY_INIT_FILE_MACRO                : 1
*******************************************************/
/*-------------------------------------------------------------------------------------------------------------
final pipe layout
P( 1): 964 nodes,   2740.0 gates,   63 pipeRegs (    6 pipes,  734 states, 0 FBs), IO(  0,  6),GIO( 5, 0),D(  43.0),pd( 0, 0)
------------------------------------------ explicit pipe boundary -------------------------------------------
P( 2): 217 nodes,     49.0 gates,    0 pipeRegs (    0 pipes,    2 states, 0 FBs), IO( 47,  0),GIO( 0, 2),D(  13.0),pd( 0, 1)
-------------------------------------------------------------------------------------------------------------
Total:1181 nodes,   2789.0 gates,   63 pipeRegs (    6 pipes,  736 states, 0 FBs), I( 47),O(  6),D(  56.0),maxD(  43.0 :   43.0)
Total    7612.0 gates (combined) :   2789.0 (comb-gates) +  742 (reg-bits) * 6.50 (gates/FF) + 0 memBits
-------------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------------
[TOTAL] 1,181 nodes, 7,612 totalGates, 2,789 combGates, 742 regBits, 0 memBits, 0 totalMemBits
    OP(+) : U32 x 1 (96 gates), U16 x 3 (144 gates), U11 x 1 (33 gates), U5 x 6 (90 gates), U4 x 1 (12 gates)
----- OP(+) : total 375 gates, 12 ops -----
    OP(&) : U8 x 3 (24 gates), U1 x 276 (276 gates)
----- OP(&) : total 300 gates, 279 ops -----
    OP(|) : U8 x 6 (44 gates), U7 x 1 (6 gates), U6 x 1 (5 gates), U5 x 5 (24 gates), U2 x 10 (14 gates)
    OP(|) : U1 x 159 (159 gates)
----- OP(|) : total 252 gates, 182 ops -----
    OP(^) : U1 x 2 (4 gates)
----- OP(^) : total 4 gates, 2 ops -----
    OP(==) : U1 x 99 (617 gates)
----- OP(==) : total 617 gates, 99 ops -----
    OP(!=) : U1 x 3 (42 gates)
----- OP(!=) : total 42 gates, 3 ops -----
    OP(<) : U1 x 4 (131 gates)
----- OP(<) : total 131 gates, 4 ops -----
    OP(>) : U1 x 1 (16 gates)
----- OP(>) : total 16 gates, 1 ops -----
    OP(?) : U16 x 8 (128 gates), U8 x 68 (552 gates), U7 x 5 (35 gates), U6 x 1 (6 gates), U5 x 25 (150 gates)
    OP(?) : U4 x 2 (8 gates), U3 x 1 (3 gates), U2 x 17 (40 gates), U1 x 32 (34 gates)
----- OP(?) : total 956 gates, 159 ops -----
    OP([]) : U8 x 3 (96 gates)
----- OP([]) : total 96 gates, 3 ops -----
========= ALL : 2,789 gates =========
-------------------------------------------------------------------------------------------------------------*/

/*
+++++++++++++++++++++++++++++++ criticalPath info +++++++++++++++++++++++++++++++
foFactor = 0.000, maxD = 43.000, src = P1 : area(   71.0,   10.0),latency(   12.0,    2.0),carry(   81.0,    0.0),foSum(   90.000,  23.553,  17.101,    0),foAve(7.500,1.963,1.425,0.000),foStd(4.063,0.551,0.268),foNormL2(  55.245),nodeCount(    12)
====================== (src: P1) =======================
 0 : P1 : dfw(  0.000) dbw( 43.000) slack(  0.000) (NL)[(nop)] G.prv._(*this).uart.baud_period_m1 
 1 : P1 : dfw( 29.000) dbw( 14.000) slack(  0.000) (L2.0+C27.0+A60.0+fo22+ld[1:1]+S)[<] I.do_tx.0.B05.2 = G.prv._(*this).uart.tx.tick < G.prv._(*this).uart.baud_period_m1 (rv32_io.cpp:L256)                                        
 2 : P1 : dfw( 29.000) dbw( 14.000) slack(  0.000) (fo50+ld[1])[!] CE.0134    = ! I.do_tx.0.B05.2                     (rv32_io.cpp:L256)                                        
 3 : P1 : dfw( 30.000) dbw( 13.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[&] QC.0452 = A.1303 & CE.0134              (rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)
 4 : P1 : dfw( 31.000) dbw( 12.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] O.1378 = QC.0452 | QC.0435              (rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)
 5 : P1 : dfw( 32.000) dbw( 11.000) slack(  0.000) (L1.0+A1.0+fo2+ld[1:1])[|] CM.1269 = O.1401 | O.1378               (rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)
 6 : P1 : dfw( 33.000) dbw( 10.000) slack(  0.000) (L1.0+A1.0+fo7+ld[1:1])[?] DM.1294 = (CM.1269) ? DM.1270 : 0       (rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)
 7 : P1 : dfw( 35.000) dbw(  8.000) slack(  0.000) (L2.0+A10.0+fo3+ld[5:1:1])[?] DM.1295 = (DM.1294) ? L.nxt_pnt.4.RET : G.prv._(*this).uart.tx.buf.rp (./rv32_io.h:L71)                                         
 8 : P1 : dfw( 40.000) dbw(  3.000) slack(  0.000) (L5.0+A14.0+fo1+ld[1:1]+S)[!=] I.update_1.2.B08.01 = DM.1295 != DM.1296 (./rv32_io.h:L73)                                         
 9 : P1 : dfw( 41.000) dbw(  2.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] I.update_1.2.B08.03 = I.update_1.2.B08.01 | I.PROBE_UART_step.B12.1 (./rv32_io.h:L73)                                         
10 : P1 : dfw( 42.000) dbw(  1.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[?] DM.0565 = (CP.update_1.2.B01.F2) ? I.update_1.2.B08.03 : 0 (./rv32_io.h:L68,L73)                                     
11 : P1 : dfw( 43.000) dbw(  0.000) slack(  0.000) (L1.0+A1.0+fo1+ld[1:1])[|] DM.0568 = DM.0565 | DM.0564             (./rv32_io.h:L68,L73)                                     
12 : P1 : dfw( 43.000) dbw(  0.000) slack(  0.000) (ld[1:1]+S+@)[@] G._(*this).uart.tx.buf.not_empty = CM.0567 @ DM.0568 (./rv32_io.h:L68,L73)                                     
CriticalPath : D(43.000), DC(43.000)
************** slack histogram (shsize = 20, totalDelayNodeCount = 880) ************** 
(  0) [  0.000 -   2.150] : area(  204.0,   63.0),latency(   55.0,   12.0),carry(   54.0,    0.0),foSum(  201.000,  77.019,  62.908,    0),foAve(3.792,1.453,1.187,0.000),foStd(1.152,0.178,0.095),foNormL2(  67.030),nodeCount(    53)
(  1) [  2.150 -   4.300] : area(   24.0,    0.0),latency(    4.0,    0.0),carry(    0.0,    0.0),foSum(    4.000,   4.000,   4.000,    0),foAve(1.000,1.000,1.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   2.000),nodeCount(     4)
(  2) [  4.300 -   6.450] : area(   23.0,    0.0),latency(   11.0,    0.0),carry(    0.0,    0.0),foSum(   42.000,  19.384,  15.634,    0),foAve(3.500,1.615,1.303,0.000),foStd(0.924,0.272,0.171),foNormL2(  16.432),nodeCount(    12)
(  3) [  6.450 -   8.600] : area(   44.0,    0.0),latency(   11.0,    0.0),carry(    0.0,    0.0),foSum(   47.000,  20.739,  17.089,    0),foAve(2.938,1.296,1.068,0.000),foStd(1.137,0.280,0.176),foNormL2(  21.656),nodeCount(    16)
(  4) [  8.600 -  10.750] : area(  130.0,   32.0),latency(   73.0,    1.0),carry(   32.0,    0.0),foSum(  135.000,  89.535,  82.559,    0),foAve(1.607,1.066,0.983,0.000),foStd(0.289,0.075,0.051),foNormL2(  28.373),nodeCount(    84)
(  5) [ 10.750 -  12.900] : area(   27.0,    0.0),latency(   19.0,    0.0),carry(    0.0,    0.0),foSum(   35.000,  22.414,  20.780,    0),foAve(1.750,1.121,1.039,0.000),foStd(0.734,0.157,0.091),foNormL2(  16.643),nodeCount(    20)
(  6) [ 12.900 -  15.050] : area(   53.0,    0.0),latency(    8.0,    0.0),carry(    0.0,    0.0),foSum(    8.000,   8.000,   8.000,    0),foAve(0.889,0.889,0.889,0.000),foStd(0.105,0.105,0.105),foNormL2(   2.828),nodeCount(     9)
(  7) [ 15.050 -  17.200] : area(    0.0,    0.0),latency(    0.0,    0.0),carry(    0.0,    0.0),foSum(    0.000,   0.000,   0.000,    0),foAve(0.000,0.000,0.000,0.000),foStd(0.000,0.000,0.000),foNormL2(   0.000),nodeCount(     0)
(  8) [ 17.200 -  19.350] : area(   71.0,   32.0),latency(   25.0,    1.0),carry(   12.0,    0.0),foSum(  131.000,  38.090,  30.001,    0),foAve(5.955,1.731,1.364,0.000),foStd(3.742,0.367,0.154),foNormL2(  86.931),nodeCount(    22)
(  9) [ 19.350 -  21.500] : area(   21.0,   20.0),latency(   10.0,    3.0),carry(    0.0,    0.0),foSum(   19.000,  12.382,  11.000,    0),foAve(2.111,1.376,1.222,0.000),foStd(0.483,0.156,0.091),foNormL2(   7.681),nodeCount(     9)
( 10) [ 21.500 -  23.650] : area(  100.0,   48.0),latency(   26.0,    3.0),carry(   32.0,    0.0),foSum(   58.000,  37.199,  32.999,    0),foAve(2.148,1.378,1.222,0.000),foStd(0.326,0.096,0.055),foNormL2(  14.213),nodeCount(    27)
( 11) [ 23.650 -  25.800] : area(   86.0,   31.0),latency(   34.0,    4.0),carry(   26.0,    0.0),foSum(   77.000,  53.630,  48.570,    0),foAve(1.833,1.277,1.156,0.000),foStd(0.207,0.069,0.046),foNormL2(  14.731),nodeCount(    42)
( 12) [ 25.800 -  27.950] : area(   60.0,   15.0),latency(   37.0,    3.0),carry(   10.0,    0.0),foSum(  106.000,  59.687,  52.327,    0),foAve(2.465,1.388,1.217,0.000),foStd(0.549,0.112,0.058),foNormL2(  28.601),nodeCount(    43)
( 13) [ 27.950 -  30.100] : area(   91.0,   27.0),latency(   50.0,    3.0),carry(   11.0,    0.0),foSum(  172.000,  78.569,  64.726,    0),foAve(3.440,1.571,1.295,0.000),foStd(0.694,0.139,0.077),foNormL2(  42.379),nodeCount(    50)
( 14) [ 30.100 -  32.250] : area(   78.0,   11.0),latency(   34.0,    4.0),carry(    5.0,    0.0),foSum(  123.000,  59.997,  51.002,    0),foAve(2.929,1.429,1.214,0.000),foStd(0.817,0.145,0.080),foNormL2(  39.205),nodeCount(    42)
( 15) [ 32.250 -  34.400] : area(  575.0,    5.0),latency(  132.0,    1.0),carry(    5.0,    0.0),foSum(  709.000, 320.238, 262.335,    0),foAve(3.563,1.609,1.318,0.000),foStd(0.367,0.070,0.038),foNormL2(  88.730),nodeCount(   199)
( 16) [ 34.400 -  36.550] : area(   65.0,    8.0),latency(   17.0,    1.0),carry(    3.0,    0.0),foSum(   94.000,  38.361,  30.011,    0),foAve(4.476,1.827,1.429,0.000),foStd(1.072,0.233,0.131),foNormL2(  30.463),nodeCount(    21)
( 17) [ 36.550 -  38.700] : area(  481.0,   20.0),latency(  320.0,    3.0),carry(    4.0,    0.0),foSum(  713.000, 332.313, 273.497,    0),foAve(3.478,1.621,1.334,0.000),foStd(0.256,0.064,0.035),foNormL2(  72.298),nodeCount(   205)
( 18) [ 38.700 -  40.850] : area(   23.0,    2.0),latency(   10.0,    2.0),carry(    0.0,    0.0),foSum(   74.000,  19.542,  15.379,    0),foAve(6.167,1.629,1.282,0.000),foStd(4.775,0.541,0.234),foNormL2(  61.156),nodeCount(    12)
( 19) [ 40.850 -  43.000] : area(    5.0,    0.0),latency(    5.0,    0.0),carry(    0.0,    0.0),foSum(    5.000,   5.000,   5.000,    0),foAve(0.500,0.500,0.500,0.000),foStd(0.158,0.158,0.158),foNormL2(   2.236),nodeCount(    10)
*/

/**********************************************************
PROBE_UART_step        : _ZN10PROBE_UART4stepEhhRhP15PROBE_UART_PORT : root function
write_command.0        : _ZN4UART13write_commandEtij                 : called @  ./rv32_io.h:L762 
reset_port.0           : _ZN9UART_PORT10reset_portEv                 : called @  rv32_io.cpp:L481 
reset_14               : _ZN5IOBufIhLi8EE5resetEv                    : called @  ./rv32_io.h:L509 
reset_port.1           : _ZN9UART_PORT10reset_portEv                 : called @  rv32_io.cpp:L482 
reset_14.1             : _ZN5IOBufIhLi8EE5resetEv                    : called @  ./rv32_io.h:L509 
do_rx.0                : _ZN4UART5do_rxEh                            : called @  ./rv32_io.h:L770 
activate.0             : _ZN9UART_PORT8activateEj                    : called @  rv32_io.cpp:L343 
adjust_word            : _ZN4UART11adjust_wordEv                     : called @  rv32_io.cpp:L366 
parity_bit.0           : _ZN4UART10parity_bitEh                      : called @  rv32_io.cpp:L374 
activate.1             : _ZN9UART_PORT8activateEj                    : called @  rv32_io.cpp:L381 
update_1.0             : _ZN5IOBufIhLi8EE6updateEii                  : called @  rv32_io.cpp:L386 
nxt_pnt.0              : _Z7nxt_pnti                                 : called @  ./rv32_io.h:L71 
nxt_pnt.1              : _Z7nxt_pnti                                 : called @  ./rv32_io.h:L72 
llvm.memset.p0i8.i64.0 :                                             : called @  ./rv32_io.h:L779 
update_0               : _ZN10PROBE_UART6updateEhii                  : called @  ./rv32_io.h:L774 
do_tx.0                : _ZN4UART5do_txEhj                           : called @  ./rv32_io.h:L792 
activate.2             : _ZN9UART_PORT8activateEj                    : called @  rv32_io.cpp:L248 
parity_bit.1           : _ZN4UART10parity_bitEh                      : called @  rv32_io.cpp:L280 
activate.3             : _ZN9UART_PORT8activateEj                    : called @  rv32_io.cpp:L292 
update_1.1             : _ZN5IOBufIhLi8EE6updateEii                  : called @  rv32_io.cpp:L308 
nxt_pnt.2              : _Z7nxt_pnti                                 : called @  ./rv32_io.h:L71 
nxt_pnt.3              : _Z7nxt_pnti                                 : called @  ./rv32_io.h:L72 
do_tx.1                : _ZN4UART5do_txEhj                           : called @  ./rv32_io.h:L789 
activate.4             : _ZN9UART_PORT8activateEj                    : called @  rv32_io.cpp:L248 
parity_bit.2           : _ZN4UART10parity_bitEh                      : called @  rv32_io.cpp:L280 
activate.5             : _ZN9UART_PORT8activateEj                    : called @  rv32_io.cpp:L292 
update_1.2             : _ZN5IOBufIhLi8EE6updateEii                  : called @  rv32_io.cpp:L308 
nxt_pnt.4              : _Z7nxt_pnti                                 : called @  ./rv32_io.h:L71 
nxt_pnt.5              : _Z7nxt_pnti                                 : called @  ./rv32_io.h:L72 
-----------------------------------------------------------
there are 31 unowned nodes...
(0:G.prv._(*this).cycle)(1:G.prv._(*this).uart.rx.buf.buf)(2:G.prv._(*this).uart.baud_period_m1)(3:G.prv._(*this).uart.rx.bit_n)
(4:G.prv._(*this).uart.stop_count)(5:G.prv._(*this).uart.parity_type)(6:G.prv._(*this).uart.rx.bit_pos)(7:G.prv._(*this).uart.rx.state)
(8:G.prv._(*this).uart.rx.tick)(9:G.prv._(*this).uart.rx.buf.wp)(10:G.prv._(*this).uart.rx.buf.full)(11:G.prv._(*this).uart.rx.buf.rp)
(12:G.prv._(*this).uart.rx.buf.not_empty)(13:G.prv._(*this).mode)(14:G.prv._(*this).rx_pnt)(15:G.prv._(*this).state)
(16:G.prv._(*this).uart.bit_count_m1)(17:G.prv._(*this).uart.rx.word)(18:G._(*this).uart.rx.buf.buf.REF)(19:G.prv._(*this).uart.tx.buf.wp)
(20:G.prv._(*this).uart.tx.buf.full)(21:G.prv._(*this).uart.tx.buf.rp)(22:G.prv._(*this).uart.tx.buf.not_empty)(23:G.prv._(*this).uart.tx.bit_pos)
(24:G.prv._(*this).uart.tx.state)(25:G.prv._(*this).uart.tx.tick)(26:G.prv._(*this).uart.rx.parity)(27:G.prv._(*this).clear_rx_buf)
(28:G.prv._(*this).uart.tx.buf.buf)(29:G.prv._(*this).uart.tx.word)(30:G.prv._(*this).uart.tx.parity)
(unownedNodeStats : 52.0 gates, 31 nodes) : 0.0 comb-gates + 0 pipeBits + 8 stateBits + 0 FBBits
(_PROBE_UART_step : 7560.0 gates, 1150 nodes) : 2789.0 comb-gates + 6 pipeBits + 728 stateBits + 0 FBBits
  (excl.sub-modules : 5887.0 gates, 821 nodes) : 1675.0 comb-gates + 4 pipeBits + 644 stateBits + 0 FBBits
  (_1_write_command : 201.5 gates, 22 nodes) : 104.0 comb-gates + 0 pipeBits + 15 stateBits + 0 FBBits
    (excl.sub-modules : 201.5 gates, 22 nodes) : 104.0 comb-gates + 0 pipeBits + 15 stateBits + 0 FBBits
    (_1_1_reset_port : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_1_1_1_reset_14 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_1_2_reset_port : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_1_2_1_reset_14 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_2_do_rx : 732.5 gates, 139 nodes) : 492.0 comb-gates + 0 pipeBits + 37 stateBits + 0 FBBits
    (excl.sub-modules : 583.5 gates, 104 nodes) : 343.0 comb-gates + 0 pipeBits + 37 stateBits + 0 FBBits
    (_2_1_activate : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_2_2_adjust_word : 52.0 gates, 17 nodes) : 52.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_2_3_parity_bit : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_2_4_activate : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_2_5_update_1 : 97.0 gates, 18 nodes) : 97.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 51.0 gates, 10 nodes) : 51.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_2_5_1_nxt_pnt : 23.0 gates, 4 nodes) : 23.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_2_5_2_nxt_pnt : 23.0 gates, 4 nodes) : 23.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_3_llvm.memset.p0i8.i64 : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_4_update_0 : 321.0 gates, 32 nodes) : 100.0 comb-gates + 2 pipeBits + 32 stateBits + 0 FBBits
    (excl.sub-modules : 321.0 gates, 32 nodes) : 100.0 comb-gates + 2 pipeBits + 32 stateBits + 0 FBBits
  (_5_do_tx : 322.0 gates, 97 nodes) : 322.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 248.0 gates, 72 nodes) : 248.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_5_1_activate : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_5_2_parity_bit : 11.0 gates, 13 nodes) : 11.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_5_3_activate : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_5_4_update_1 : 63.0 gates, 12 nodes) : 63.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 40.0 gates, 8 nodes) : 40.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_5_4_1_nxt_pnt : 23.0 gates, 4 nodes) : 23.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_5_4_2_nxt_pnt : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
  (_6_do_tx : 96.0 gates, 39 nodes) : 96.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (excl.sub-modules : 20.0 gates, 22 nodes) : 20.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_6_1_activate : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_6_2_parity_bit : 2.0 gates, 1 nodes) : 2.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_6_3_activate : 0.0 gates, 0 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
    (_6_4_update_1 : 74.0 gates, 16 nodes) : 74.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (excl.sub-modules : 51.0 gates, 11 nodes) : 51.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_6_4_1_nxt_pnt : 0.0 gates, 1 nodes) : 0.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
      (_6_4_2_nxt_pnt : 23.0 gates, 4 nodes) : 23.0 comb-gates + 0 pipeBits + 0 stateBits + 0 FBBits
*********************************************************
       _PROBE_UART_step :    5887.0 gates(acc:  77.87%),    1675.0 comb-gates +    4 pipeBits + 644 stateBits +   0 FBBits
               _2_do_rx :     583.5 gates(acc:  85.59%),     343.0 comb-gates +    0 pipeBits +  37 stateBits +   0 FBBits
            _4_update_0 :     321.0 gates(acc:  89.83%),     100.0 comb-gates +    2 pipeBits +  32 stateBits +   0 FBBits
               _5_do_tx :     248.0 gates(acc:  93.12%),     248.0 comb-gates +    0 pipeBits +   0 stateBits +   0 FBBits
**********************************************************/



module PROBE_UART_step   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_uidx, G_rx_in, G_probe_uart_port_tx_data, G_probe_uart_port_valid_in, 

    /* outputs */
    G_tx_out, G_probe_uart_port_ready

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input        G_uidx                    ; /// <0,1> [U1]  ;
  input        G_rx_in                   ; /// <0,1> [U1]  ;
  input [ 7:0] G_probe_uart_port_tx_data ; /// <0,255> [U8];
  input        G_probe_uart_port_valid_in; /// <0,1> [U1]  ;

  /*output ports*/
  output       G_tx_out               ; /// <0,1> [U1];
  output       G_probe_uart_port_ready; /// <0,1> [U1];

  /*probe ports*/
  wire         _prb_PROBE_UART_step_pSetup;

  PROBE_UART_step_probed #(M_ID) M0   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_uidx, G_rx_in, G_probe_uart_port_tx_data, G_probe_uart_port_valid_in, 

    /* outputs */
    G_tx_out, G_probe_uart_port_ready, 

    /*probes*/
    _prb_PROBE_UART_step_pSetup

  );

endmodule // PROBE_UART_step

module PROBE_UART_step_probed   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_uidx, G_rx_in, G_probe_uart_port_tx_data, G_probe_uart_port_valid_in, 

    /* outputs */
    G_tx_out, G_probe_uart_port_ready, 

    /*probes*/
    _prb_PROBE_UART_step_pSetup

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input        G_uidx                    ; /// <0,1> [U1]  ;
  input        G_rx_in                   ; /// <0,1> [U1]  ;
  input [ 7:0] G_probe_uart_port_tx_data ; /// <0,255> [U8];
  input        G_probe_uart_port_valid_in; /// <0,1> [U1]  ;

  /*output ports*/
  output       G_tx_out               ; /// <0,1> [U1];
  output       G_probe_uart_port_ready; /// <0,1> [U1];

  /*probe ports*/
  output       _prb_PROBE_UART_step_pSetup;

  PROBE_UART_step_no_mem #(M_ID) M0   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_uidx, G_rx_in, G_probe_uart_port_tx_data, G_probe_uart_port_valid_in, 

    /* outputs */
    G_tx_out, G_probe_uart_port_ready, 

    /*probes*/
    _prb_PROBE_UART_step_pSetup

  );

endmodule // PROBE_UART_step_probed

/// skipped memWrapper...

module PROBE_UART_step_no_mem   (
    /* global inputs */
    clk, rst_n,

    /* inputs */
    G_uidx, G_rx_in, G_probe_uart_port_tx_data, G_probe_uart_port_valid_in, 

    /* outputs */
    G_tx_out, G_probe_uart_port_ready, 

    /*probes*/
    _prb_PROBE_UART_step_pSetup

  );
  parameter M_ID = 0; // module ID

  
  /*input ports*/
  input        clk;
  input        rst_n;
  input        G_uidx                    ; /// <0,1> [U1]  ;
  input        G_rx_in                   ; /// <0,1> [U1]  ;
  input [ 7:0] G_probe_uart_port_tx_data ; /// <0,255> [U8];
  input        G_probe_uart_port_valid_in; /// <0,1> [U1]  ;

  /*output ports*/
  output       G_tx_out               ; /// <0,1> [U1];
  reg          G_tx_out               ;
  output       G_probe_uart_port_ready; /// <0,1> [U1];
  reg          G_probe_uart_port_ready;

  /*probe ports*/
  output       _prb_PROBE_UART_step_pSetup;

  wire      ROOT_CP = 1'b1; /// root control path (always active)

  reg[31:0] G__this_cycle;
  reg       G__this_uart_rx_buf_not_empty, G__this_uart_rx_buf_full;
  reg[ 3:0] G__this_uart_rx_buf_rp, G__this_uart_rx_buf_wp;
  reg[ 7:0] G__this_uart_rx_buf_buf[0:2];
  reg[ 7:0] G__this_uart_rx_word;
  reg[ 1:0] G__this_uart_rx_state;
  reg       G__this_uart_rx_bit_n, G__this_uart_rx_parity;
  reg[ 3:0] G__this_uart_rx_bit_pos;
  reg[15:0] G__this_uart_rx_tick;
  reg       G__this_uart_tx_buf_not_empty, G__this_uart_tx_buf_full;
  reg[ 3:0] G__this_uart_tx_buf_rp, G__this_uart_tx_buf_wp;
  reg[ 7:0] G__this_uart_tx_buf_buf[0:2];
  reg[ 7:0] G__this_uart_tx_word;
  reg[ 1:0] G__this_uart_tx_state;
  reg       G__this_uart_tx_bit_n, G__this_uart_tx_parity;
  reg[ 3:0] G__this_uart_tx_bit_pos;
  reg[15:0] G__this_uart_tx_tick;
  reg[10:0] G__this_uart_baud_period_m1;
  reg[ 2:0] G__this_uart_bit_count_m1;
  reg       G__this_uart_stop_count, G__this_uart_parity_type;
  reg[ 1:0] G__this_state;
  reg[ 7:0] G__this_rx_buf[0:59];
  reg[15:0] G__this_rx_pnt;
  reg       G__this_clear_rx_buf;
  reg[31:0] G__this_mode;
  reg       _p1_CP_PROBE_UART_step_B02_F1, _p1_CP_PROBE_UART_step_B06_F2, 
    _p1_G_uidx, _p1_I_PROBE_UART_step_B12_1, _p1_I_update_0_B01_7, 
    _p1_I_update_0_B04_1, _p1_PROBE_UART_step_pSetup;
  reg[31:0] _p1_DFB_G__this_cycle/*prv*/;

function[ 7:0] _lut_G_HIDDEN_GLOBAL_62;
  input[ 3:0] idx0;
  case(idx0)
    4'd0  : _lut_G_HIDDEN_GLOBAL_62 = 8'h3c;
    4'd1  : _lut_G_HIDDEN_GLOBAL_62 = 8'h55;
    4'd2  : _lut_G_HIDDEN_GLOBAL_62 = 8'h41;
    4'd3  : _lut_G_HIDDEN_GLOBAL_62 = 8'h52;
    4'd4  : _lut_G_HIDDEN_GLOBAL_62 = 8'h54;
    4'd5  : _lut_G_HIDDEN_GLOBAL_62 = 8'h5f;
    4'd6  : _lut_G_HIDDEN_GLOBAL_62 = 8'h45;
    4'd7  : _lut_G_HIDDEN_GLOBAL_62 = 8'h58;
    4'd8  : _lut_G_HIDDEN_GLOBAL_62 = 8'h54;
    4'd9  : _lut_G_HIDDEN_GLOBAL_62 = 8'h2d;
    4'd10 : _lut_G_HIDDEN_GLOBAL_62 = 8'h31;
    4'd11 : _lut_G_HIDDEN_GLOBAL_62 = 8'h3e;
    4'd12 : _lut_G_HIDDEN_GLOBAL_62 = 8'h0;
    default : _lut_G_HIDDEN_GLOBAL_62 = 8'hx;
  endcase
endfunction /*_lut_G_HIDDEN_GLOBAL_62*/


function[ 7:0] _WIRE_ARRAY_8_3;
  input[ 1:0] idx0;
  input[ 7:0] din00,din01,din02;
  case(idx0)
    2'd0  : _WIRE_ARRAY_8_3 = din00;
    2'd1  : _WIRE_ARRAY_8_3 = din01;
    2'd2  : _WIRE_ARRAY_8_3 = din02;
    default : _WIRE_ARRAY_8_3 = 8'hx;
  endcase
endfunction /*_WIRE_ARRAY_8_3*/


wire [479:0] CONV_STRING_G__this_rx_buf = {  /*""*/
  G__this_rx_buf[0], G__this_rx_buf[1], G__this_rx_buf[2], G__this_rx_buf[3], G__this_rx_buf[4], 
  G__this_rx_buf[5], G__this_rx_buf[6], G__this_rx_buf[7], G__this_rx_buf[8], G__this_rx_buf[9], 
  G__this_rx_buf[10], G__this_rx_buf[11], G__this_rx_buf[12], G__this_rx_buf[13], G__this_rx_buf[14], 
  G__this_rx_buf[15], G__this_rx_buf[16], G__this_rx_buf[17], G__this_rx_buf[18], G__this_rx_buf[19], 
  G__this_rx_buf[20], G__this_rx_buf[21], G__this_rx_buf[22], G__this_rx_buf[23], G__this_rx_buf[24], 
  G__this_rx_buf[25], G__this_rx_buf[26], G__this_rx_buf[27], G__this_rx_buf[28], G__this_rx_buf[29], 
  G__this_rx_buf[30], G__this_rx_buf[31], G__this_rx_buf[32], G__this_rx_buf[33], G__this_rx_buf[34], 
  G__this_rx_buf[35], G__this_rx_buf[36], G__this_rx_buf[37], G__this_rx_buf[38], G__this_rx_buf[39], 
  G__this_rx_buf[40], G__this_rx_buf[41], G__this_rx_buf[42], G__this_rx_buf[43], G__this_rx_buf[44], 
  G__this_rx_buf[45], G__this_rx_buf[46], G__this_rx_buf[47], G__this_rx_buf[48], G__this_rx_buf[49], 
  G__this_rx_buf[50], G__this_rx_buf[51], G__this_rx_buf[52], G__this_rx_buf[53], G__this_rx_buf[54], 
  G__this_rx_buf[55], G__this_rx_buf[56], G__this_rx_buf[57], G__this_rx_buf[58], G__this_rx_buf[59]
};

task printf_gep_array_0; /// I.write_command.0.B08.1  = AD.3 ; // (NL) [F(4.0)<0>,B(2.0)<0>] <00,ff> [U8] <B> P1 t[i8*] op[load] (rv32_io.cpp:L466)[UART::write_command]
  input[1:0] idx;
  case(idx)
    2'd0 : $write("<UART_AXI-0>");
    2'd1 : $write("<UART_EXT-0>");
    default : $write("<UART_AXI-1>");
  endcase
endtask



  //// pipe-stage(2) : combinational-logic...

wire[10:0] I_write_command_0_B13_00 =  G__this_uart_baud_period_m1         ; //  <B>(NL) [F(0.0)<1>,B(2.0,13.0)<0>] <0,1301> [U11] P2 OP(assign:=)(rv32_io.cpp:L474)[UART::write_command]
wire[10:0] I_write_command_0_B13_02 =  I_write_command_0_B13_00 + 11'h1    ; //  <B>(L2.0+C11.0+A33.0+ld[1]) [F(13.0,2.0)<1>,B(2.0,13.0)<0>] <1,1302> [U11] P2 OP(add:+)(rv32_io.cpp:L474)[UART::write_command]
wire[ 2:0] I_write_command_0_B13_03 =  G__this_uart_bit_count_m1           ; //  <B>(NL) [F(0.0)<1>,B(2.0,6.0)<0>] <0,7> [U3] P2 OP(assign:=)(rv32_io.cpp:L474)[UART::write_command]
wire[ 3:0] I_write_command_0_B13_05 =  {1'b0,I_write_command_0_B13_03} + 4'h1; //  <B>(L2.0+C4.0+A12.0+ld[1]) [F(6.0,2.0)<1>,B(2.0,6.0)<0>] <1,8> [U4] P2 OP(add:+)(rv32_io.cpp:L474)[UART::write_command]
wire       I_write_command_0_B13_06 =  G__this_uart_stop_count             ; //  <B>(NL) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(assign:=)(rv32_io.cpp:L474)[UART::write_command]
wire       I_write_command_0_B13_08 =  G__this_uart_parity_type            ; //  <B>(NL) [F(0.0)<1>,B(0.0)<0>] <0,0> [U0] P2 OP(assign:=)(rv32_io.cpp:L474)[UART::write_command]
wire       A_1370            =  _p1_I_update_0_B04_1 & _p1_I_update_0_B01_7; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<0>,B(2.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L735)[PROBE_UART::update]
wire       CP_update_0_B04_F1   =  A_1370 & _p1_CP_PROBE_UART_step_B06_F2  ; //  <B>(L1.0+A1.0+ld[1:1]) [F(2.0)<0>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L735)[PROBE_UART::update]
wire       CE_0122              =  ! _p1_I_update_0_B04_1                  ; //  <B>(fo1+ld[1]) [F(0.0)<0>,B(2.0)<0>] <0,1> [U1] P2 OP(not:!)(./rv32_io.h:L735)[PROBE_UART::update]
wire       A_1371               =  CE_0122 & _p1_I_update_0_B01_7          ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<0>,B(2.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L735)[PROBE_UART::update]
wire       CP_update_0_B04_F2   =  A_1371 & _p1_CP_PROBE_UART_step_B06_F2  ; //  <B>(L1.0+A1.0+ld[1:1]) [F(2.0)<0>,B(1.0)<0>] <0,1> [U1] P2 OP(and:&)(./rv32_io.h:L735)[PROBE_UART::update]
wire       I_PROBE_UART_step_B17_4 =  ! G__this_uart_tx_bit_n              ; // (comb-Out/FFSink) (fo1+ld[1]) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(not:!)(./rv32_io.h:L811)[PROBE_UART::step]


  //// pipe-stage(2)  : printf...

  task print_string_rx_buf;
  integer i;
  for (i = 0; i < 60; i = i + 1)
    if (G__this_rx_buf[i]) $write("%c", G__this_rx_buf[i]);
  endtask

`define USE_PRINT_STRING

  always @ (posedge clk) if (rst_n) begin
    if (_p1_CP_PROBE_UART_step_B02_F1)  $write(" (activate) : baud_period(%d), bit_count(%d), stop_count(%d), parity_type(%d)\n", I_write_command_0_B13_02, I_write_command_0_B13_05, I_write_command_0_B13_06, I_write_command_0_B13_08); //  <B*> [F(13.0,2.0)<1>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(rv32_io.cpp:L473)[UART::write_command]
`ifdef USE_PRINT_STRING
    if (CP_update_0_B04_F1           )  print_string_rx_buf(); //  <B*> [F(2.0)<1>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(./rv32_io.h:L738)[PROBE_UART::update]
    if (CP_update_0_B04_F2           )
    begin
      $write("[%6d] <UART_X-%d.RX> ", _p1_DFB_G__this_cycle/*prv*/, _p1_G_uidx); //  <B*> [F(2.0)<1>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(./rv32_io.h:L736)[PROBE_UART::update]
      print_string_rx_buf();
    end
`else
    if (CP_update_0_B04_F1           )  $write("%s", CONV_STRING_G__this_rx_buf); //  <B*> [F(2.0)<1>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(./rv32_io.h:L738)[PROBE_UART::update]
    if (CP_update_0_B04_F2           )  $write("[%6d] <UART_X-%d.RX> %s", _p1_DFB_G__this_cycle/*prv*/, _p1_G_uidx, CONV_STRING_G__this_rx_buf); //  <B*> [F(2.0)<1>,B(0.0)<0>] <0,0> [U0] ZLB(64) P2(./rv32_io.h:L736)[PROBE_UART::update]
`endif
  end /// printfNodes


  //// pipe-stage(2)  : state-registers...

  always @ (posedge clk or negedge rst_n) begin
  if (rst_n == 1'b0) begin
    G_tx_out                <= 1'h0;
    G_probe_uart_port_ready <= 1'h0;
  end /// (rst_n == 1'b0)
  else begin /*reg-assignments*/
    if (ROOT_CP) begin
      G_tx_out                <= (_p1_PROBE_UART_step_pSetup) ? I_PROBE_UART_step_B17_4 : 1'h0    ; // (comb-Out) (ld[1:1]+S+@) [F(0.0)<1>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L811)[PROBE_UART::step]
      G_probe_uart_port_ready <= (_p1_PROBE_UART_step_pSetup) ? _p1_I_PROBE_UART_step_B12_1 : 1'h0; // (comb-Out) (ld[1:1]+S+@) [F(0.0)<0>,B(0.0)<0>] <0,1> [U1] P2 OP(clk:@)(./rv32_io.h:L787)[PROBE_UART::step]
    end /// (ROOT_CP)
  end /// reg-assignments
  end /// always @ ...


  //// pipe-stage(1) : combinational-logic...

wire[31:0] I_PROBE_UART_step_B17_1 =  G__this_cycle/*prv*/ + 32'h1         ; // GRP.10 <B>(L2.0+C32.0+A96.0+fo1+ld[1]) [F(34.0,2.0)<0>,B(2.0,34.0)<1>] <0,4294967295> [U32] P1 OP(add:+)(./rv32_io.h:L810)[PROBE_UART::step]
wire       CP_PROBE_UART_step_B01_F1 =  G__this_state/*prv*/ == 2'h0       ; // GRP.15 <B>(L1.0+A1.0+fo3+ld[1]+S) [F(1.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L761)[PROBE_UART::step]
wire[ 1:0] I_PROBE_UART_step_B02_2 =  {G_uidx,1'b0}/*<<1*/                 ; //  <B>(NL) [F(0.0)<0>,B(25.0)<1>] <0,2> [U2] ZLB(1) P1 OP(shl:<<)(./rv32_io.h:L761)[PROBE_UART::step]
wire       I_PROBE_UART_step_B02_3 =  G__this_cycle/*prv*/ == {30'b0,I_PROBE_UART_step_B02_2}; //  <B>(L7.0+A95.0+fo2+ld[1:1]+S) [F(7.0)<0>,B(25.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L761)[PROBE_UART::step]
wire       CP_PROBE_UART_step_B02_F1 =  CP_PROBE_UART_step_B01_F1 & I_PROBE_UART_step_B02_3; // GRP.15 <B>(L1.0+A1.0+fo26+ld[1:1]) [F(8.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L761)[PROBE_UART::step]
wire       E_PROBE_UART_step_B01_1 =  ! CP_PROBE_UART_step_B01_F1          ; // GRP.15 <B>(fo1+ld[1]) [F(1.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L761)[PROBE_UART::step]
wire       CE_0011              =  ! I_PROBE_UART_step_B02_3               ; //  <B>(fo1+ld[1]) [F(7.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L761)[PROBE_UART::step]
wire       E_PROBE_UART_step_B02_1 =  CP_PROBE_UART_step_B01_F1 & CE_0011  ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L761)[PROBE_UART::step]
wire       CP_PROBE_UART_step_B01_F2_B02_F2 =  E_PROBE_UART_step_B01_1 | E_PROBE_UART_step_B02_1; // GRP.15 <B>(L1.0+A1.0+fo86+ld[1:1]) [F(9.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L761,L761)[PROBE_UART::step]
wire       I_do_rx_0_B01_09     =  ! G__this_uart_rx_bit_n/*prv*/          ; // GRP.15 <B>(fo11+ld[1]) [F(0.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L332)[UART::do_rx]
wire[ 1:0] N_0002               =  G__this_uart_rx_state/*prv*/ & 2'h3     ; // GRP.15 <B>(NL) [F(0.0)<0>,B(18.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L361)[UART::do_rx]
wire       CE_0072              =  N_0002 == 2'h3                          ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L361)[UART::do_rx]
wire       I_do_rx_0_B03_2      =  G__this_uart_rx_state/*prv*/ == 2'h0    ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L342)[UART::do_rx]
wire       I_do_rx_0_B03_4 =  I_do_rx_0_B03_2 & G__this_uart_rx_bit_n/*prv*/; // GRP.15 <B>(L1.0+A1.0+fo4+ld[1:1]) [F(2.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342)[UART::do_rx]
wire       CE_0041              =  ! I_do_rx_0_B03_4                       ; // GRP.15 <B>(fo1+ld[1]) [F(2.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L342)[UART::do_rx]
wire       CE_0044              =  ! I_do_rx_0_B03_2                       ; // GRP.15 <B>(fo1+ld[1]) [F(1.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L345)[UART::do_rx]
wire       QC_0363              =  CE_0041 & CE_0044                       ; // GRP.15 <B>(L1.0+A1.0+fo5+ld[1:1]) [F(3.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       A_1310               =  CE_0072 & QC_0363                       ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(4.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       A_1324               =  I_do_rx_0_B01_09 & A_1310               ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       CE_0070              =  N_0002 == 2'h2                          ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L361)[UART::do_rx]
wire       A_1311               =  CE_0070 & QC_0363                       ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(4.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       AO_1347              =  A_1324 | A_1311                         ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(6.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire[ 4:0] sub_I_do_rx_0_B17_2 = {1'b0,1'b0,G__this_uart_bit_count_m1/*prv*/} - {1'b0,G__this_uart_rx_bit_pos/*prv*/}; // G__this_uart_rx_bit_pos/*prv*/ > G__this_uart_bit_count_m1/*prv*/
wire       I_do_rx_0_B17_2      = (sub_I_do_rx_0_B17_2[4])                ; // GRP.15 <B>(L2.0+C7.0+A16.0+fo4+ld[1:1]+S) [F(9.0)<0>,B(18.0,25.0)<1>] <0,1> [U1] P1 OP(gt:>)(rv32_io.cpp:L363)[UART::do_rx]
wire       CE_0075              =  ! I_do_rx_0_B17_2                       ; // GRP.15 <B>(fo2+ld[1]) [F(9.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L363)[UART::do_rx]
wire       AO_1352              =  I_do_rx_0_B17_2 | CE_0075               ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       CE_0068              =  N_0002 == 2'h1                          ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L361)[UART::do_rx]
wire       A_1312               =  CE_0068 & QC_0363                       ; // GRP.15 <B>(L1.0+A1.0+fo3+ld[1:1]) [F(4.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       AO_1351              =  AO_1352 & A_1312                        ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       AO_1376              =  AO_1347 | AO_1351                       ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire[16:0] sub_I_do_rx_0_B07_2 = {1'b0,G__this_uart_rx_tick/*prv*/} - {1'b0,5'b0,G__this_uart_baud_period_m1/*prv*/}; // G__this_uart_rx_tick/*prv*/ < G__this_uart_baud_period_m1/*prv*/
wire       I_do_rx_0_B07_2      = (sub_I_do_rx_0_B07_2[16])               ; // GRP.15 <B>(L2.0+C27.0+A60.0+fo30+ld[1:1]+S) [F(29.0)<0>,B(15.0,42.0)<1>] <0,1> [U1] P1 OP(lt:<)(rv32_io.cpp:L346)[UART::do_rx]
wire       CE_0047              =  ! I_do_rx_0_B07_2                       ; // GRP.15 <B>(fo17+ld[1]) [F(29.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L346)[UART::do_rx]
wire       CM_1246              =  AO_1376 & CE_0047                       ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       A_1323               =  G__this_uart_rx_bit_n/*prv*/ & A_1310   ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       QC_0366              =  A_1323 & CE_0047                        ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(30.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       O_1400               =  CM_1246 | QC_0366                       ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       I_do_rx_0_B08_0      =  G__this_uart_rx_state/*prv*/ == 2'h3    ; // GRP.15 <B>(L1.0+A1.0+fo3+ld[1]+S) [F(1.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L347)[UART::do_rx]
wire       I_do_rx_0_B09_1      =  G__this_uart_rx_bit_pos/*prv*/ == 4'h0  ; // GRP.15 <B>(L2.0+A3.0+fo1+ld[1]+S) [F(2.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L347)[UART::do_rx]
wire       CE_0053              =  ! I_do_rx_0_B09_1                       ; // GRP.15 <B>(fo2+ld[1]) [F(2.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L347)[UART::do_rx]
wire       QC_0327              =  I_do_rx_0_B08_0 & CE_0053               ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L346,L347,L347)[UART::do_rx]
wire       CM_1223              =  QC_0327 | I_do_rx_0_B08_0               ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L346,L347,L347)[UART::do_rx]
wire       I_do_rx_0_B10_1 =  {1'b0,G__this_uart_stop_count/*prv*/} == 2'h3; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1]+S) [F(1.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L347)[UART::do_rx]
wire       MA_1299            =  (I_do_rx_0_B08_0) ? I_do_rx_0_B10_1 : 1'h0; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L346,L347,L347)[UART::do_rx]
wire       DM_1224              =  (CE_0053) ? MA_1299 : 1'h0              ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L346,L347,L347)[UART::do_rx]
wire       DM_1225              =  (CM_1223) ? DM_1224 : 1'h0              ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(5.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L346,L347,L347)[UART::do_rx]
wire[ 9:0] I_do_rx_0_B11_1 =  G__this_uart_baud_period_m1/*prv*/[10:1]/*>>1*/; // GRP.15 <B>(NL) [F(0.0)<0>,B(22.0)<1>] <0,650> [U10] P1 OP(shr:>>)(rv32_io.cpp:L348)[UART::do_rx]
wire       I_do_rx_0_B11_2 =  G__this_uart_rx_tick/*prv*/ == {6'b0,I_do_rx_0_B11_1}; // GRP.15 <B>(L6.0+A47.0+fo2+ld[1:1]+S) [F(6.0)<0>,B(21.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L348)[UART::do_rx]
wire       A_1313               =  I_do_rx_0_B11_2 & QC_0363               ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(7.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       A_1328               =  DM_1225 & A_1313                        ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       QC_0386              =  A_1328 & I_do_rx_0_B07_2                ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       O_1372               =  QC_0386 | I_do_rx_0_B03_4               ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       CM_1247              =  O_1400 | O_1372                         ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       A_1326               =  I_do_rx_0_B17_2 & A_1312                ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(10.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       I_do_rx_0_B18_4      =  ! G__this_uart_rx_buf_full/*prv*/       ; // GRP.15 <B>(fo2+ld[1]) [F(0.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L365)[UART::do_rx]
wire       MA_1348              =  (A_1326) ? I_do_rx_0_B18_4 : 1'h0       ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       DM_1241              =  (CE_0047) ? MA_1348 : 1'h0              ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       DM_1251              =  (CM_1247) ? DM_1241 : 1'h0              ; // GRP.15 <B>(L1.0+A1.0+fo7+ld[1:1]) [F(33.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       I_PROBE_UART_step_B05_1 =  ! G__this_uart_rx_buf_not_empty/*prv*/; // GRP.15 <B>(fo4+ld[1]) [F(0.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L769)[PROBE_UART::step]
wire[ 2:0] I_PROBE_UART_step_B05_2 =  (I_PROBE_UART_step_B05_1) ? 3'h0 : 3'h4; // GRP.15 <B>(L1.0+A3.0+fo1+ld[3:0:1]) [F(1.0)<0>,B(13.0)<1>] <0,4> [U3] P1 OP(sel:?)(./rv32_io.h:L770)[PROBE_UART::step]
wire       I_do_rx_0_B01_06     =  I_PROBE_UART_step_B05_2 == 3'h4         ; // GRP.15 <B>(L2.0+A2.0+fo1+ld[1]+S) [F(3.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L329)[UART::do_rx]
wire       I_do_rx_0_B01_07 =  I_do_rx_0_B01_06 & G__this_uart_rx_buf_not_empty/*prv*/; // GRP.15 <B>(L1.0+A1.0+fo15+ld[1:1]) [F(4.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L329)[UART::do_rx]
wire       I_update_1_0_B01_2   =  DM_1251 | I_do_rx_0_B01_07              ; // GRP.15 <B>(L1.0+A1.0+fo6+ld[1:1]) [F(34.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       CP_update_1_0_B01_F2 =  CP_PROBE_UART_step_B01_F2_B02_F2 & I_update_1_0_B01_2; // GRP.15 <B>(L1.0+A1.0+fo8+ld[1:1]) [F(35.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       CM_0519      =  CP_PROBE_UART_step_B02_F1 | CP_update_1_0_B01_F2; // GRP.15 <B>(L1.0+A1.0+fo10+ld[1:1]) [F(36.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L68,L73)[PROBE_UART::step]
wire       I_nxt_pnt_0_B1_0     =  G__this_uart_rx_buf_rp/*prv*/ == 4'h2   ; // GRP.15 <B>(L2.0+A3.0+fo5+ld[1]+S) [F(2.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_0_B1_1  =  {1'b0,G__this_uart_rx_buf_rp/*prv*/} + 5'h1; // GRP.15 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<0>,B(12.0,17.0)<1>] <1,16> [U5] P1 OP(add:+)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_0_B1_2 =  (I_nxt_pnt_0_B1_0) ? 5'h0 : I_nxt_pnt_0_B1_1; // GRP.15 <B>(L1.0+A5.0+fo1+ld[5:0:1]) [F(8.0,3.0)<0>,B(10.0)<1>] <0,16> [U5] P1 OP(sel:?)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] L_nxt_pnt_0_RET      =  I_nxt_pnt_0_B1_2                        ; // GRP.15 <B>(NL) [F(8.0,3.0)<0>,B(9.0)<1>] <0,16> [U5] P1 OP(assign:=)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] DM_1252 =  (I_do_rx_0_B01_07) ? L_nxt_pnt_0_RET : {1'b0,G__this_uart_rx_buf_rp/*prv*/}; // GRP.15 <B>(L2.0+A10.0+fo3+ld[5:1:1]) [F(10.0,6.0)<0>,B(9.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L71)[IOBuf<unsigned char, 8>::update]
wire       I_nxt_pnt_1_B1_0     =  G__this_uart_rx_buf_wp/*prv*/ == 4'h2   ; // GRP.15 <B>(L2.0+A3.0+fo5+ld[1]+S) [F(2.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_1_B1_1  =  {1'b0,G__this_uart_rx_buf_wp/*prv*/} + 5'h1; // GRP.15 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<0>,B(12.0,17.0)<1>] <1,16> [U5] P1 OP(add:+)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_1_B1_2 =  (I_nxt_pnt_1_B1_0) ? 5'h0 : I_nxt_pnt_1_B1_1; // GRP.15 <B>(L1.0+A5.0+fo1+ld[5:0:1]) [F(8.0,3.0)<0>,B(10.0)<1>] <0,16> [U5] P1 OP(sel:?)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] L_nxt_pnt_1_RET      =  I_nxt_pnt_1_B1_2                        ; // GRP.15 <B>(NL) [F(8.0,3.0)<0>,B(9.0)<1>] <0,16> [U5] P1 OP(assign:=)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] DM_1253 =  (DM_1251) ? L_nxt_pnt_1_RET : {1'b0,G__this_uart_rx_buf_wp/*prv*/}; // GRP.15 <B>(L2.0+A10.0+fo3+ld[5:1:1]) [F(35.0)<0>,B(9.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L72)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_0_B08_01  =  DM_1252 != DM_1253                      ; // GRP.15 <B>(L5.0+A14.0+fo1+ld[1:1]+S) [F(40.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(ne:!=)(./rv32_io.h:L73)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_0_B08_03  =  I_update_1_0_B08_01 | DM_1251           ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(41.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L73)[IOBuf<unsigned char, 8>::update]
wire       DM_0518   =  (CP_update_1_0_B01_F2) ? I_update_1_0_B08_03 : 1'h0; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(42.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L68,L73)[PROBE_UART::step]
wire       I_update_1_0_B08_06  =  DM_1252 == DM_1253                      ; // GRP.15 <B>(L5.0+A14.0+fo1+ld[1:1]+S) [F(40.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L74)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_0_B01_0   =  ! I_do_rx_0_B01_07                      ; // GRP.15 <B>(fo1+ld[1]) [F(4.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       MA_1459    =  (CP_update_1_0_B01_F2) ? I_update_1_0_B01_0 : 1'h0; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L68,L74)[PROBE_UART::step]
wire       DM_0520              =  I_update_1_0_B08_06 & MA_1459           ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(41.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L68,L74)[PROBE_UART::step]
wire[ 4:0] I_update_1_0_B08_10  =  DM_1252 & 5'h1f                         ; // GRP.15 <B>(NL) [F(10.0,6.0)<0>,B(2.0)<1>] <0,16> [U5] P1 OP(and:&)(./rv32_io.h:L75)[IOBuf<unsigned char, 8>::update]
wire[ 4:0] MA_1453 =  (CP_PROBE_UART_step_B01_F2_B02_F2) ? I_update_1_0_B08_10 : 5'h0; // GRP.15 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(11.0,10.0)<0>,B(2.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L68,L75)[PROBE_UART::step]
wire[ 4:0] DM_0522              =  (I_update_1_0_B01_2) ? MA_1453 : 5'h0   ; // GRP.15 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(35.0)<0>,B(1.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L68,L75)[PROBE_UART::step]
wire[ 4:0] I_update_1_0_B08_12  =  DM_1253 & 5'h1f                         ; // GRP.15 <B>(NL) [F(35.0)<0>,B(1.0)<1>] <0,16> [U5] P1 OP(and:&)(./rv32_io.h:L76)[IOBuf<unsigned char, 8>::update]
wire[ 4:0] DM_0524   =  (CP_update_1_0_B01_F2) ? I_update_1_0_B08_12 : 5'h0; // GRP.15 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(36.0)<0>,B(1.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L68,L76)[PROBE_UART::step]
wire       I_do_rx_0_B12_1      =  G__this_uart_rx_state/*prv*/ == 2'h1    ; // GRP.15(L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L352)[UART::do_rx]
wire       A_1329               =  I_do_rx_0_B12_1 & A_1313                ; // GRP.15(L1.0+A1.0+fo10+ld[1:1]) [F(8.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L353)[UART::do_rx]
wire       QC_0528              =  A_1329 & I_do_rx_0_B07_2                ; // GRP.15(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L353)[UART::do_rx]
wire       O_1373               =  QC_0366 | I_do_rx_0_B03_4               ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       CM_0531              =  QC_0528 | O_1373                        ; // GRP.15(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L353)[UART::do_rx]
wire       N_0532             =  CM_0531 & CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.15(L1.0+A1.0+fo9+ld[1:1]) [F(33.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L353)[UART::do_rx]
wire[ 6:0] I_do_rx_0_B13_2      =  G__this_uart_rx_word/*prv*/[7:1]/*>>1*/ ; // GRP.15(NL) [F(0.0)<0>,B(3.0)<0>] <0,127> [U7] P1 OP(shr:>>)(rv32_io.cpp:L353)[UART::do_rx]
wire[ 7:0] I_do_rx_0_B13_0      =  (I_do_rx_0_B01_09) ? 8'h80 : 8'h0       ; // GRP.15(L1.0+A8.0+fo1+ld[8:0:1]) [F(1.0)<0>,B(4.0)<0>] <0,128> [U8] P1 OP(sel:?)(rv32_io.cpp:L353)[UART::do_rx]
wire[ 7:0] I_do_rx_0_B13_3      =  {1'b0,I_do_rx_0_B13_2} | I_do_rx_0_B13_0; // GRP.15(L1.0+A7.0+fo1+ld[1:1]) [F(2.0)<0>,B(3.0)<0>] <0,255> [U8] P1 OP(or:|)(rv32_io.cpp:L353)[UART::do_rx]
wire[ 7:0] MA_1353              =  (A_1329) ? I_do_rx_0_B13_3 : 8'h0       ; // GRP.15(L1.0+A8.0+fo1+ld[8:1]) [F(9.0)<0>,B(2.0)<0>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L353)[UART::do_rx]
wire[ 7:0] DM_0529              =  (I_do_rx_0_B07_2) ? MA_1353 : 8'h0      ; // GRP.15(L1.0+A8.0+fo1+ld[8:1]) [F(30.0)<0>,B(1.0)<0>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L353)[UART::do_rx]
wire       CP_do_rx_0_B06_F2  =  QC_0363 & CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.15 <B>(L1.0+A1.0+fo22+ld[1:1]) [F(10.0)<0>,B(8.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L345)[UART::do_rx]
wire       A_1393               =  CE_0072 & CP_do_rx_0_B06_F2             ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(11.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L361)[UART::do_rx]
wire       A_1426               =  G__this_uart_rx_bit_n/*prv*/ & A_1393   ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L381)[UART::do_rx]
wire       CP_do_rx_0_B29_F2    =  A_1426 & CE_0047                        ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(30.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L381)[UART::do_rx]
wire       CP_do_rx_0_B03_F1 =  CP_PROBE_UART_step_B01_F2_B02_F2 & I_do_rx_0_B03_4; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(10.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342)[UART::do_rx]
wire       CM_0535         =  CP_PROBE_UART_step_B02_F1 | CP_do_rx_0_B03_F1; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire       CM_0538              =  CP_do_rx_0_B29_F2 | CM_0535             ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire       A_1392               =  CE_0070 & CP_do_rx_0_B06_F2             ; // GRP.15 <B>(L1.0+A1.0+fo3+ld[1:1]) [F(11.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L361)[UART::do_rx]
wire       A_1425               =  I_do_rx_0_B01_09 & A_1393               ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L381)[UART::do_rx]
wire       AO_1439              =  A_1392 | A_1425                         ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(13.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire       CM_0537              =  AO_1439 & CE_0047                       ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire       A_1390               =  I_do_rx_0_B11_2 & CP_do_rx_0_B06_F2     ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L350)[UART::do_rx]
wire       A_1422               =  DM_1225 & A_1390                        ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L356)[UART::do_rx]
wire       CP_do_rx_0_B14_F1    =  A_1422 & I_do_rx_0_B07_2                ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L356)[UART::do_rx]
wire       O_1446               =  CM_0537 | CP_do_rx_0_B14_F1             ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire       A_1391               =  CE_0068 & CP_do_rx_0_B06_F2             ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L361)[UART::do_rx]
wire       A_1423               =  I_do_rx_0_B17_2 & A_1391                ; // GRP.15 <B>(L1.0+A1.0+fo4+ld[1:1]) [F(12.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L363)[UART::do_rx]
wire       CP_do_rx_0_B17_F1    =  A_1423 & CE_0047                        ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L363)[UART::do_rx]
wire       CM_0540              =  O_1446 | CP_do_rx_0_B17_F1              ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire       CM_0542              =  CM_0538 | CM_0540                       ; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(33.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire       I_do_rx_0_B18_1      =  ! G__this_uart_parity_type/*prv*/       ; // GRP.15 <B>(fo2+ld[1]) [F(0.0)<0>,B(7.0)<1>] <1,1> [U1] P1 OP(not:!)(rv32_io.cpp:L364)[UART::do_rx]
wire[ 1:0] I_do_rx_0_B18_2      =  (I_do_rx_0_B18_1) ? 2'h3 : 2'h2         ; // GRP.15 <B>(L1.0+A2.0+fo3+ld[2:0:1]) [F(1.0)<0>,B(7.0)<1>] <2,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L364)[UART::do_rx]
wire[ 1:0] MA_1437              =  (A_1423) ? I_do_rx_0_B18_2 : 2'h0       ; // GRP.15 <B>(L1.0+A2.0+fo1+ld[2:1]) [F(13.0)<0>,B(5.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire[ 1:0] MA_1424              =  (A_1392) ? 2'h3 : 2'h0                  ; // GRP.15 <B>(L1.0+A2.0+fo1+ld[2:0:1]) [F(12.0)<0>,B(5.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire[ 1:0] MAO_1445             =  MA_1437 | MA_1424                       ; // GRP.15 <B>(L1.0+A2.0+fo1+ld[1:1]) [F(14.0)<0>,B(4.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire[ 1:0] DM_0541              =  (CE_0047) ? MAO_1445 : 2'h0             ; // GRP.15 <B>(L1.0+A2.0+fo1+ld[2:1]) [F(30.0)<0>,B(3.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire[ 1:0] O_1452               =  DM_0541 | {1'b0,CP_do_rx_0_B03_F1}      ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(2.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire[ 1:0] DM_0543              =  O_1452 | {1'b0,CP_do_rx_0_B29_F2}       ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(1.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
wire       CM_0545 =  CP_PROBE_UART_step_B02_F1 | CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L771)[PROBE_UART::step]
wire       I_PROBE_UART_step_B06_0 =  ! G_rx_in                            ; //  <B>(fo1+ld[1]) [F(0.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L771)[PROBE_UART::step]
wire       DM_0544 =  (CP_PROBE_UART_step_B01_F2_B02_F2) ? I_PROBE_UART_step_B06_0 : 1'h0; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L509,L771)[PROBE_UART::step]
wire       I_do_rx_0_B13_6 =  G__this_uart_rx_parity/*prv*/ ^ I_do_rx_0_B01_09; // GRP.12(L2.0+A2.0+fo1+ld[1:1]) [F(2.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(xor:^)(rv32_io.cpp:L354)[UART::do_rx]
wire       MA_1354              =  (A_1329) ? I_do_rx_0_B13_6 : 1'h0       ; // GRP.12(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L354)[UART::do_rx]
wire       DM_0546              =  (I_do_rx_0_B07_2) ? MA_1354 : 1'h0      ; // GRP.12(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L354)[UART::do_rx]
wire       A_1327               =  CE_0075 & A_1312                        ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       AO_1350              =  A_1327 | A_1311                         ; // GRP.15 <B>(L1.0+A1.0+fo6+ld[1:1]) [F(11.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       CM_0556              =  AO_1350 & CE_0047                       ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       QC_0372              =  A_1326 & CE_0047                        ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L342,L346,L347,L352,L356,L363,L365,L374,L381)[UART::do_rx]
wire       O_1399               =  CM_0556 | QC_0372                       ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       CM_0559              =  O_1373 | O_1399                         ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       N_0560             =  CM_0559 & CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.15 <B>(L1.0+A1.0+fo4+ld[1:1]) [F(33.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire[ 4:0] I_do_rx_0_B22_0  =  {1'b0,G__this_uart_rx_bit_pos/*prv*/} + 5'h1; // GRP.15 <B>(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<0>,B(4.0,9.0)<1>] <1,16> [U5] P1 OP(add:+)(rv32_io.cpp:L371)[UART::do_rx]
wire[ 4:0] MAO_1374             =  (AO_1350) ? I_do_rx_0_B22_0 : 5'h0      ; // GRP.15 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(12.0)<0>,B(2.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire[ 4:0] DM_0557              =  (CE_0047) ? MAO_1374 : 5'h0             ; // GRP.15 <B>(L1.0+A5.0+fo1+ld[5:1]) [F(30.0)<0>,B(1.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
wire       CP_do_rx_0_B07_F2    =  CP_do_rx_0_B06_F2 & CE_0047             ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L346)[UART::do_rx]
wire       CP_do_rx_0_B07_F1    =  CP_do_rx_0_B06_F2 & I_do_rx_0_B07_2     ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L346)[UART::do_rx]
wire       CM_0562         =  CP_PROBE_UART_step_B02_F1 | CP_do_rx_0_B07_F1; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509)(rv32_io.cpp:L349,L360)[PROBE_UART::step]
wire       CM_0563              =  CP_do_rx_0_B07_F2 | CM_0562             ; // GRP.15 <B>(L1.0+A1.0+fo16+ld[1:1]) [F(32.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509)(rv32_io.cpp:L349,L360)[PROBE_UART::step]
wire[15:0] I_do_rx_0_B11_3      =  G__this_uart_rx_tick/*prv*/ + 16'h1     ; // GRP.15 <B>(L2.0+C16.0+A48.0+fo1+ld[1]) [F(18.0,2.0)<0>,B(4.0,20.0)<1>] <0,65535> [U16] P1 OP(add:+)(rv32_io.cpp:L349)[UART::do_rx]
wire[15:0] MA_1389         =  (CP_do_rx_0_B06_F2) ? I_do_rx_0_B11_3 : 16'h0; // GRP.15 <B>(L1.0+A16.0+fo1+ld[16:1]) [F(19.0,11.0)<0>,B(2.0)<1>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L509)(rv32_io.cpp:L349,L360)[PROBE_UART::step]
wire[15:0] DM_0561              =  (I_do_rx_0_B07_2) ? MA_1389 : 16'h0     ; // GRP.15 <B>(L1.0+A16.0+fo1+ld[16:1]) [F(30.0)<0>,B(1.0)<1>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L509)(rv32_io.cpp:L349,L360)[PROBE_UART::step]
wire       I_PROBE_UART_step_B12_5 =  ! G_probe_uart_port_valid_in         ; // (fo1+ld[1]) [F(0.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L788)[PROBE_UART::step]
wire       I_PROBE_UART_step_B12_7 =  I_PROBE_UART_step_B12_5 | G__this_uart_tx_buf_full/*prv*/; // GRP.16(L1.0+A1.0+fo6+ld[1:1]) [F(1.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L788)[PROBE_UART::step]
wire       CE_0020              =  ! I_PROBE_UART_step_B12_7               ; // GRP.16(fo6+ld[1]) [F(1.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L788)[PROBE_UART::step]
wire       CP_PROBE_UART_step_B12_F2 =  CP_PROBE_UART_step_B01_F2_B02_F2 & CE_0020; // GRP.16(L1.0+A1.0+fo6+ld[1:1]) [F(10.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L788)[PROBE_UART::step]
wire       I_PROBE_UART_step_B12_1 =  ! G__this_uart_tx_buf_full/*prv*/    ; // GRP.16(fo3+ld[1]) [F(0.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L787)[PROBE_UART::step]
wire[ 4:0] sub_I_do_tx_0_B18_2 = {1'b0,G__this_uart_tx_bit_pos/*prv*/} - {1'b0,3'b0,G__this_uart_stop_count/*prv*/}; // G__this_uart_tx_bit_pos/*prv*/ < G__this_uart_stop_count/*prv*/
wire       I_do_tx_0_B18_2      = (sub_I_do_tx_0_B18_2[4])                ; // GRP.16(L2.0+C5.0+A8.0+fo6+ld[1:1]+S) [F(7.0)<0>,B(20.0,25.0)<1>] <0,1> [U1] P1 OP(lt:<)(rv32_io.cpp:L284)[UART::do_tx]
wire[ 1:0] N_0005               =  G__this_uart_tx_state/*prv*/ & 2'h3     ; // GRP.16(NL) [F(0.0)<0>,B(20.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       CE_0153              =  N_0005 == 2'h3                          ; // GRP.16(L1.0+A1.0+fo5+ld[1]+S) [F(1.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L265)[UART::do_tx]
wire       I_do_tx_0_B01_13     =  G__this_uart_tx_state/*prv*/ == 2'h0    ; // GRP.16(L1.0+A1.0+fo6+ld[1]+S) [F(1.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L244)[UART::do_tx]
wire       CE_0128              =  ! I_do_tx_0_B01_13                      ; // GRP.16(fo7+ld[1]) [F(1.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L244)[UART::do_tx]
wire       A_1301               =  CE_0153 & CE_0128                       ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(2.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       A_1305               =  I_do_tx_0_B18_2 & A_1301                ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       I_do_tx_0_B01_01     =  ! G__this_uart_tx_buf_not_empty/*prv*/  ; // GRP.16(fo3+ld[1]) [F(0.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L239)[UART::do_tx]
wire       CE_0159              =  ! I_do_tx_0_B18_2                       ; // GRP.16(fo5+ld[1]) [F(7.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L284)[UART::do_tx]
wire       A_1306               =  CE_0159 & A_1301                        ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(8.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       A_1314               =  I_do_tx_0_B01_01 & A_1306               ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(9.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       AO_1331              =  A_1305 | A_1314                         ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       A_1315          =  G__this_uart_tx_buf_not_empty/*prv*/ & A_1306; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(9.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       CE_0151              =  N_0005 == 2'h2                          ; // GRP.16(L1.0+A1.0+fo4+ld[1]+S) [F(1.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_1302               =  CE_0151 & CE_0128                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       AO_1332              =  A_1315 | A_1302                         ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       AO_1355              =  AO_1331 | AO_1332                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire[16:0] sub_I_do_tx_0_B05_2 = {1'b0,G__this_uart_tx_tick/*prv*/} - {1'b0,5'b0,G__this_uart_baud_period_m1/*prv*/}; // G__this_uart_tx_tick/*prv*/ < G__this_uart_baud_period_m1/*prv*/
wire       I_do_tx_0_B05_2      = (sub_I_do_tx_0_B05_2[16])               ; // GRP.16(L2.0+C27.0+A60.0+fo22+ld[1:1]+S) [F(29.0)<0>,B(16.0,43.0)<1>] <0,1> [U1] P1 OP(lt:<)(rv32_io.cpp:L256)[UART::do_tx]
wire       CE_0134              =  ! I_do_tx_0_B05_2                       ; // GRP.16(fo50+ld[1]) [F(29.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L256)[UART::do_tx]
wire       CM_1268              =  AO_1355 & CE_0134                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       I_do_tx_0_B09_2 =  G__this_uart_tx_tick/*prv*/ == {6'b0,I_do_rx_0_B11_1}; // GRP.16(L6.0+A47.0+fo1+ld[1:1]+S) [F(6.0)<0>,B(22.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L258)[UART::do_tx]
wire       I_do_tx_0_B06_0      =  G__this_uart_tx_state/*prv*/ == 2'h3    ; // GRP.16(L1.0+A1.0+fo3+ld[1]+S) [F(1.0)<0>,B(20.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L257)[UART::do_tx]
wire       I_do_tx_0_B07_1      =  G__this_uart_tx_bit_pos/*prv*/ == 4'h0  ; // GRP.16(L2.0+A3.0+fo1+ld[1]+S) [F(2.0)<0>,B(21.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L257)[UART::do_tx]
wire       CE_0140              =  ! I_do_tx_0_B07_1                       ; // GRP.16(fo2+ld[1]) [F(2.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L257)[UART::do_tx]
wire       QC_0410              =  I_do_tx_0_B06_0 & CE_0140               ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L256,L257,L257)[UART::do_tx]
wire       CM_1255              =  QC_0410 | I_do_tx_0_B06_0               ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L256,L257,L257)[UART::do_tx]
wire       MA_1300            =  (I_do_tx_0_B06_0) ? I_do_rx_0_B10_1 : 1'h0; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(19.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L256,L257,L257)[UART::do_tx]
wire       DM_1256              =  (CE_0140) ? MA_1300 : 1'h0              ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(18.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L256,L257,L257)[UART::do_tx]
wire       DM_1257              =  (CM_1255) ? DM_1256 : 1'h0              ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L256,L257,L257)[UART::do_tx]
wire       I_do_tx_0_B09_5      =  I_do_tx_0_B09_2 & DM_1257               ; // GRP.16(L1.0+A1.0+fo3+ld[1:1]) [F(7.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L260)[UART::do_tx]
wire       A_1330               =  I_do_tx_0_B09_5 & CE_0128               ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       QC_0439              =  A_1330 & I_do_tx_0_B05_2                ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       O_1401               =  CM_1268 | QC_0439                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       CE_0149              =  N_0005 == 2'h1                          ; // GRP.16(L1.0+A1.0+fo7+ld[1]+S) [F(1.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_1303               =  CE_0149 & CE_0128                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       QC_0452              =  A_1303 & CE_0134                        ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       QC_0435 =  I_do_tx_0_B01_13 & G__this_uart_tx_buf_not_empty/*prv*/; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(2.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       O_1378               =  QC_0452 | QC_0435                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       CM_1269              =  O_1401 | O_1378                         ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(32.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       QC_0448              =  A_1315 & CE_0134                        ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       DM_1270              =  QC_0435 | QC_0448                       ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(31.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       DM_1294              =  (CM_1269) ? DM_1270 : 1'h0              ; // GRP.16(L1.0+A1.0+fo7+ld[1:1]) [F(33.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L244,L245,L256,L257,L260,L265,L272,L284,L289)[UART::do_tx]
wire       I_update_1_2_B01_2   =  I_PROBE_UART_step_B12_1 | DM_1294       ; // GRP.16(L1.0+A1.0+fo6+ld[1:1]) [F(34.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       CP_update_1_2_B01_F2 =  CP_PROBE_UART_step_B12_F2 & I_update_1_2_B01_2; // GRP.16(L1.0+A1.0+fo8+ld[1:1]) [F(35.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       CP_PROBE_UART_step_B12_F1 =  CP_PROBE_UART_step_B01_F2_B02_F2 & I_PROBE_UART_step_B12_7; // GRP.16(L1.0+A1.0+fo5+ld[1:1]) [F(10.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L788)[PROBE_UART::step]
wire       I_update_1_1_B01_2   =  (CM_1269) ? DM_1270 : 1'h0              ; // GRP.16(L1.0+A1.0+fo11+ld[1:1]) [F(33.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       CP_update_1_1_B01_F2 =  CP_PROBE_UART_step_B12_F1 & I_update_1_1_B01_2; // GRP.16(L1.0+A1.0+fo8+ld[1:1]) [F(34.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       CM_0566      =  CP_PROBE_UART_step_B02_F1 | CP_update_1_1_B01_F2; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L68,L73)[PROBE_UART::step]
wire       CM_0567              =  CP_update_1_2_B01_F2 | CM_0566          ; // GRP.16(L1.0+A1.0+fo10+ld[1:1]) [F(36.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L68,L73)[PROBE_UART::step]
wire       I_nxt_pnt_2_B1_0     =  G__this_uart_tx_buf_rp/*prv*/ == 4'h2   ; // GRP.16(L2.0+A3.0+fo5+ld[1]+S) [F(2.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_2_B1_1  =  {1'b0,G__this_uart_tx_buf_rp/*prv*/} + 5'h1; // GRP.16(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<0>,B(13.0,18.0)<1>] <1,16> [U5] P1 OP(add:+)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_2_B1_2 =  (I_nxt_pnt_2_B1_0) ? 5'h0 : I_nxt_pnt_2_B1_1; // GRP.16(L1.0+A5.0+fo2+ld[5:0:1]) [F(8.0,3.0)<0>,B(11.0)<1>] <0,16> [U5] P1 OP(sel:?)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] L_nxt_pnt_4_RET      =  I_nxt_pnt_2_B1_2                        ; // GRP.16(NL) [F(8.0,3.0)<0>,B(10.0)<1>] <0,16> [U5] P1 OP(assign:=)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] DM_1295 =  (DM_1294) ? L_nxt_pnt_4_RET : {1'b0,G__this_uart_tx_buf_rp/*prv*/}; // GRP.16(L2.0+A10.0+fo3+ld[5:1:1]) [F(35.0)<0>,B(10.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L71)[IOBuf<unsigned char, 8>::update]
wire       CE_0243              =  ! G__this_uart_tx_buf_full/*prv*/       ; // GRP.16(fo5+ld[1]) [F(0.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L72)[IOBuf<unsigned char, 8>::update]
wire       I_nxt_pnt_5_B1_0     =  G__this_uart_tx_buf_wp/*prv*/ == 4'h2   ; // GRP.16(L2.0+A3.0+fo5+ld[1]+S) [F(2.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_5_B1_1  =  {1'b0,G__this_uart_tx_buf_wp/*prv*/} + 5'h1; // GRP.16(L2.0+C5.0+A15.0+fo1+ld[1]) [F(7.0,2.0)<0>,B(13.0,18.0)<1>] <1,16> [U5] P1 OP(add:+)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] I_nxt_pnt_5_B1_2 =  (I_nxt_pnt_5_B1_0) ? 5'h0 : I_nxt_pnt_5_B1_1; // GRP.16(L1.0+A5.0+fo1+ld[5:0:1]) [F(8.0,3.0)<0>,B(11.0)<1>] <0,16> [U5] P1 OP(sel:?)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] L_nxt_pnt_5_RET      =  I_nxt_pnt_5_B1_2                        ; // GRP.16(NL) [F(8.0,3.0)<0>,B(10.0)<1>] <0,16> [U5] P1 OP(assign:=)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] DM_1296 =  (CE_0243) ? L_nxt_pnt_5_RET : {1'b0,G__this_uart_tx_buf_wp/*prv*/}; // GRP.16(L2.0+A10.0+fo3+ld[5:1:1]) [F(10.0,5.0)<0>,B(10.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L72)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_2_B08_01  =  DM_1295 != DM_1296                      ; // GRP.16(L5.0+A14.0+fo1+ld[1:1]+S) [F(40.0)<0>,B(8.0)<1>] <0,1> [U1] P1 OP(ne:!=)(./rv32_io.h:L73)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_2_B08_03 =  I_update_1_2_B08_01 | I_PROBE_UART_step_B12_1; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(41.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L73)[IOBuf<unsigned char, 8>::update]
wire       DM_0565   =  (CP_update_1_2_B01_F2) ? I_update_1_2_B08_03 : 1'h0; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(42.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L68,L73)[PROBE_UART::step]
wire[ 4:0] L_nxt_pnt_2_RET      =  I_nxt_pnt_2_B1_2                        ; // GRP.16(NL) [F(8.0,3.0)<0>,B(9.0)<1>] <0,16> [U5] P1 OP(assign:=)(rv32_io.cpp:L4)[nxt_pnt]
wire[ 4:0] DM_1274 =  (I_update_1_1_B01_2) ? L_nxt_pnt_2_RET : {1'b0,G__this_uart_tx_buf_rp/*prv*/}; // GRP.16(L2.0+A10.0+fo3+ld[5:1:1]) [F(35.0)<0>,B(9.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L71)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_1_B08_01 =  DM_1274 != {1'b0,G__this_uart_tx_buf_wp/*prv*/}; // GRP.16(L5.0+A14.0+fo1+ld[1:1]+S) [F(40.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(ne:!=)(./rv32_io.h:L73)[IOBuf<unsigned char, 8>::update]
wire       DM_0564   =  (CP_update_1_1_B01_F2) ? I_update_1_1_B08_01 : 1'h0; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(41.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L68,L73)[PROBE_UART::step]
wire       DM_0568              =  DM_0565 | DM_0564                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(43.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L68,L73)[PROBE_UART::step]
wire       I_update_1_2_B08_06  =  DM_1295 == DM_1296                      ; // GRP.16(L5.0+A14.0+fo1+ld[1:1]+S) [F(40.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L74)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_2_B01_0   =  ! DM_1294                               ; // GRP.16(fo1+ld[1]) [F(33.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       MA_1460    =  (CP_update_1_2_B01_F2) ? I_update_1_2_B01_0 : 1'h0; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(36.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L68,L74)[PROBE_UART::step]
wire       DM_0570              =  I_update_1_2_B08_06 & MA_1460           ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(41.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L68,L74)[PROBE_UART::step]
wire       I_update_1_1_B08_06 =  DM_1274 == {1'b0,G__this_uart_tx_buf_wp/*prv*/}; // GRP.16(L5.0+A14.0+fo1+ld[1:1]+S) [F(40.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L74)[IOBuf<unsigned char, 8>::update]
wire       I_update_1_1_B01_0   =  ! I_update_1_1_B01_2                    ; // GRP.16(fo1+ld[1]) [F(33.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L70)[IOBuf<unsigned char, 8>::update]
wire       MA_1461    =  (CP_update_1_1_B01_F2) ? I_update_1_1_B01_0 : 1'h0; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(35.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L68,L74)[PROBE_UART::step]
wire       DM_0569              =  I_update_1_1_B08_06 & MA_1461           ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(41.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L68,L74)[PROBE_UART::step]
wire       DM_0573              =  DM_0570 | DM_0569                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(42.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L68,L74)[PROBE_UART::step]
wire[ 4:0] I_update_1_2_B08_10  =  DM_1295 & 5'h1f                         ; // GRP.16(NL) [F(35.0)<0>,B(2.0)<1>] <0,16> [U5] P1 OP(and:&)(./rv32_io.h:L75)[IOBuf<unsigned char, 8>::update]
wire[ 4:0] DM_0575   =  (CP_update_1_2_B01_F2) ? I_update_1_2_B08_10 : 5'h0; // GRP.16(L1.0+A5.0+fo1+ld[5:1]) [F(36.0)<0>,B(2.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L68,L75)[PROBE_UART::step]
wire[ 4:0] I_update_1_1_B08_10  =  DM_1274 & 5'h1f                         ; // GRP.16(NL) [F(35.0)<0>,B(2.0)<1>] <0,16> [U5] P1 OP(and:&)(./rv32_io.h:L75)[IOBuf<unsigned char, 8>::update]
wire[ 4:0] DM_0574   =  (CP_update_1_1_B01_F2) ? I_update_1_1_B08_10 : 5'h0; // GRP.16(L1.0+A5.0+fo1+ld[5:1]) [F(36.0)<0>,B(2.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L68,L75)[PROBE_UART::step]
wire[ 4:0] DM_0578              =  DM_0575 | DM_0574                       ; // GRP.16(L1.0+A5.0+fo1+ld[1:1]) [F(37.0)<0>,B(1.0)<1>] <0,31> [U5] P1 OP(or:|)(./rv32_io.h:L68,L75)[PROBE_UART::step]
wire[ 4:0] I_update_1_2_B08_12  =  DM_1296 & 5'h1f                         ; // GRP.16(NL) [F(10.0,5.0)<0>,B(3.0)<1>] <0,16> [U5] P1 OP(and:&)(./rv32_io.h:L76)[IOBuf<unsigned char, 8>::update]
wire[ 4:0] MA_1454 =  (CP_PROBE_UART_step_B12_F2) ? I_update_1_2_B08_12 : 5'h0; // GRP.16(L1.0+A5.0+fo1+ld[5:1]) [F(11.0)<0>,B(3.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L68,L76)[PROBE_UART::step]
wire[ 4:0] DM_0580              =  (I_update_1_2_B01_2) ? MA_1454 : 5'h0   ; // GRP.16(L1.0+A5.0+fo1+ld[5:1]) [F(35.0)<0>,B(2.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L68,L76)[PROBE_UART::step]
wire[ 3:0] I_update_1_1_B08_12  =  G__this_uart_tx_buf_wp/*prv*/ & 4'hf    ; // GRP.16(NL) [F(0.0)<0>,B(3.0)<1>] <0,15> [U4] P1 OP(and:&)(./rv32_io.h:L76)[IOBuf<unsigned char, 8>::update]
wire[ 3:0] MA_1447 =  (CP_PROBE_UART_step_B12_F1) ? I_update_1_1_B08_12 : 4'h0; // GRP.16(L1.0+A4.0+fo1+ld[4:1]) [F(11.0)<0>,B(3.0)<1>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L68,L76)[PROBE_UART::step]
wire[ 3:0] DM_0579              =  (I_update_1_1_B01_2) ? MA_1447 : 4'h0   ; // GRP.16(L1.0+A4.0+fo1+ld[4:1]) [F(34.0)<0>,B(2.0)<1>] <0,15> [U4] P1 OP(sel:?)(./rv32_io.h:L68,L76)[PROBE_UART::step]
wire[ 4:0] DM_0583              =  DM_0580 | {1'b0,DM_0579}                ; // GRP.16(L1.0+A4.0+fo1+ld[1:1]) [F(36.0)<0>,B(1.0)<1>] <0,31> [U5] P1 OP(or:|)(./rv32_io.h:L68,L76)[PROBE_UART::step]
wire[ 1:0] N_0584            =  G__this_uart_tx_buf_wp/*prv*/[1:0]/*&2'h3*/; // (NL) [F(0.0)<0>,B(3.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L307)[UART::do_tx]
wire       N_0601               =  N_0584 == 2'h0                          ; // (L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L307)[PROBE_UART::step]
wire       A_1338               =  I_PROBE_UART_step_B12_1 & CE_0020       ; // (L1.0+A1.0+fo3+ld[1:1]) [F(2.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L307)[UART::do_tx]
wire       A_1359               =  N_0601 & A_1338                         ; // (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L307)[PROBE_UART::step]
wire       N_0602              =  A_1359 & CP_PROBE_UART_step_B01_F2_B02_F2; // (L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L307)[PROBE_UART::step]
wire[ 7:0] I_do_tx_1_B25_0      =  G_probe_uart_port_tx_data/*&8'hff*/     ; // (NL) [F(0.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(and:&)(rv32_io.cpp:L307)[UART::do_tx]
wire       N_0605               =  N_0584 == 2'h1                          ; // (L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L307)[PROBE_UART::step]
wire       A_1360               =  N_0605 & A_1338                         ; // (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L307)[PROBE_UART::step]
wire       N_0606              =  A_1360 & CP_PROBE_UART_step_B01_F2_B02_F2; // (L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L307)[PROBE_UART::step]
wire       N_0609               =  N_0584 == 2'h2                          ; // (L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L307)[PROBE_UART::step]
wire       A_1361               =  N_0609 & A_1338                         ; // (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L307)[PROBE_UART::step]
wire       N_0610              =  A_1361 & CP_PROBE_UART_step_B01_F2_B02_F2; // (L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L307)[PROBE_UART::step]
wire       A_1304 =  G__this_uart_tx_buf_not_empty/*prv*/ & I_PROBE_UART_step_B12_7; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       QC_0612              =  A_1304 & I_do_tx_0_B01_13               ; // GRP.16(L1.0+A1.0+fo18+ld[1:1]) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       QC_0613              =  I_PROBE_UART_step_B12_7 & CE_0128       ; // GRP.16(L1.0+A1.0+fo3+ld[1:1]) [F(2.0)<0>,B(17.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1308               =  CE_0149 & QC_0613                       ; // GRP.16(L1.0+A1.0+fo13+ld[1:1]) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       QC_0615              =  A_1308 & CE_0134                        ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(30.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       CM_0633              =  QC_0612 | QC_0615                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1307         =  G__this_uart_tx_buf_not_empty/*prv*/ & CE_0020; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       QC_0620              =  A_1307 & I_do_tx_0_B01_13               ; // GRP.16(L1.0+A1.0+fo3+ld[1:1]) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       O_1397               =  CM_0633 | QC_0620                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       QC_0621              =  CE_0020 & CE_0128                       ; // GRP.16(L1.0+A1.0+fo3+ld[1:1]) [F(2.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1316               =  CE_0149 & QC_0621                       ; // GRP.16(L1.0+A1.0+fo14+ld[1:1]) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1317               =  CE_0153 & QC_0621                       ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(3.0)<0>,B(9.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1343               =  CE_0159 & A_1317                        ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(8.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1366          =  G__this_uart_tx_buf_not_empty/*prv*/ & A_1343; // GRP.16(L1.0+A1.0+fo3+ld[1:1]) [F(9.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       AO_1394              =  A_1316 | A_1366                         ; // (L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       CM_0637              =  AO_1394 & CE_0134                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1309               =  CE_0153 & QC_0613                       ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(3.0)<0>,B(9.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1321               =  CE_0159 & A_1309                        ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(8.0)<0>,B(8.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1345          =  G__this_uart_tx_buf_not_empty/*prv*/ & A_1321; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(9.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       QC_0618              =  A_1345 & CE_0134                        ; // (L1.0+A1.0+fo2+ld[1:1]) [F(30.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       O_1429               =  CM_0637 | QC_0618                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       CM_0641              =  O_1397 | O_1429                         ; // (L1.0+A1.0+fo1+ld[1:1]) [F(33.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       N_0643             =  CM_0641 & CP_PROBE_UART_step_B01_F2_B02_F2; // (L1.0+A1.0+fo9+ld[1:1]) [F(34.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 6:0] I_do_tx_0_B15_5      =  G__this_uart_tx_word/*prv*/[7:1]/*>>1*/ ; // GRP.14(NL) [F(0.0)<0>,B(5.0)<1>] <0,127> [U7] P1 OP(shr:>>)(rv32_io.cpp:L277)[UART::do_tx]
wire[ 6:0] MA_1340              =  (A_1316) ? I_do_tx_0_B15_5 : 7'h0       ; // GRP.14(L1.0+A7.0+fo1+ld[7:1]) [F(4.0)<0>,B(4.0)<1>] <0,127> [U7] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 6:0] DM_0631              =  (CE_0134) ? MA_1340 : 7'h0              ; // GRP.14(L1.0+A7.0+fo1+ld[7:1]) [F(30.0)<0>,B(3.0)<1>] <0,127> [U7] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1334             =  I_do_tx_0_B01_13 & I_PROBE_UART_step_B12_7; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244)[UART::do_tx]
wire       A_1357          =  G__this_uart_tx_buf_not_empty/*prv*/ & A_1334; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L245)[UART::do_tx]
wire       CP_do_tx_0_B02_F2   =  A_1357 & CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.16(L1.0+A1.0+fo5+ld[1:1]) [F(10.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L245)[UART::do_tx]
wire       CP_do_tx_0_B01_F2  =  QC_0613 & CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.16(L1.0+A1.0+fo7+ld[1:1]) [F(10.0)<0>,B(16.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244)[UART::do_tx]
wire       A_1383               =  CE_0153 & CP_do_tx_0_B01_F2             ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(11.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_1409               =  CE_0159 & A_1383                        ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(12.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L284)[UART::do_tx]
wire       A_1432          =  G__this_uart_tx_buf_not_empty/*prv*/ & A_1409; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(13.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L289)[UART::do_tx]
wire       CP_do_tx_0_B20_F2    =  A_1432 & CE_0134                        ; // GRP.16(L1.0+A1.0+fo3+ld[1:1]) [F(30.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L289)[UART::do_tx]
wire       N_0593               =  CP_do_tx_0_B02_F2 | CP_do_tx_0_B20_F2   ; // (L1.0+A1.0+fo2+ld[1:1]) [F(31.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L247,L291)[PROBE_UART::step]
wire[ 1:0] N_0586            =  G__this_uart_tx_buf_rp/*prv*/[1:0]/*&2'h3*/; // (NL) [F(0.0)<0>,B(12.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L247)[UART::do_tx]
wire[ 1:0] N_0594               =  (CP_do_tx_0_B02_F2) ? N_0586 : N_0586   ; // (L2.0+A4.0+fo1+ld[2:1:1]) [F(12.0)<0>,B(12.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L247,L291)[PROBE_UART::step]
wire       A_1336               =  I_do_tx_0_B01_13 & CE_0020              ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(15.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244)[UART::do_tx]
wire       A_1358          =  G__this_uart_tx_buf_not_empty/*prv*/ & A_1336; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(14.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L245)[UART::do_tx]
wire       CP_do_tx_1_B02_F2   =  A_1358 & CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.16(L1.0+A1.0+fo4+ld[1:1]) [F(10.0)<0>,B(13.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L245)[UART::do_tx]
wire[ 1:0] N_0596               =  (CP_do_tx_1_B02_F2) ? N_0586 : N_0586   ; // (L2.0+A4.0+fo1+ld[2:1:1]) [F(12.0)<0>,B(12.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L247,L291)[PROBE_UART::step]
wire[ 1:0] N_0598               =  (N_0593) ? N_0594 : N_0596              ; // (L2.0+A4.0+fo3+ld[2:1:1]) [F(33.0)<0>,B(10.0)<1>] <0,3> [U2] P1 OP(sel:?)(rv32_io.cpp:L247,L291)[PROBE_UART::step]
wire[ 7:0] AD_16              =  G__this_uart_tx_buf_buf/*prv*/ [ N_0598 ] ; // RA.GRP.0(L4.0+A32.0+fo3+ld[1:3]+S) [F(37.0)<0>,B(8.0)<1>] <0,255> [U8] P1 OP(addr:[])(rv32_io.cpp:L247,L291)[PROBE_UART::step]
wire       QC_0626              =  A_1366 & CE_0134                        ; // (L1.0+A1.0+fo16+ld[1:1]) [F(30.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[15:0] MA_1466              =  (QC_0626) ? 16'hffff : 16'h0            ; // (L1.0+A16.0+fo1+ld[16:0:1]) [F(31.0)<0>,B(4.0)<1>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 7:0] DM_0632              =  AD_16 & MA_1466[7:0]                    ; // (L1.0+A8.0+fo1+ld[1:1]) [F(38.0)<0>,B(3.0)<1>] <0,255> [U8] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 7:0] DM_0638              =  {1'b0,DM_0631} | DM_0632                ; // GRP.14(L1.0+A7.0+fo1+ld[1:1]) [F(39.0)<0>,B(2.0)<1>] <0,255> [U8] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[15:0] MA_1463              =  (QC_0612) ? 16'hffff : 16'h0            ; // (L1.0+A16.0+fo1+ld[16:0:1]) [F(4.0)<0>,B(5.0)<1>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 7:0] DM_0627              =  AD_16 & MA_1463[7:0]                    ; // (L1.0+A8.0+fo1+ld[1:1]) [F(38.0)<0>,B(4.0)<1>] <0,255> [U8] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 6:0] MA_1318              =  (A_1308) ? I_do_tx_0_B15_5 : 7'h0       ; // GRP.14(L1.0+A7.0+fo1+ld[7:1]) [F(4.0)<0>,B(5.0)<1>] <0,127> [U7] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 6:0] DM_0628              =  (CE_0134) ? MA_1318 : 7'h0              ; // GRP.14(L1.0+A7.0+fo1+ld[7:1]) [F(30.0)<0>,B(4.0)<1>] <0,127> [U7] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 7:0] DM_0634              =  DM_0627 | {1'b0,DM_0628}                ; // GRP.14(L1.0+A7.0+fo1+ld[1:1]) [F(39.0)<0>,B(3.0)<1>] <0,255> [U8] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       MAO_1468             =  QC_0618 | QC_0620                       ; // (L1.0+A1.0+fo16+ld[1:1]) [F(31.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[15:0] AO_1467              =  (MAO_1468) ? 16'hffff : 16'h0           ; // (L1.0+A16.0+fo1+ld[16:0:1]) [F(32.0)<0>,B(4.0)<1>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 7:0] DM_0636              =  AD_16 & AO_1467[7:0]                    ; // (L1.0+A8.0+fo1+ld[1:1]) [F(38.0)<0>,B(3.0)<1>] <0,255> [U8] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 7:0] DM_0640              =  DM_0634 | DM_0636                       ; // GRP.14(L1.0+A8.0+fo1+ld[1:1]) [F(40.0)<0>,B(2.0)<1>] <0,255> [U8] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire[ 7:0] DM_0642              =  DM_0638 | DM_0640                       ; // GRP.14(L1.0+A8.0+fo1+ld[1:1]) [F(41.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       A_1382               =  CE_0151 & CP_do_tx_0_B01_F2             ; // GRP.16(L1.0+A1.0+fo4+ld[1:1]) [F(11.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_1431               =  I_do_tx_0_B01_01 & A_1409               ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(13.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L289)[UART::do_tx]
wire       AO_1441              =  A_1382 | A_1431                         ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(14.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       CM_0650              =  AO_1441 & CE_0134                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       A_1380               =  I_do_tx_0_B09_5 & CP_do_tx_0_B01_F2     ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L260)[UART::do_tx]
wire       CP_do_tx_0_B09_F1    =  A_1380 & I_do_tx_0_B05_2                ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L260)[UART::do_tx]
wire       O_1448               =  CM_0650 | CP_do_tx_0_B09_F1             ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       I_do_tx_0_B12_4 =  G__this_uart_tx_bit_pos/*prv*/ == {1'b0,G__this_uart_bit_count_m1/*prv*/}; // GRP.16(L4.0+A11.0+fo3+ld[1:1]+S) [F(4.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L269)[UART::do_tx]
wire       A_1381               =  CE_0149 & CP_do_tx_0_B01_F2             ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(11.0)<0>,B(8.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_1403               =  I_do_tx_0_B12_4 & A_1381                ; // GRP.16(L1.0+A1.0+fo3+ld[1:1]) [F(12.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L269)[UART::do_tx]
wire       CP_do_tx_0_B12_F1    =  A_1403 & CE_0134                        ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L269)[UART::do_tx]
wire       CM_0657              =  O_1448 | CP_do_tx_0_B12_F1              ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       CM_0651              =  CP_do_tx_0_B20_F2 | CP_do_tx_1_B02_F2   ; // GRP.16(L1.0+A1.0+fo3+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       O_1455               =  CM_0657 | CM_0651                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(33.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       CP_do_tx_1_B01_F2  =  QC_0621 & CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.16(L1.0+A1.0+fo7+ld[1:1]) [F(10.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L244)[UART::do_tx]
wire       A_1388               =  CE_0153 & CP_do_tx_1_B01_F2             ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(11.0)<0>,B(9.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_1421               =  CE_0159 & A_1388                        ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(12.0)<0>,B(8.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L284)[UART::do_tx]
wire       A_1436          =  G__this_uart_tx_buf_not_empty/*prv*/ & A_1421; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(13.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L289)[UART::do_tx]
wire       CP_do_tx_1_B20_F2    =  A_1436 & CE_0134                        ; // GRP.16(L1.0+A1.0+fo3+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L289)[UART::do_tx]
wire       A_1387               =  CE_0151 & CP_do_tx_1_B01_F2             ; // GRP.16(L1.0+A1.0+fo4+ld[1:1]) [F(11.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_1435               =  I_do_tx_0_B01_01 & A_1421               ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(13.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L289)[UART::do_tx]
wire       AO_1443              =  A_1387 | A_1435                         ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(14.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       CM_0654              =  AO_1443 & CE_0134                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       CM_0648         =  CP_PROBE_UART_step_B02_F1 | CP_do_tx_0_B02_F2; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(11.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       O_1451               =  CM_0654 | CM_0648                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       CM_0661              =  CP_do_tx_1_B20_F2 | O_1451              ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       A_1385               =  I_do_tx_0_B09_5 & CP_do_tx_1_B01_F2     ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L260)[UART::do_tx]
wire       CP_do_tx_1_B09_F1    =  A_1385 & I_do_tx_0_B05_2                ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L260)[UART::do_tx]
wire       A_1386               =  CE_0149 & CP_do_tx_1_B01_F2             ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(11.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L265)[UART::do_tx]
wire       A_1415               =  I_do_tx_0_B12_4 & A_1386                ; // GRP.16(L1.0+A1.0+fo3+ld[1:1]) [F(12.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L269)[UART::do_tx]
wire       CP_do_tx_1_B12_F1    =  A_1415 & CE_0134                        ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L269)[UART::do_tx]
wire       CM_0653              =  CP_do_tx_1_B09_F1 | CP_do_tx_1_B12_F1   ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       O_1462               =  CM_0661 | CM_0653                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(33.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       CM_0665              =  O_1455 | O_1462                         ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(34.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] MA_1416              =  (A_1387) ? 2'h3 : 2'h0                  ; // GRP.16(L1.0+A2.0+fo1+ld[2:0:1]) [F(12.0)<0>,B(4.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] DM_0647              =  (CE_0134) ? MA_1416 : 2'h0              ; // GRP.16(L1.0+A2.0+fo1+ld[2:1]) [F(30.0)<0>,B(3.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       DM_0656              =  CP_do_tx_1_B20_F2 | CP_do_tx_0_B02_F2   ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] DM_0662              =  DM_0647 | {1'b0,DM_0656}                ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(2.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] MA_1433              =  (A_1415) ? I_do_rx_0_B18_2 : 2'h0       ; // GRP.16(L1.0+A2.0+fo1+ld[2:1]) [F(13.0)<0>,B(5.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] DM_0646              =  (CE_0134) ? MA_1433 : 2'h0              ; // GRP.16(L1.0+A2.0+fo1+ld[2:1]) [F(30.0)<0>,B(4.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] O_1450               =  DM_0646 | {1'b0,CP_do_tx_1_B02_F2}      ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] MA_1430              =  (A_1403) ? I_do_rx_0_B18_2 : 2'h0       ; // GRP.16(L1.0+A2.0+fo1+ld[2:1]) [F(13.0)<0>,B(6.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] MA_1404              =  (A_1382) ? 2'h3 : 2'h0                  ; // GRP.16(L1.0+A2.0+fo1+ld[2:0:1]) [F(12.0)<0>,B(6.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] MAO_1440             =  MA_1430 | MA_1404                       ; // GRP.16(L1.0+A2.0+fo1+ld[1:1]) [F(14.0)<0>,B(5.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] DM_0658              =  (CE_0134) ? MAO_1440 : 2'h0             ; // GRP.16(L1.0+A2.0+fo1+ld[2:1]) [F(30.0)<0>,B(4.0)<1>] <0,3> [U2] P1 OP(sel:?)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] O_1456               =  DM_0658 | {1'b0,CP_do_tx_0_B20_F2}      ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] DM_0664              =  O_1450 | O_1456                         ; // GRP.16(L1.0+A2.0+fo1+ld[1:1]) [F(32.0)<0>,B(2.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire[ 1:0] DM_0666              =  DM_0662 | DM_0664                       ; // GRP.16(L1.0+A2.0+fo1+ld[1:1]) [F(33.0)<0>,B(1.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       AO_1365              =  CE_0020 | I_PROBE_UART_step_B12_7       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L276)[PROBE_UART::step]
wire       AO_1364              =  AO_1365 & CE_0128                       ; // GRP.16(L1.0+A1.0+fo2+ld[1:1]) [F(3.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L276)[PROBE_UART::step]
wire       MAO_1363             =  CE_0149 & AO_1364                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L276)[PROBE_UART::step]
wire[ 7:0] I_do_tx_0_B11_1      =  G__this_uart_tx_word/*prv*//*&8'hff*/   ; // (NL) [F(0.0)<0>,B(6.0)<1>] <0,255> [U8] P1 OP(and:&)(rv32_io.cpp:L263)[UART::do_tx]
wire       I_do_tx_0_B11_2      =  I_do_tx_0_B11_1[0]/*&1'h1*/             ; // (NL) [F(0.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L263)[UART::do_tx]
wire       I_do_tx_0_B15_3 =  G__this_uart_tx_parity/*prv*/ ^ I_do_tx_0_B11_2; // GRP.13(L2.0+A2.0+fo1+ld[1:1]) [F(2.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(xor:^)(rv32_io.cpp:L276)[UART::do_tx]
wire       MAO_1362             =  (MAO_1363) ? I_do_tx_0_B15_3 : 1'h0     ; // GRP.13(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L276)[PROBE_UART::step]
wire       DM_0697              =  (CE_0134) ? MAO_1362 : 1'h0             ; // GRP.13(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L276)[PROBE_UART::step]
wire       A_1322               =  I_do_tx_0_B18_2 & A_1309                ; // GRP.16(L1.0+A1.0+fo6+ld[1:1]) [F(8.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       AO_1368              =  A_1322 | A_1345                         ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       CM_0706              =  AO_1368 & CE_0134                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       O_1398               =  CM_0706 | QC_0612                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       CM_0709              =  O_1398 | QC_0615                        ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       A_1344               =  I_do_tx_0_B18_2 & A_1317                ; // GRP.16(L1.0+A1.0+fo6+ld[1:1]) [F(8.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       AO_1395              =  A_1344 | A_1366                         ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       CM_0708              =  AO_1395 & CE_0134                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       O_1427               =  CM_0708 | QC_0620                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       QC_0623              =  A_1316 & CE_0134                        ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
wire       CM_0711              =  O_1427 | QC_0623                        ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       CM_0713              =  CM_0709 | CM_0711                       ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(33.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       N_0715             =  CM_0713 & CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.16(L1.0+A1.0+fo4+ld[1:1]) [F(34.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       CE_0156              =  ! I_do_tx_0_B12_4                       ; // GRP.16(fo5+ld[1]) [F(4.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L269)[UART::do_tx]
wire[ 4:0] I_do_tx_0_B14_0  =  {1'b0,G__this_uart_tx_bit_pos/*prv*/} + 5'h1; // GRP.16(L2.0+C5.0+A15.0+fo3+ld[1]) [F(7.0,2.0)<0>,B(7.0,12.0)<1>] <1,16> [U5] P1 OP(add:+)(rv32_io.cpp:L274)[UART::do_tx]
wire[ 4:0] DM_1258              =  (CE_0156) ? I_do_tx_0_B14_0 : 5'h0      ; // GRP.16(L1.0+A5.0+fo2+ld[5:1]) [F(8.0,5.0)<0>,B(5.0)<1>] <0,16> [U5] P1 OP(sel:?)(rv32_io.cpp:L269,L274)[UART::do_tx]
wire[ 4:0] MA_1320              =  (A_1308) ? DM_1258 : 5'h0               ; // GRP.16(L1.0+A5.0+fo1+ld[5:1]) [F(9.0,6.0)<0>,B(4.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire[ 4:0] MA_1346              =  (A_1322) ? I_do_tx_0_B14_0 : 5'h0       ; // GRP.16(L1.0+A5.0+fo1+ld[5:1]) [F(9.0)<0>,B(4.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire[ 4:0] MAO_1369             =  MA_1320 | MA_1346                       ; // GRP.16(L1.0+A5.0+fo1+ld[1:1]) [F(10.0)<0>,B(3.0)<1>] <0,31> [U5] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire[ 4:0] MA_1342              =  (A_1316) ? DM_1258 : 5'h0               ; // GRP.16(L1.0+A5.0+fo1+ld[5:1]) [F(9.0,6.0)<0>,B(4.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire[ 4:0] MA_1367              =  (A_1344) ? I_do_tx_0_B14_0 : 5'h0       ; // GRP.16(L1.0+A5.0+fo1+ld[5:1]) [F(9.0)<0>,B(4.0)<1>] <0,16> [U5] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire[ 4:0] MAO_1396             =  MA_1342 | MA_1367                       ; // GRP.16(L1.0+A5.0+fo1+ld[1:1]) [F(10.0)<0>,B(3.0)<1>] <0,31> [U5] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire[ 4:0] MAO_1428             =  MAO_1369 | MAO_1396                     ; // GRP.16(L1.0+A5.0+fo1+ld[1:1]) [F(11.0)<0>,B(2.0)<1>] <0,31> [U5] P1 OP(or:|)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire[ 4:0] DM_0714              =  (CE_0134) ? MAO_1428 : 5'h0             ; // GRP.16(L1.0+A5.0+fo1+ld[5:1]) [F(30.0)<0>,B(1.0)<1>] <0,31> [U5] P1 OP(sel:?)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
wire       CP_do_tx_0_B05_F2    =  CP_do_tx_0_B01_F2 & CE_0134             ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L256)[UART::do_tx]
wire       CP_do_tx_1_B05_F1    =  CP_do_tx_1_B01_F2 & I_do_tx_0_B05_2     ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L256)[UART::do_tx]
wire       CM_0719              =  CP_do_tx_0_B05_F2 | CP_do_tx_1_B05_F1   ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509)(rv32_io.cpp:L259,L264)[PROBE_UART::step]
wire       CP_do_tx_1_B05_F2    =  CP_do_tx_1_B01_F2 & CE_0134             ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L256)[UART::do_tx]
wire       CP_do_tx_0_B05_F1    =  CP_do_tx_0_B01_F2 & I_do_tx_0_B05_2     ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L256)[UART::do_tx]
wire       CM_0718         =  CP_PROBE_UART_step_B02_F1 | CP_do_tx_0_B05_F1; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509)(rv32_io.cpp:L259,L264)[PROBE_UART::step]
wire       CM_0720              =  CP_do_tx_1_B05_F2 | CM_0718             ; // GRP.16(L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509)(rv32_io.cpp:L259,L264)[PROBE_UART::step]
wire       CM_0721              =  CM_0719 | CM_0720                       ; // GRP.16(L1.0+A1.0+fo16+ld[1:1]) [F(33.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509)(rv32_io.cpp:L259,L264)[PROBE_UART::step]
wire       MAO_1411           =  AO_1364 & CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.16(L1.0+A1.0+fo16+ld[1:1]) [F(10.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L509)(rv32_io.cpp:L259,L264)[PROBE_UART::step]
wire[15:0] I_do_tx_0_B09_3      =  G__this_uart_tx_tick/*prv*/ + 16'h1     ; // GRP.16(L2.0+C16.0+A48.0+fo1+ld[1]) [F(18.0,2.0)<0>,B(4.0,20.0)<1>] <0,65535> [U16] P1 OP(add:+)(rv32_io.cpp:L259)[UART::do_tx]
wire[15:0] MAO_1410             =  (MAO_1411) ? I_do_tx_0_B09_3 : 16'h0    ; // GRP.16(L1.0+A16.0+fo1+ld[16:1]) [F(19.0,11.0)<0>,B(2.0)<1>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L509)(rv32_io.cpp:L259,L264)[PROBE_UART::step]
wire[15:0] DM_0722              =  (I_do_tx_0_B05_2) ? MAO_1410 : 16'h0    ; // GRP.16(L1.0+A16.0+fo1+ld[16:1]) [F(30.0)<0>,B(1.0)<1>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L509)(rv32_io.cpp:L259,L264)[PROBE_UART::step]
wire       CP_PROBE_UART_step_B06_F2 =  CP_PROBE_UART_step_B01_F2_B02_F2 & G__this_uart_rx_buf_not_empty/*prv*/; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(10.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L772)[PROBE_UART::step]
wire[ 1:0] N_0527            =  G__this_uart_rx_buf_rp/*prv*/[1:0]/*&2'h3*/; // GRP.15 <B>(NL) [F(0.0)<0>,B(13.0)<1>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L337)[UART::do_rx]
wire[ 7:0] AD_4               =  G__this_uart_rx_buf_buf/*prv*/ [ N_0527 ] ; // GRP.15 <B>(L4.0+A32.0+fo1+ld[1:3]+S) [F(4.0)<0>,B(13.0)<1>] <0,255> [U8] P1 OP(addr:[])(rv32_io.cpp:L337)[UART::do_rx]
wire[ 7:0] L_do_rx_0_RET        =  (I_do_rx_0_B01_07) ? AD_4 : 8'h0        ; // GRP.15 <B>(L1.0+A8.0+fo3+ld[8:1]) [F(5.0)<0>,B(9.0)<1>] <0,255> [U8] P1 OP(sel:?)(rv32_io.cpp:L389)[UART::do_rx]
wire       I_update_0_B01_0     =  L_do_rx_0_RET == 8'ha                   ; // GRP.15 <B>(L3.0+A7.0+fo3+ld[1]+S) [F(8.0)<0>,B(8.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L727)[PROBE_UART::update]
wire       I_update_0_B01_5     =  G__this_rx_pnt/*prv*/ == 16'h3a         ; // GRP.15 <B>(L4.0+A15.0+fo1+ld[1]+S) [F(4.0)<0>,B(8.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L728)[PROBE_UART::update]
wire       I_update_0_B01_7     =  I_update_0_B01_0 | I_update_0_B01_5     ; // GRP.15 <B>(L1.0+A1.0+fo3+ld[1:1]) [F(9.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L728)[PROBE_UART::update]
wire       CP_update_0_B02_F2 =  CP_PROBE_UART_step_B06_F2 & I_update_0_B01_7; // GRP.15 <B>(L1.0+A1.0+fo5+ld[1:1]) [F(11.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L733)[PROBE_UART::update]
wire       CM_0728        =  CP_PROBE_UART_step_B02_F1 | CP_update_0_B02_F2; // GRP.15 <B>(L1.0+A1.0+fo2+ld[1:1]) [F(12.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L0,L763)[PROBE_UART::step]
wire       I_update_0_B09_1     =  G__this_mode/*prv*/[0]/*&1'h1*/         ; // GRP.15 <B>(NL) [F(0.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L745)[PROBE_UART::update]
wire       I_update_0_B09_2     =  ! I_update_0_B09_1                      ; // GRP.15 <B>(fo1+ld[1]) [F(0.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L745)[PROBE_UART::update]
wire       I_update_0_B09_4     =  I_update_0_B01_0 & I_update_0_B09_2     ; // GRP.15 <B>(L1.0+A1.0+fo3+ld[1:1]) [F(9.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L745)[PROBE_UART::update]
wire       I_update_0_B09_5     =  ! I_update_0_B01_0                      ; // GRP.15 <B>(fo1+ld[1]) [F(8.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L745)[PROBE_UART::update]
wire       I_update_0_B09_6     =  I_update_0_B09_4 | I_update_0_B09_5     ; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(10.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L745)[PROBE_UART::update]
wire       CE_0125              =  ! I_update_0_B09_6                      ; // GRP.15 <B>(fo3+ld[1]) [F(10.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L745)[PROBE_UART::update]
wire[ 1:0] I_update_0_B09_7     =  (I_update_0_B09_4) ? 2'h1 : 2'h2        ; // GRP.15 <B>(L1.0+A2.0+fo1+ld[2:0:1]) [F(10.0)<0>,B(4.0)<1>] <1,2> [U2] P1 OP(sel:?)(./rv32_io.h:L745)[PROBE_UART::update]
wire[ 1:0] DM_1254              =  (CE_0125) ? 2'h2 : I_update_0_B09_7     ; // GRP.15 <B>(L1.0+A2.0+fo1+ld[2:0:1]) [F(11.0)<0>,B(3.0)<1>] <1,2> [U2] P1 OP(sel:?)(./rv32_io.h:L745)[PROBE_UART::update]
wire[ 1:0] DM_0727              =  (CP_update_0_B02_F2) ? DM_1254 : 2'h0   ; // GRP.15 <B>(L1.0+A2.0+fo1+ld[2:1]) [F(12.0)<0>,B(2.0)<1>] <0,2> [U2] P1 OP(sel:?)(./rv32_io.h:L0,L763)[PROBE_UART::step]
wire[ 1:0] DM_0729            =  {1'b0,CP_PROBE_UART_step_B02_F1} | DM_0727; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(13.0)<0>,B(1.0)<1>] <0,3> [U2] P1 OP(or:|)(./rv32_io.h:L0,L763)[PROBE_UART::step]
wire       I_update_0_B02_7     =  ! I_update_0_B01_7                      ; // GRP.15 <B>(fo1+ld[1]) [F(9.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(not:!)(./rv32_io.h:L733)[PROBE_UART::update]
wire       CP_update_0_B02_F1 =  CP_PROBE_UART_step_B06_F2 & I_update_0_B02_7; // GRP.15 <B>(L1.0+A1.0+fo17+ld[1:1]) [F(11.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L733)[PROBE_UART::update]
wire       CM_1213        =  CP_PROBE_UART_step_B02_F1 | CP_update_0_B02_F1; // GRP.15 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L752,L755,L764)[PROBE_UART::step]
wire       CM_1214              =  CP_update_0_B02_F2 | CM_1213            ; // GRP.15 <B>(L1.0+A1.0+fo16+ld[1:1]) [F(13.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L752,L755,L764)[PROBE_UART::step]
wire[15:0] I_update_0_B03_1     =  G__this_rx_pnt/*prv*/ + 16'h1           ; // GRP.15 <B>(L2.0+C16.0+A48.0+fo1+ld[1]) [F(18.0,2.0)<0>,B(3.0,19.0)<1>] <0,65535> [U16] P1 OP(add:+)(./rv32_io.h:L755)[PROBE_UART::update]
wire[15:0] DM_1212       =  (CP_update_0_B02_F1) ? I_update_0_B03_1 : 16'h0; // GRP.15 <B>(L1.0+A16.0+fo1+ld[16:1]) [F(19.0,12.0)<0>,B(1.0)<1>] <0,65535> [U16] P1 OP(sel:?)(./rv32_io.h:L752,L755,L764)[PROBE_UART::step]
wire       QC_0736 =  I_PROBE_UART_step_B05_1 & G__this_clear_rx_buf/*prv*/; // GRP.11 <B>(L1.0+A1.0+fo61+ld[1:1]) [F(1.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1215 =  G__this_uart_rx_buf_not_empty/*prv*/ & I_update_0_B01_7; //  <B>(L1.0+A1.0+fo2+ld[1:1]) [F(10.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L753,L778)[PROBE_UART::step]
wire       CM_1216              =  QC_0736 | QC_1215                       ; // GRP.11 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L753,L778)[PROBE_UART::step]
wire       N_1217             =  CM_1216 & CP_PROBE_UART_step_B01_F2_B02_F2; // GRP.11 <B>(L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L753,L778)[PROBE_UART::step]
wire       CP_update_0_B09_F2   =  CP_update_0_B02_F2 & CE_0125            ; // GRP.15 <B>(L1.0+A1.0+fo32+ld[1:1]) [F(12.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L745)[PROBE_UART::update]
wire[31:0] I_update_0_B10_0     =  G__this_mode/*prv*/ | 32'h1             ; // GRP.15 <B>(NL) [F(0.0)<0>,B(0.0)<1>] <1,4294967295> [U32] P1 OP(or:|)(./rv32_io.h:L746)[PROBE_UART::update]
wire       A_1438               =  I_do_rx_0_B18_4 & A_1423                ; // GRP.15(L1.0+A1.0+fo1+ld[1:1]) [F(13.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L365)[UART::do_rx]
wire       CP_do_rx_0_B18_F1    =  A_1438 & CE_0047                        ; // GRP.15(L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L365)[UART::do_rx]
wire[ 1:0] N_0526            =  G__this_uart_rx_buf_wp/*prv*/[1:0]/*&2'h3*/; // GRP.15(NL) [F(0.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L367)[UART::do_rx]
wire[ 2:0] N_0003               =  G__this_uart_bit_count_m1/*prv*/ & 3'h7 ; // GRP.15(NL) [F(0.0)<0>,B(6.0)<0>] <0,7> [U3] P1 OP(and:&)(rv32_io.cpp:L314)[UART::adjust_word]
wire       CE_0095              =  N_0003 == 3'h5                          ; // GRP.15(L2.0+A2.0+fo7+ld[1]+S) [F(2.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L314)[UART::adjust_word]
wire[ 5:0] I_adjust_word_B4_1   =  G__this_uart_rx_word/*prv*/[7:2]/*>>2*/ ; // GRP.15(NL) [F(0.0)<0>,B(4.0)<0>] <0,63> [U6] P1 OP(shr:>>)(rv32_io.cpp:L316)[UART::adjust_word]
wire[ 5:0] DM_1231              =  (CE_0095) ? I_adjust_word_B4_1 : 6'h0   ; // GRP.15(L1.0+A6.0+fo1+ld[6:1]) [F(3.0)<0>,B(4.0)<0>] <0,63> [U6] P1 OP(sel:?)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire       CE_0093              =  N_0003 == 3'h4                          ; // GRP.15(L2.0+A2.0+fo6+ld[1]+S) [F(2.0)<0>,B(6.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L314)[UART::adjust_word]
wire[ 4:0] I_adjust_word_B3_1   =  G__this_uart_rx_word/*prv*/[7:3]/*>>3*/ ; // GRP.15(NL) [F(0.0)<0>,B(4.0)<0>] <0,31> [U5] P1 OP(shr:>>)(rv32_io.cpp:L315)[UART::adjust_word]
wire[ 4:0] DM_1232              =  (CE_0093) ? I_adjust_word_B3_1 : 5'h0   ; // GRP.15(L1.0+A5.0+fo1+ld[5:1]) [F(3.0)<0>,B(4.0)<0>] <0,31> [U5] P1 OP(sel:?)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire[ 5:0] DM_1234              =  DM_1231 | {1'b0,DM_1232}                ; // GRP.15(L1.0+A5.0+fo1+ld[1:1]) [F(4.0)<0>,B(3.0)<0>] <0,63> [U6] P1 OP(or:|)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire       CE_0097              =  N_0003 == 3'h6                          ; // GRP.15(L2.0+A2.0+fo8+ld[1]+S) [F(2.0)<0>,B(5.0)<0>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L314)[UART::adjust_word]
wire[ 6:0] DM_1230              =  (CE_0097) ? I_do_rx_0_B13_2 : 7'h0      ; // GRP.15(L1.0+A7.0+fo1+ld[7:1]) [F(3.0)<0>,B(3.0)<0>] <0,127> [U7] P1 OP(sel:?)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire[ 6:0] O_1356               =  {1'b0,DM_1234} | DM_1230                ; // GRP.15(L1.0+A6.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<0>] <0,127> [U7] P1 OP(or:|)(rv32_io.cpp:L0)[UART::adjust_word]
wire       QC_1226              =  CE_0093 | CE_0095                       ; // GRP.15(L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(4.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire       QC_1227              =  CE_0097 | QC_1226                       ; // GRP.15(L1.0+A1.0+fo1+ld[1:1]) [F(4.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire       QC_1228              =  ! QC_1227                               ; // GRP.15(fo8+ld[1]) [F(4.0)<0>,B(2.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire[ 7:0] DM_1229        =  (QC_1228) ? G__this_uart_rx_word/*prv*/ : 8'h0; // GRP.15(L1.0+A8.0+fo1+ld[8:1]) [F(5.0)<0>,B(2.0)<0>] <0,255> [U8] P1 OP(sel:?)(rv32_io.cpp:L315,L316,L317,L318)[UART::adjust_word]
wire[ 7:0] I_adjust_word_B6_1   =  {1'b0,O_1356} | DM_1229                 ; // GRP.15(L1.0+A7.0+fo1+ld[1:1]) [F(6.0)<0>,B(1.0)<0>] <0,255> [U8] P1 OP(or:|)(rv32_io.cpp:L0)[UART::adjust_word]
wire[ 7:0] L_adjust_word_RET    =  I_adjust_word_B6_1                      ; // GRP.15(NL) [F(6.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(assign:=)(rv32_io.cpp:L320)[UART::adjust_word]
wire[ 7:0] I_do_rx_0_B20_0      =  L_adjust_word_RET/*&8'hff*/             ; // GRP.15(NL) [F(6.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(and:&)(rv32_io.cpp:L367)[UART::do_rx]
wire[ 2:0] I_PROBE_UART_step_B03_0 =  {G_uidx,2'b0}/*<<2*/                 ; //  <B>(NL) [F(0.0)<0>,B(6.0,7.0)<0>] <0,4> [U3] ZLB(2) P1 OP(shl:<<)(./rv32_io.h:L762)[PROBE_UART::step]
wire[ 2:0] I_PROBE_UART_step_B03_1 =  I_PROBE_UART_step_B03_0 | 3'h1       ; //  <B>(NL) [F(0.0)<0>,B(6.0,7.0)<0>] <1,7> [U3] P1 OP(or:|)(./rv32_io.h:L762)[PROBE_UART::step]
wire[ 2:0] I_write_command_0_B08_0 =  I_PROBE_UART_step_B03_1              ; //  <B>(NL) [F(0.0)<0>,B(6.0)<0>] <1,7> [U3] P1 OP(assign:=)(rv32_io.cpp:L466)[UART::write_command]
wire[ 1:0] N_1218               =  I_write_command_0_B08_0[1:0]/*&2'h3*/   ; //  <B>(NL) [F(0.0)<0>,B(6.0)<0>] <0,3> [U2] P1 OP(and:&)(rv32_io.cpp:L466)[UART::write_command]
wire[ 3:0] sub_I_write_command_0_B07_0 = {1'b0,I_PROBE_UART_step_B03_1} - 4'h3; // I_PROBE_UART_step_B03_1 < 4'h3
wire       I_write_command_0_B07_0 = (sub_I_write_command_0_B07_0[3])     ; //  <B>(L1.0+C3.0+A3.0+fo9+ld[1]+S) [F(4.0)<0>,B(4.0,7.0)<0>] <0,1> [U1] P1 OP(lt:<)(rv32_io.cpp:L466)[UART::write_command]
wire       QC_0318              =  ! I_write_command_0_B07_0               ; //  <B>(fo8+ld[1]) [F(4.0)<0>,B(3.0)<0>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L464,L466)[UART::write_command]
/// (printf field...) wire[ 7:0] N_1220             =  (QC_0318) ? _lut_G_HIDDEN_GLOBAL_62 : 8'h0; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(5.0)<0>,B(3.0)<0>] <0,255> [U8] P1 OP(sel:?)(rv32_io.cpp:L464,L466)[UART::write_command]
/// (printf field...) wire[ 7:0] N_1221 =  (I_write_command_0_B07_0) ? I_write_command_0_B08_1 : N_1220; //  <B>(L2.0+A16.0+ld[8:1:1]) [F(7.0)<0>,B(2.0)<0>] <0,255> [U8] P1 OP(sel:?)(rv32_io.cpp:L464,L466)[UART::write_command]
wire       I_update_0_B04_1     =  G__this_state/*prv*/ == 2'h2            ; //  <B>(L1.0+A1.0+ld[1]+S) [F(1.0)<0>,B(1.0)<0>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L735)[PROBE_UART::update]
wire[ 5:0] N_0730               =  G__this_rx_pnt/*prv*/[5:0]/*&6'h3f*/    ; //  <B>(NL) [F(0.0)<0>,B(6.0)<1>] <0,63> [U6] P1 OP(and:&)(./rv32_io.h:L732)[PROBE_UART::update]
wire       N_0733               =  N_0730 == 6'h0                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0735         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0733; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0738              =  QC_0736 | QC_0735                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0739             =  CM_0738 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] I_update_0_B02_0     =  L_do_rx_0_RET & 8'h0                    ; //  <B>(NL) [F(5.0)<0>,B(5.0)<1>] <0,255> [U8] P1 OP(and:&)(./rv32_io.h:L732)[PROBE_UART::update]
wire       I_update_0_B02_1     =  I_update_0_B02_0 == 8'h0                ; //  <B>(L3.0+A7.0+fo8+ld[1]+S) [F(8.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732)[PROBE_UART::update]
wire[ 7:0] I_update_0_B02_2     =  L_do_rx_0_RET/*&8'hff*/                 ; //  <B>(NL) [F(5.0)<0>,B(2.0)<1>] <0,255> [U8] P1 OP(and:&)(./rv32_io.h:L732)[PROBE_UART::update]
wire[ 7:0] I_update_0_B02_3 =  (I_update_0_B02_1) ? I_update_0_B02_2 : 8'h0; //  <B>(L1.0+A8.0+fo60+ld[8:1]) [F(9.0)<0>,B(2.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732)[PROBE_UART::update]
wire[ 7:0] DM_0737              =  (QC_0735) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0742               =  N_0730 == 6'h1                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0744         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0742; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0746              =  QC_0736 | QC_0744                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0747             =  CM_0746 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0745              =  (QC_0744) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0750               =  N_0730 == 6'h2                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0752         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0750; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0754              =  QC_0736 | QC_0752                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0755             =  CM_0754 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0753              =  (QC_0752) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0758               =  N_0730 == 6'h3                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0760         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0758; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0762              =  QC_0736 | QC_0760                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0763             =  CM_0762 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0761              =  (QC_0760) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0766               =  N_0730 == 6'h4                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0768         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0766; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0770              =  QC_0736 | QC_0768                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0771             =  CM_0770 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0769              =  (QC_0768) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0774               =  N_0730 == 6'h5                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0776         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0774; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0778              =  QC_0736 | QC_0776                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0779             =  CM_0778 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0777              =  (QC_0776) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0782               =  N_0730 == 6'h6                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0784         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0782; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0786              =  QC_0736 | QC_0784                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0787             =  CM_0786 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0785              =  (QC_0784) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0790               =  N_0730 == 6'h7                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0792         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0790; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0794              =  QC_0736 | QC_0792                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0795             =  CM_0794 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0793              =  (QC_0792) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0798               =  N_0730 == 6'h8                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0800         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0798; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0802              =  QC_0736 | QC_0800                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0803             =  CM_0802 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0801              =  (QC_0800) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0806               =  N_0730 == 6'h9                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0808         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0806; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0810              =  QC_0736 | QC_0808                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0811             =  CM_0810 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0809              =  (QC_0808) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0814               =  N_0730 == 6'ha                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0816         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0814; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0818              =  QC_0736 | QC_0816                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0819             =  CM_0818 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0817              =  (QC_0816) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0822               =  N_0730 == 6'hb                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0824         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0822; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0826              =  QC_0736 | QC_0824                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0827             =  CM_0826 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0825              =  (QC_0824) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0830               =  N_0730 == 6'hc                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0832         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0830; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0834              =  QC_0736 | QC_0832                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0835             =  CM_0834 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0833              =  (QC_0832) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0838               =  N_0730 == 6'hd                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0840         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0838; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0842              =  QC_0736 | QC_0840                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0843             =  CM_0842 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0841              =  (QC_0840) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0846               =  N_0730 == 6'he                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0848         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0846; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0850              =  QC_0736 | QC_0848                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0851             =  CM_0850 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0849              =  (QC_0848) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0854               =  N_0730 == 6'hf                          ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0856         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0854; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0858              =  QC_0736 | QC_0856                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0859             =  CM_0858 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0857              =  (QC_0856) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0862               =  N_0730 == 6'h10                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0864         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0862; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0866              =  QC_0736 | QC_0864                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0867             =  CM_0866 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0865              =  (QC_0864) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0870               =  N_0730 == 6'h11                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0872         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0870; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0874              =  QC_0736 | QC_0872                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0875             =  CM_0874 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0873              =  (QC_0872) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0878               =  N_0730 == 6'h12                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0880         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0878; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0882              =  QC_0736 | QC_0880                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0883             =  CM_0882 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0881              =  (QC_0880) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0886               =  N_0730 == 6'h13                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0888         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0886; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0890              =  QC_0736 | QC_0888                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0891             =  CM_0890 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0889              =  (QC_0888) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0894               =  N_0730 == 6'h14                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0896         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0894; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0898              =  QC_0736 | QC_0896                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0899             =  CM_0898 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0897              =  (QC_0896) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0902               =  N_0730 == 6'h15                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0904         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0902; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0906              =  QC_0736 | QC_0904                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0907             =  CM_0906 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0905              =  (QC_0904) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0910               =  N_0730 == 6'h16                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0912         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0910; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0914              =  QC_0736 | QC_0912                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0915             =  CM_0914 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0913              =  (QC_0912) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0918               =  N_0730 == 6'h17                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0920         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0918; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0922              =  QC_0736 | QC_0920                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0923             =  CM_0922 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0921              =  (QC_0920) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0926               =  N_0730 == 6'h18                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0928         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0926; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0930              =  QC_0736 | QC_0928                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0931             =  CM_0930 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0929              =  (QC_0928) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0934               =  N_0730 == 6'h19                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0936         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0934; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0938              =  QC_0736 | QC_0936                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0939             =  CM_0938 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0937              =  (QC_0936) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0942               =  N_0730 == 6'h1a                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0944         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0942; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0946              =  QC_0736 | QC_0944                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0947             =  CM_0946 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0945              =  (QC_0944) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0950               =  N_0730 == 6'h1b                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0952         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0950; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0954              =  QC_0736 | QC_0952                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0955             =  CM_0954 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0953              =  (QC_0952) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0958               =  N_0730 == 6'h1c                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0960         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0958; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0962              =  QC_0736 | QC_0960                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0963             =  CM_0962 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0961              =  (QC_0960) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0966               =  N_0730 == 6'h1d                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0968         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0966; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0970              =  QC_0736 | QC_0968                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0971             =  CM_0970 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0969              =  (QC_0968) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0974               =  N_0730 == 6'h1e                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0976         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0974; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0978              =  QC_0736 | QC_0976                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0979             =  CM_0978 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0977              =  (QC_0976) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0982               =  N_0730 == 6'h1f                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0984         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0982; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0986              =  QC_0736 | QC_0984                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0987             =  CM_0986 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0985              =  (QC_0984) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0990               =  N_0730 == 6'h20                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_0992         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0990; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_0994              =  QC_0736 | QC_0992                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0995             =  CM_0994 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_0993              =  (QC_0992) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_0998               =  N_0730 == 6'h21                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1000         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_0998; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1002              =  QC_0736 | QC_1000                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1003             =  CM_1002 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1001              =  (QC_1000) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1006               =  N_0730 == 6'h22                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1008         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1006; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1010              =  QC_0736 | QC_1008                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1011             =  CM_1010 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1009              =  (QC_1008) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1014               =  N_0730 == 6'h23                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1016         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1014; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1018              =  QC_0736 | QC_1016                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1019             =  CM_1018 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1017              =  (QC_1016) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1022               =  N_0730 == 6'h24                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1024         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1022; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1026              =  QC_0736 | QC_1024                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1027             =  CM_1026 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1025              =  (QC_1024) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1030               =  N_0730 == 6'h25                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1032         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1030; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1034              =  QC_0736 | QC_1032                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1035             =  CM_1034 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1033              =  (QC_1032) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1038               =  N_0730 == 6'h26                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1040         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1038; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1042              =  QC_0736 | QC_1040                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1043             =  CM_1042 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1041              =  (QC_1040) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1046               =  N_0730 == 6'h27                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1048         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1046; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1050              =  QC_0736 | QC_1048                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1051             =  CM_1050 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1049              =  (QC_1048) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1054               =  N_0730 == 6'h28                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1056         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1054; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1058              =  QC_0736 | QC_1056                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1059             =  CM_1058 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1057              =  (QC_1056) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1062               =  N_0730 == 6'h29                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1064         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1062; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1066              =  QC_0736 | QC_1064                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1067             =  CM_1066 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1065              =  (QC_1064) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1070               =  N_0730 == 6'h2a                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1072         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1070; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1074              =  QC_0736 | QC_1072                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1075             =  CM_1074 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1073              =  (QC_1072) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1078               =  N_0730 == 6'h2b                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1080         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1078; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1082              =  QC_0736 | QC_1080                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1083             =  CM_1082 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1081              =  (QC_1080) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1086               =  N_0730 == 6'h2c                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1088         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1086; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1090              =  QC_0736 | QC_1088                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1091             =  CM_1090 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1089              =  (QC_1088) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1094               =  N_0730 == 6'h2d                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1096         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1094; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1098              =  QC_0736 | QC_1096                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1099             =  CM_1098 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1097              =  (QC_1096) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1102               =  N_0730 == 6'h2e                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1104         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1102; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1106              =  QC_0736 | QC_1104                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1107             =  CM_1106 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1105              =  (QC_1104) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1110               =  N_0730 == 6'h2f                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1112         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1110; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1114              =  QC_0736 | QC_1112                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1115             =  CM_1114 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1113              =  (QC_1112) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1118               =  N_0730 == 6'h30                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1120         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1118; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1122              =  QC_0736 | QC_1120                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1123             =  CM_1122 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1121              =  (QC_1120) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1126               =  N_0730 == 6'h31                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1128         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1126; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1130              =  QC_0736 | QC_1128                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1131             =  CM_1130 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1129              =  (QC_1128) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1134               =  N_0730 == 6'h32                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1136         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1134; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1138              =  QC_0736 | QC_1136                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1139             =  CM_1138 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1137              =  (QC_1136) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1142               =  N_0730 == 6'h33                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1144         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1142; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1146              =  QC_0736 | QC_1144                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1147             =  CM_1146 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1145              =  (QC_1144) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1150               =  N_0730 == 6'h34                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1152         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1150; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1154              =  QC_0736 | QC_1152                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1155             =  CM_1154 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1153              =  (QC_1152) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1158               =  N_0730 == 6'h35                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1160         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1158; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1162              =  QC_0736 | QC_1160                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1163             =  CM_1162 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1161              =  (QC_1160) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1166               =  N_0730 == 6'h36                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1168         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1166; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1170              =  QC_0736 | QC_1168                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1171             =  CM_1170 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1169              =  (QC_1168) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1174               =  N_0730 == 6'h37                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1176         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1174; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1178              =  QC_0736 | QC_1176                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1179             =  CM_1178 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1177              =  (QC_1176) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1182               =  N_0730 == 6'h38                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1184         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1182; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1186              =  QC_0736 | QC_1184                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1187             =  CM_1186 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1185              =  (QC_1184) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1190               =  N_0730 == 6'h39                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1192         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1190; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1194              =  QC_0736 | QC_1192                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1195             =  CM_1194 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1193              =  (QC_1192) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1198               =  N_0730 == 6'h3a                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1200         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1198; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1202              =  QC_0736 | QC_1200                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1203             =  CM_1202 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1201              =  (QC_1200) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1206               =  N_0730 == 6'h3b                         ; //  <B>(L3.0+A5.0+fo1+ld[1]+S) [F(3.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(eq:==)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       QC_1208         =  G__this_uart_rx_buf_not_empty/*prv*/ & N_1206; //  <B>(L1.0+A1.0+fo9+ld[1:1]) [F(4.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       CM_1210              =  QC_0736 | QC_1208                       ; //  <B>(L1.0+A1.0+fo1+ld[1:1]) [F(5.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       N_1211             =  CM_1210 & CP_PROBE_UART_step_B01_F2_B02_F2; //  <B>(L1.0+A1.0+fo8+ld[1:1]) [F(10.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire[ 7:0] DM_1209              =  (QC_1208) ? I_update_0_B02_3 : 8'h0     ; //  <B>(L1.0+A8.0+fo1+ld[8:1]) [F(10.0)<0>,B(1.0)<1>] <0,255> [U8] P1 OP(sel:?)(./rv32_io.h:L732,L779)[PROBE_UART::step]
wire       A_1420               =  I_do_tx_0_B18_2 & A_1388                ; // (L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L284)[UART::do_tx]
wire       AO_1444              =  A_1420 | A_1435                         ; // (L1.0+A1.0+fo1+ld[1:1]) [F(14.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       CM_0679              =  AO_1444 & CE_0134                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       CM_0655              =  CP_do_tx_1_B20_F2 | CM_0648             ; // (L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
wire       CM_0685              =  CM_0679 | CM_0655                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       AO_1407              =  CE_0149 | CE_0151                       ; // (L1.0+A1.0+fo2+ld[1:1]) [F(2.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       AO_1406              =  AO_1407 & CP_do_tx_0_B01_F2             ; // (L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       A_1408               =  I_do_tx_0_B18_2 & A_1383                ; // (L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(and:&)(rv32_io.cpp:L284)[UART::do_tx]
wire       AO_1442              =  A_1408 | A_1431                         ; // (L1.0+A1.0+fo1+ld[1:1]) [F(14.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       AO_1449              =  AO_1406 | AO_1442                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(15.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       CM_0682              =  AO_1449 & CE_0134                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       AO_1418              =  AO_1407 & CP_do_tx_1_B01_F2             ; // (L1.0+A1.0+fo1+ld[1:1]) [F(11.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       CM_0677              =  AO_1418 & CE_0134                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(and:&)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       O_1457               =  CM_0682 | CM_0677                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       CM_0686              =  CM_0651 | O_1457                        ; // (L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       CM_0688              =  CM_0685 | CM_0686                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(33.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       I_do_tx_0_B12_0      =  ! I_do_tx_0_B11_2                       ; // (fo2+ld[1]) [F(0.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L267)[UART::do_tx]
wire       MA_1402              =  (A_1381) ? I_do_tx_0_B12_0 : 1'h0       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       DM_0667              =  (CE_0134) ? MA_1402 : 1'h0              ; // (L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       DM_0673              =  DM_0667 | DM_0656                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       N_0006               =  G__this_uart_parity_type/*prv*/ & 1'h1  ; // (NL) [F(0.0)<0>,B(12.0)<1>] <0,0> [U0] P1 OP(and:&)(rv32_io.cpp:L217)[UART::parity_bit]
wire       CE_0175              =  {2'b0,N_0006} == 3'h5                   ; // (L2.0+A2.0+fo3+ld[1]+S) [F(2.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L217)[UART::parity_bit]
wire       CE_0171              =  N_0006 == 1'h1                          ; // (fo3+ld[1]+S) [F(0.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L217)[UART::parity_bit]
wire       CE_0173              =  {1'b0,N_0006} == 2'h3                   ; // (L1.0+A1.0+fo1+ld[1]+S) [F(1.0)<0>,B(12.0)<1>] <0,1> [U1] P1 OP(eq:==)(rv32_io.cpp:L217)[UART::parity_bit]
wire       QC_0419              =  CE_0171 | CE_0173                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(2.0)<0>,B(11.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L217,L218,L280)[UART::parity_bit]
wire       QC_0420              =  CE_0175 | QC_0419                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L217,L218,L280)[UART::parity_bit]
wire       QC_0421              =  ! QC_0420                               ; // (fo1+ld[1]) [F(3.0)<0>,B(9.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L217,L218,L280)[UART::parity_bit]
wire       O_1333               =  CE_0171 | CE_0175                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(3.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L217,L218,L280)[UART::parity_bit]
wire       CM_1261              =  QC_0421 | O_1333                        ; // (L1.0+A1.0+fo2+ld[1:1]) [F(4.0)<0>,B(9.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L217,L218,L280)[UART::parity_bit]
wire       I_parity_bit_1_B3_0  =  ! G__this_uart_tx_parity/*prv*/         ; // (fo1+ld[1]) [F(0.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L218)[UART::parity_bit]
wire       DM_1259              =  (CE_0171) ? I_parity_bit_1_B3_0 : 1'h0  ; // (L1.0+A1.0+fo1+ld[1:1]) [F(1.0)<0>,B(10.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L217,L218,L280)[UART::parity_bit]
wire       DM_1262              =  DM_1259 | CE_0175                       ; // (L1.0+A1.0+fo2+ld[1:1]) [F(3.0)<0>,B(9.0)<1>] <0,1> [U1] P1 OP(or:|)(rv32_io.cpp:L217,L218,L280)[UART::parity_bit]
wire       L_parity_bit_2_RET =  (CM_1261) ? DM_1262 : G__this_uart_tx_parity/*prv*/; // (L2.0+A2.0+fo1+ld[1:1:1]) [F(6.0)<0>,B(8.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L223)[UART::parity_bit]
wire       I_do_tx_1_B17_0      =  ! L_parity_bit_2_RET                    ; // (fo1+ld[1]) [F(6.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L280)[UART::do_tx]
wire       MA_1417              =  (A_1387) ? I_do_tx_1_B17_0 : 1'h0       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       MA_1414              =  (A_1386) ? I_do_tx_0_B12_0 : 1'h0       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(6.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       MAO_1434             =  MA_1417 | MA_1414                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(13.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       DM_0678              =  (CE_0134) ? MAO_1434 : 1'h0             ; // (L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       L_parity_bit_1_RET =  (CM_1261) ? DM_1262 : G__this_uart_tx_parity/*prv*/; // (L2.0+A2.0+fo1+ld[1:1:1]) [F(6.0)<0>,B(7.0)<1>] <0,1> [U1] P1 OP(sel:?)(rv32_io.cpp:L223)[UART::parity_bit]
wire       I_do_tx_0_B17_0      =  ! L_parity_bit_1_RET                    ; // (fo1+ld[1]) [F(6.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(not:!)(rv32_io.cpp:L280)[UART::do_tx]
wire       MA_1405              =  (A_1382) ? I_do_tx_0_B17_0 : 1'h0       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(12.0)<0>,B(5.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       DM_0668              =  (CE_0134) ? MA_1405 : 1'h0              ; // (L1.0+A1.0+fo1+ld[1:1]) [F(30.0)<0>,B(4.0)<1>] <0,1> [U1] P1 OP(sel:?)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       O_1458               =  DM_0678 | DM_0668                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(31.0)<0>,B(3.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       DM_0687              =  CM_0651 | O_1458                        ; // (L1.0+A1.0+fo1+ld[1:1]) [F(32.0)<0>,B(2.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
wire       DM_0689              =  DM_0673 | DM_0687                       ; // (L1.0+A1.0+fo1+ld[1:1]) [F(33.0)<0>,B(1.0)<1>] <0,1> [U1] P1 OP(or:|)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]


  //// pipe-stage(1)  : printf...

  always @ (posedge clk) if (rst_n) begin
    if (CP_PROBE_UART_step_B02_F1) begin
      $write("[%6d] ", G__this_cycle/*prv*/); //  <B*>(fo3) [F(8.0)<0>,B(0.0)<0>] <0,0> [U0] ZLB(64) P1(rv32_io.cpp:L465)[UART::write_command]
      if(I_write_command_0_B07_0) printf_gep_array_0(N_1218); else if(QC_0318) $write("<UART_EXT-1>");
    else ; /// printf(); --> do nothing...
 //  <B*>(fo2) [F(8.0)<0>,B(0.0)<0>] <0,0> [U0] ZLB(64) P1(rv32_io.cpp:L0)[UART::write_command]
    end /// (CP_PROBE_UART_step_B02_F1)
    if (0                        )  $write(" (deactivate)\n"); //  <B*> [F(8.0)<0>,B(0.0)<0>] <0,0> [U0] ZLB(64) P1(rv32_io.cpp:L477)[UART::write_command]
    if (CP_PROBE_UART_step_B06_F2)  /// format string conversion : ("[%6d] RX[%2d]:%2x:%c\n") --> ("[%6d] RX[%2d]:%2h:%c\n")
$write("[%6d] RX[%2d]:%2h:%c\n", G__this_cycle/*prv*/, G__this_rx_pnt/*prv*/, L_do_rx_0_RET, L_do_rx_0_RET); //  <B*>(fo2) [F(10.0)<0>,B(0.0)<0>] <0,0> [U0] ZLB(64) P1(./rv32_io.h:L730)[PROBE_UART::update]
  end /// printfNodes


  //// pipe-stage(1) : pipe-registers...

  always @ (posedge clk or negedge rst_n) begin
  if (rst_n == 1'b0) begin
    _p1_CP_PROBE_UART_step_B02_F1 <= 0;
    _p1_CP_PROBE_UART_step_B06_F2 <= 0;
    _p1_G_uidx                    <= 0;
    _p1_I_PROBE_UART_step_B12_1   <= 0;
    _p1_I_update_0_B01_7          <= 0;
    _p1_I_update_0_B04_1          <= 0;
    _p1_PROBE_UART_step_pSetup    <= 0;
    _p1_DFB_G__this_cycle/*prv*/  <= 0;
  end // (rst_n)
  else begin
    _p1_CP_PROBE_UART_step_B02_F1 <= CP_PROBE_UART_step_B02_F1 ; /*   1 bits */
    _p1_CP_PROBE_UART_step_B06_F2 <= CP_PROBE_UART_step_B06_F2 ; /*   1 bits */
    _p1_G_uidx                    <= G_uidx                    ; /*   1 bits */
    _p1_I_PROBE_UART_step_B12_1   <= I_PROBE_UART_step_B12_1   ; /*   1 bits */
    _p1_I_update_0_B01_7          <= I_update_0_B01_7          ; /*   1 bits */
    _p1_I_update_0_B04_1          <= I_update_0_B04_1          ; /*   1 bits */
    _p1_PROBE_UART_step_pSetup    <= ROOT_CP                   ; /*   0 bits */
    _p1_DFB_G__this_cycle/*prv*/  <= G__this_cycle/*prv*/      ; /*  32 bits */ /*feedback-wire*/
  end /*else*/
  end /*always @ ...*/


  //// pipe-stage(1)  : state-registers...

  always @ (posedge clk or negedge rst_n) begin
/*skipped FW_STATE_ARRAY(G._(*this).rx_buf)*/
  if (rst_n == 1'b0) begin
    G__this_cycle                 <= 32'h0;
    G__this_uart_rx_buf_not_empty <= 1'h0 ;
    G__this_uart_rx_buf_full      <= 1'h0 ;
    G__this_uart_rx_buf_rp        <= 4'h0 ;
    G__this_uart_rx_buf_wp        <= 4'h0 ;
    G__this_uart_rx_buf_buf[0]    <= 8'h0 ;
    G__this_uart_rx_buf_buf[1]    <= 8'h0 ;
    G__this_uart_rx_buf_buf[2]    <= 8'h0 ;
    G__this_uart_rx_word          <= 8'h0 ;
    G__this_uart_rx_state         <= 2'h0 ;
    G__this_uart_rx_bit_n         <= 1'h0 ;
    G__this_uart_rx_parity        <= 1'h0 ;
    G__this_uart_rx_bit_pos       <= 4'h0 ;
    G__this_uart_rx_tick          <= 16'h0;
    G__this_uart_tx_buf_not_empty <= 1'h0 ;
    G__this_uart_tx_buf_full      <= 1'h0 ;
    G__this_uart_tx_buf_rp        <= 4'h0 ;
    G__this_uart_tx_buf_wp        <= 4'h0 ;
    G__this_uart_tx_buf_buf[0]    <= 8'h0 ;
    G__this_uart_tx_buf_buf[1]    <= 8'h0 ;
    G__this_uart_tx_buf_buf[2]    <= 8'h0 ;
    G__this_uart_tx_word          <= 8'h0 ;
    G__this_uart_tx_state         <= 2'h0 ;
    G__this_uart_tx_parity        <= 1'h0 ;
    G__this_uart_tx_bit_pos       <= 4'h0 ;
    G__this_uart_tx_tick          <= 16'h0;
    G__this_state                 <= 2'h0 ;
    G__this_rx_pnt                <= 16'h0;
    G__this_clear_rx_buf          <= 1'h0 ;
    G__this_mode                  <= 32'h0;
    G__this_uart_baud_period_m1   <= 11'h0;
    G__this_uart_bit_count_m1     <= 3'h0 ;
    G__this_uart_stop_count       <= 1'h0 ;
    G__this_uart_parity_type      <= 1'h0 ;
    G__this_rx_buf[0]             <= 8'h0 ;
    G__this_rx_buf[1]             <= 8'h0 ;
    G__this_rx_buf[2]             <= 8'h0 ;
    G__this_rx_buf[3]             <= 8'h0 ;
    G__this_rx_buf[4]             <= 8'h0 ;
    G__this_rx_buf[5]             <= 8'h0 ;
    G__this_rx_buf[6]             <= 8'h0 ;
    G__this_rx_buf[7]             <= 8'h0 ;
    G__this_rx_buf[8]             <= 8'h0 ;
    G__this_rx_buf[9]             <= 8'h0 ;
    G__this_rx_buf[10]            <= 8'h0 ;
    G__this_rx_buf[11]            <= 8'h0 ;
    G__this_rx_buf[12]            <= 8'h0 ;
    G__this_rx_buf[13]            <= 8'h0 ;
    G__this_rx_buf[14]            <= 8'h0 ;
    G__this_rx_buf[15]            <= 8'h0 ;
    G__this_rx_buf[16]            <= 8'h0 ;
    G__this_rx_buf[17]            <= 8'h0 ;
    G__this_rx_buf[18]            <= 8'h0 ;
    G__this_rx_buf[19]            <= 8'h0 ;
    G__this_rx_buf[20]            <= 8'h0 ;
    G__this_rx_buf[21]            <= 8'h0 ;
    G__this_rx_buf[22]            <= 8'h0 ;
    G__this_rx_buf[23]            <= 8'h0 ;
    G__this_rx_buf[24]            <= 8'h0 ;
    G__this_rx_buf[25]            <= 8'h0 ;
    G__this_rx_buf[26]            <= 8'h0 ;
    G__this_rx_buf[27]            <= 8'h0 ;
    G__this_rx_buf[28]            <= 8'h0 ;
    G__this_rx_buf[29]            <= 8'h0 ;
    G__this_rx_buf[30]            <= 8'h0 ;
    G__this_rx_buf[31]            <= 8'h0 ;
    G__this_rx_buf[32]            <= 8'h0 ;
    G__this_rx_buf[33]            <= 8'h0 ;
    G__this_rx_buf[34]            <= 8'h0 ;
    G__this_rx_buf[35]            <= 8'h0 ;
    G__this_rx_buf[36]            <= 8'h0 ;
    G__this_rx_buf[37]            <= 8'h0 ;
    G__this_rx_buf[38]            <= 8'h0 ;
    G__this_rx_buf[39]            <= 8'h0 ;
    G__this_rx_buf[40]            <= 8'h0 ;
    G__this_rx_buf[41]            <= 8'h0 ;
    G__this_rx_buf[42]            <= 8'h0 ;
    G__this_rx_buf[43]            <= 8'h0 ;
    G__this_rx_buf[44]            <= 8'h0 ;
    G__this_rx_buf[45]            <= 8'h0 ;
    G__this_rx_buf[46]            <= 8'h0 ;
    G__this_rx_buf[47]            <= 8'h0 ;
    G__this_rx_buf[48]            <= 8'h0 ;
    G__this_rx_buf[49]            <= 8'h0 ;
    G__this_rx_buf[50]            <= 8'h0 ;
    G__this_rx_buf[51]            <= 8'h0 ;
    G__this_rx_buf[52]            <= 8'h0 ;
    G__this_rx_buf[53]            <= 8'h0 ;
    G__this_rx_buf[54]            <= 8'h0 ;
    G__this_rx_buf[55]            <= 8'h0 ;
    G__this_rx_buf[56]            <= 8'h0 ;
    G__this_rx_buf[57]            <= 8'h0 ;
    G__this_rx_buf[58]            <= 8'h0 ;
    G__this_rx_buf[59]            <= 8'h0 ;
    G__this_uart_tx_bit_n         <= 1'h0 ;
  end /// (rst_n == 1'b0)
  else begin /*reg-assignments*/
    if (ROOT_CP)  G__this_cycle <= I_PROBE_UART_step_B17_1; // GRP.10 <B>(ld[32:1]+S+@) [F(34.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(./rv32_io.h:L810)[PROBE_UART::step]
    if (CM_0519) begin
      G__this_uart_rx_buf_not_empty <= DM_0518     ; // GRP.15 <B>(ld[1:1]+S+@) [F(42.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L68,L73)[PROBE_UART::step]
      G__this_uart_rx_buf_full      <= DM_0520     ; // GRP.15 <B>(ld[1:1]+S+@) [F(41.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L68,L74)[PROBE_UART::step]
      G__this_uart_rx_buf_rp        <= DM_0522[3:0]; // GRP.15 <B>(ld[4:1]+S+@) [F(36.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(./rv32_io.h:L68,L75)[PROBE_UART::step]
      G__this_uart_rx_buf_wp        <= DM_0524[3:0]; // GRP.15 <B>(ld[4:1]+S+@) [F(36.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(./rv32_io.h:L68,L76)[PROBE_UART::step]
    end /// (CM_0519)
    if (N_0532) begin
      G__this_uart_rx_word   <= DM_0529; // GRP.15(ld[8:1]+S+@) [F(33.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L353)[UART::do_rx]
      G__this_uart_rx_parity <= DM_0546; // GRP.12(ld[1:1]+S+@) [F(33.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L354)[UART::do_rx]
    end /// (N_0532)
    if (CM_0542)  G__this_uart_rx_state   <= DM_0543     ; // GRP.15 <B>(ld[2:1]+S+@) [F(33.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(clk:@)(./rv32_io.h:L509,L510)(rv32_io.cpp:L356,L364,L375,L382)[PROBE_UART::step]
    if (CM_0545)  G__this_uart_rx_bit_n   <= DM_0544     ; // GRP.15 <B>(ld[1:1]+S+@) [F(10.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L509,L771)[PROBE_UART::step]
    if (N_0560 )  G__this_uart_rx_bit_pos <= DM_0557[3:0]; // GRP.15 <B>(ld[4:1]+S+@) [F(33.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L369,L371,L376)[UART::do_rx]
    if (CM_0563)  G__this_uart_rx_tick    <= DM_0561     ; // GRP.15 <B>(ld[16:1]+S+@) [F(32.0)<0>,B(0.0)<0>] <0,65535> [U16] P1 OP(clk:@)(./rv32_io.h:L509)(rv32_io.cpp:L349,L360)[PROBE_UART::step]
    if (CM_0567) begin
      G__this_uart_tx_buf_not_empty <= DM_0568     ; // GRP.16(ld[1:1]+S+@) [F(43.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L68,L73)[PROBE_UART::step]
      G__this_uart_tx_buf_full      <= DM_0573     ; // GRP.16(ld[1:1]+S+@) [F(42.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L68,L74)[PROBE_UART::step]
      G__this_uart_tx_buf_rp        <= DM_0578[3:0]; // GRP.16(ld[4:1]+S+@) [F(37.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(./rv32_io.h:L68,L75)[PROBE_UART::step]
      G__this_uart_tx_buf_wp        <= DM_0583[3:0]; // GRP.16(ld[4:1]+S+@) [F(36.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(./rv32_io.h:L68,L76)[PROBE_UART::step]
    end /// (CM_0567)
    if (N_0602)  G__this_uart_tx_buf_buf[0] <= I_do_tx_1_B25_0; // RA.GRP.0(ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(clk:@)(rv32_io.cpp:L307)[PROBE_UART::step]
    if (N_0606)  G__this_uart_tx_buf_buf[1] <= I_do_tx_1_B25_0; // RA.GRP.0(ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(clk:@)(rv32_io.cpp:L307)[PROBE_UART::step]
    if (N_0610)  G__this_uart_tx_buf_buf[2] <= I_do_tx_1_B25_0; // RA.GRP.0(ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(clk:@)(rv32_io.cpp:L307)[PROBE_UART::step]
    if (N_0643) begin
      G__this_uart_tx_word   <= DM_0642; // GRP.14(ld[8:1]+S+@) [F(41.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L277)[PROBE_UART::step]
      G__this_uart_tx_parity <= DM_0697; // GRP.13(ld[1:1]+S+@) [F(34.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L276)[PROBE_UART::step]
    end /// (N_0643)
    if (CM_0665           )  G__this_uart_tx_state           <= DM_0666         ; // GRP.16(ld[2:1]+S+@) [F(34.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(clk:@)(./rv32_io.h:L509,L510)(rv32_io.cpp:L260,L270,L281,L299)[PROBE_UART::step]
    if (N_0715            )  G__this_uart_tx_bit_pos         <= DM_0714[3:0]    ; // GRP.16(ld[4:1]+S+@) [F(34.0)<0>,B(0.0)<0>] <0,15> [U4] P1 OP(clk:@)(./rv32_io.h:L510)(rv32_io.cpp:L0,L286)[PROBE_UART::step]
    if (CM_0721           )  G__this_uart_tx_tick            <= DM_0722         ; // GRP.16(ld[16:1]+S+@) [F(33.0)<0>,B(0.0)<0>] <0,65535> [U16] P1 OP(clk:@)(./rv32_io.h:L509)(rv32_io.cpp:L259,L264)[PROBE_UART::step]
    if (CM_0728           )  G__this_state                   <= DM_0729         ; // GRP.15 <B>(ld[2:1]+S+@) [F(13.0)<0>,B(0.0)<0>] <0,3> [U2] P1 OP(clk:@)(./rv32_io.h:L0,L763)[PROBE_UART::step]
    if (CM_1214           )  G__this_rx_pnt                  <= DM_1212         ; // GRP.15 <B>(ld[16:1]+S+@) [F(19.0)<0>,B(0.0)<0>] <0,65535> [U16] P1 OP(clk:@)(./rv32_io.h:L752,L755,L764)[PROBE_UART::step]
    if (N_1217            )  G__this_clear_rx_buf            <= QC_1215         ; // GRP.11 <B>(ld[1:1]+S+@) [F(12.0)<0>,B(0.0)<0>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L753,L778)[PROBE_UART::step]
    if (CP_update_0_B09_F2)  G__this_mode                    <= I_update_0_B10_0; // GRP.15 <B>(ld[32:1]+S+@) [F(12.0)<0>,B(0.0)<0>] <0,4294967295> [U32] P1 OP(clk:@)(./rv32_io.h:L746)[PROBE_UART::update]
    if (CP_do_rx_0_B18_F1 )  G__this_uart_rx_buf_buf[N_0526] <= I_do_rx_0_B20_0 ; // GRP.15(S+@) [F(30.0)<0>,B(0.0)<0>] <0,255> [U8] P1 OP(clk_array:[]@)(rv32_io.cpp:L367)
    if (CP_PROBE_UART_step_B02_F1) begin
      G__this_uart_baud_period_m1 <= 11'h515; // GRP.15 <B>(fo4+ld[11:1]+S+@) [F(8.0)<0>,B(0.0)<1>] <0,1301> [U11] P1 OP(clk:@)(rv32_io.cpp:L459)[UART::write_command]
      G__this_uart_bit_count_m1   <= 3'h7   ; // GRP.15 <B>(fo5+ld[3:1]+S+@) [F(8.0)<0>,B(0.0)<1>] <0,7> [U3] P1 OP(clk:@)(rv32_io.cpp:L460)[UART::write_command]
      G__this_uart_stop_count     <= 1'h1   ; // GRP.15 <B>(fo2+ld[1:1]+S+@) [F(8.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(clk:@)(rv32_io.cpp:L461)[UART::write_command]
      G__this_uart_parity_type    <= 1'h0   ; // GRP.15 <B>(fo4+ld[1:1]+S+@) [F(8.0)<0>,B(0.0)<1>] <0,0> [U0] P1 OP(clk:@)(rv32_io.cpp:L462)[UART::write_command]
    end /// (CP_PROBE_UART_step_B02_F1)
    if (N_0739 )  G__this_rx_buf[0]     <= DM_0737; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0747 )  G__this_rx_buf[1]     <= DM_0745; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0755 )  G__this_rx_buf[2]     <= DM_0753; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0763 )  G__this_rx_buf[3]     <= DM_0761; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0771 )  G__this_rx_buf[4]     <= DM_0769; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0779 )  G__this_rx_buf[5]     <= DM_0777; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0787 )  G__this_rx_buf[6]     <= DM_0785; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0795 )  G__this_rx_buf[7]     <= DM_0793; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0803 )  G__this_rx_buf[8]     <= DM_0801; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0811 )  G__this_rx_buf[9]     <= DM_0809; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0819 )  G__this_rx_buf[10]    <= DM_0817; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0827 )  G__this_rx_buf[11]    <= DM_0825; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0835 )  G__this_rx_buf[12]    <= DM_0833; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0843 )  G__this_rx_buf[13]    <= DM_0841; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0851 )  G__this_rx_buf[14]    <= DM_0849; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0859 )  G__this_rx_buf[15]    <= DM_0857; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0867 )  G__this_rx_buf[16]    <= DM_0865; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0875 )  G__this_rx_buf[17]    <= DM_0873; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0883 )  G__this_rx_buf[18]    <= DM_0881; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0891 )  G__this_rx_buf[19]    <= DM_0889; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0899 )  G__this_rx_buf[20]    <= DM_0897; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0907 )  G__this_rx_buf[21]    <= DM_0905; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0915 )  G__this_rx_buf[22]    <= DM_0913; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0923 )  G__this_rx_buf[23]    <= DM_0921; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0931 )  G__this_rx_buf[24]    <= DM_0929; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0939 )  G__this_rx_buf[25]    <= DM_0937; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0947 )  G__this_rx_buf[26]    <= DM_0945; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0955 )  G__this_rx_buf[27]    <= DM_0953; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0963 )  G__this_rx_buf[28]    <= DM_0961; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0971 )  G__this_rx_buf[29]    <= DM_0969; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0979 )  G__this_rx_buf[30]    <= DM_0977; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0987 )  G__this_rx_buf[31]    <= DM_0985; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_0995 )  G__this_rx_buf[32]    <= DM_0993; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1003 )  G__this_rx_buf[33]    <= DM_1001; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1011 )  G__this_rx_buf[34]    <= DM_1009; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1019 )  G__this_rx_buf[35]    <= DM_1017; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1027 )  G__this_rx_buf[36]    <= DM_1025; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1035 )  G__this_rx_buf[37]    <= DM_1033; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1043 )  G__this_rx_buf[38]    <= DM_1041; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1051 )  G__this_rx_buf[39]    <= DM_1049; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1059 )  G__this_rx_buf[40]    <= DM_1057; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1067 )  G__this_rx_buf[41]    <= DM_1065; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1075 )  G__this_rx_buf[42]    <= DM_1073; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1083 )  G__this_rx_buf[43]    <= DM_1081; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1091 )  G__this_rx_buf[44]    <= DM_1089; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1099 )  G__this_rx_buf[45]    <= DM_1097; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1107 )  G__this_rx_buf[46]    <= DM_1105; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1115 )  G__this_rx_buf[47]    <= DM_1113; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1123 )  G__this_rx_buf[48]    <= DM_1121; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1131 )  G__this_rx_buf[49]    <= DM_1129; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1139 )  G__this_rx_buf[50]    <= DM_1137; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1147 )  G__this_rx_buf[51]    <= DM_1145; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1155 )  G__this_rx_buf[52]    <= DM_1153; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1163 )  G__this_rx_buf[53]    <= DM_1161; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1171 )  G__this_rx_buf[54]    <= DM_1169; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1179 )  G__this_rx_buf[55]    <= DM_1177; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1187 )  G__this_rx_buf[56]    <= DM_1185; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1195 )  G__this_rx_buf[57]    <= DM_1193; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1203 )  G__this_rx_buf[58]    <= DM_1201; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (N_1211 )  G__this_rx_buf[59]    <= DM_1209; // RA.GRP.9 <B>(fo1+ld[8:1]+S+@) [F(10.0)<0>,B(0.0)<1>] <0,255> [U8] P1 OP(clk:@)(./rv32_io.h:L732,L779)[PROBE_UART::step]
    if (CM_0688)  G__this_uart_tx_bit_n <= DM_0689; // (ld[1:1]+S+@) [F(33.0)<0>,B(0.0)<1>] <0,1> [U1] P1 OP(clk:@)(./rv32_io.h:L766)(rv32_io.cpp:L249,L267,L280,L285,L296,L300)[PROBE_UART::step]
  end /// reg-assignments
  end /// always @ ...

  /*probe assignments*/
  assign _prb_PROBE_UART_step_pSetup = _p1_PROBE_UART_step_pSetup;

endmodule // PROBE_UART_step_no_mem

